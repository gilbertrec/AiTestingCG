{"...repos_filtered.IntelAI": [], "...repos_filtered.IntelAI.models": [], "...repos_filtered.IntelAI.models.tools": [], "...repos_filtered.IntelAI.models.tools.docker": [], "...repos_filtered.IntelAI.models.tools.docker.assembler": ["absl.flags.DEFINE_integer", "absl.flags.DEFINE_multi_string", "absl.flags.DEFINE_string", "absl.app.run", "absl.flags.DEFINE_boolean"], "absl.flags.DEFINE_string": [], "absl.flags.DEFINE_integer": [], "absl.flags.DEFINE_boolean": [], "absl.flags.DEFINE_multi_string": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.TfDockerTagValidator.__init__": ["<builtin>.super"], "<builtin>.super": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.TfDockerTagValidator._validate_ispartial": ["cerberus.Validator._error"], "cerberus.Validator._error": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.TfDockerTagValidator._validate_isfullarg": ["cerberus.Validator._error"], "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint": ["<builtin>.print"], "<builtin>.print": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.aggregate_all_slice_combinations": ["itertools.product", "<builtin>.list", "copy.deepcopy"], "copy.deepcopy": [], "itertools.product": [], "<builtin>.list": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.build_name_from_slices": ["copy.deepcopy"], "...repos_filtered.IntelAI.models.tools.docker.assembler.update_args_dict": ["<builtin>.isinstance", "absl.flags.FLAGS.arg.items", "absl.flags.FLAGS.arg.partition"], "<builtin>.isinstance": [], "absl.flags.FLAGS.arg.partition": [], "absl.flags.FLAGS.arg.items": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.get_slice_sets_and_required_args": ["re.compile"], "re.compile": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.gather_tag_args": ["<builtin>.exit", "...repos_filtered.IntelAI.models.tools.docker.assembler.update_args_dict", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint"], "<builtin>.exit": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.gather_slice_list_items": ["itertools.chain", "<builtin>.list"], "itertools.chain": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.find_first_slice_value": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.assemble_tags": ["<builtin>.len", "...repos_filtered.IntelAI.models.tools.docker.assembler.aggregate_all_slice_combinations", "...repos_filtered.IntelAI.models.tools.docker.assembler.gather_tag_args", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "...repos_filtered.IntelAI.models.tools.docker.assembler.merge_partials", "...repos_filtered.IntelAI.models.tools.docker.assembler.build_name_from_slices", "...repos_filtered.IntelAI.models.tools.docker.assembler.get_slice_sets_and_required_args", "...repos_filtered.IntelAI.models.tools.docker.assembler.find_first_slice_value", "...repos_filtered.IntelAI.models.tools.docker.assembler.merge_docs", "collections.defaultdict", "...repos_filtered.IntelAI.models.tools.docker.assembler.gather_slice_list_items"], "collections.defaultdict": [], "<builtin>.len": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.merge_docs": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.merge_partials": ["<builtin>.list"], "...repos_filtered.IntelAI.models.tools.docker.assembler.doc_contents": ["...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "<builtin>.open"], "<builtin>.open": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.upload_in_background": ["...repos_filtered.IntelAI.models.tools.docker.assembler.eprint"], "...repos_filtered.IntelAI.models.tools.docker.assembler.mkdir_p": ["os.makedirs"], "os.makedirs": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.delete_dockerfiles": ["os.path.join", "<builtin>.print", "os.path.exists", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "os.unlink"], "os.path.join": [], "os.path.exists": [], "os.unlink": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.gather_existing_partials": ["<builtin>.len", "os.path.join", "os.walk", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "<builtin>.open", "sys.exit"], "os.walk": [], "sys.exit": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.get_package_name": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.get_file": ["os.makedirs", "os.path.isdir", "shutil.copy", "os.path.isfile", "os.path.join", "os.remove", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "distutils.dir_util.copy_tree", "sys.exit", "shutil.rmtree", "os.path.dirname"], "os.path.isdir": [], "os.path.dirname": [], "distutils.dir_util.copy_tree": [], "shutil.rmtree": [], "os.remove": [], "os.path.isfile": [], "shutil.copy": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.get_download": ["os.makedirs", "os.path.isdir", "urllib.request.urlretrieve", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "os.path.dirname"], "urllib.request.urlretrieve": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.run": ["subprocess.Popen"], "subprocess.Popen": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.set_test_args": ["<builtin>.open"], "...repos_filtered.IntelAI.models.tools.docker.assembler.cfg_set_namespace": ["...repos_filtered.IntelAI.models.tools.docker.assembler.run", "os.chdir", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "os.getcwd"], "os.getcwd": [], "os.chdir": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.cfg_set_values": ["sys.exit", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "...repos_filtered.IntelAI.models.tools.docker.assembler.run"], "...repos_filtered.IntelAI.models.tools.docker.assembler.write_deployment": ["os.path.isdir", "<builtin>.len", "shutil.rmtree", "...repos_filtered.IntelAI.models.tools.docker.assembler.mkdir_p", "...repos_filtered.IntelAI.models.tools.docker.assembler.run", "tempfile.mkdtemp", "os.path.join", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "re.search", "...repos_filtered.IntelAI.models.tools.docker.assembler.extract_tar", "...repos_filtered.IntelAI.models.tools.docker.assembler.cfg_set_namespace", "os.getcwd", "...repos_filtered.IntelAI.models.tools.docker.assembler.cfg_set_values", "<builtin>.open", "sys.exit", "...repos_filtered.IntelAI.models.tools.docker.assembler.get_package_name", "os.path.dirname"], "tempfile.mkdtemp": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.extract_tar": ["tarfile.open", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "tarfile.is_tarfile"], "re.search": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.write_package": ["os.path.isdir", "<builtin>.len", "tarfile.open", "shutil.rmtree", "tempfile.mkdtemp", "os.path.join", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "...repos_filtered.IntelAI.models.tools.docker.assembler.get_file", "os.mkdir", "os.getcwd", "<builtin>.open", "git.Repo", "<builtin>.str", "...repos_filtered.IntelAI.models.tools.docker.assembler.get_package_name", "...repos_filtered.IntelAI.models.tools.docker.assembler.get_download"], "os.mkdir": [], "tarfile.open": [], "git.Repo": [], "<builtin>.str": [], "tarfile.is_tarfile": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.read_spec_file": ["yaml.safe_load", "os.path.join", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "...repos_filtered.IntelAI.models.tools.docker.assembler.update_spec", "<builtin>.open"], "yaml.safe_load": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.update_spec": ["<builtin>.len", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "...repos_filtered.IntelAI.models.tools.docker.assembler.update_spec", "<builtin>.set", "<builtin>.exit", "<builtin>.isinstance", "<builtin>.list"], "...repos_filtered.IntelAI.models.tools.docker.assembler.read_spec_files": ["os.path.isdir", "...repos_filtered.IntelAI.models.tools.docker.assembler.read_spec_files", "os.path.join", "...repos_filtered.IntelAI.models.tools.docker.assembler.read_spec_file", "os.listdir"], "os.listdir": [], "<builtin>.set": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.get_use_case_directory": ["<builtin>.len", "os.path.join", "glob.glob", "os.getcwd", "sys.exit"], "glob.glob": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.get_model_name_directory": ["<builtin>.len", "os.path.join", "glob.glob", "os.getcwd", "...repos_filtered.IntelAI.models.tools.docker.assembler.get_model_name_directory"], "...repos_filtered.IntelAI.models.tools.docker.assembler.auto_generate_package_file_list": ["os.makedirs", "os.path.join", "os.path.exists", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "shutil.copyfile", "os.getcwd", "<builtin>.sorted"], "shutil.copyfile": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.auto_generate_package_file_list.<lambda1>": [], "<builtin>.sorted": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.auto_generate_documentation_list": ["shutil.copytree", "os.path.join", "os.path.exists", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "re.search", "os.getcwd", "<builtin>.open", "os.listdir", "os.path.basename", "<builtin>.sorted"], "shutil.copytree": [], "os.path.basename": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.auto_generate_documentation_list.<lambda1>": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.generate_doc_text_replace_options": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.auto_generate_model_spec": ["os.makedirs", "<builtin>.len", "absl.flags.FLAGS.use_case.replace", "os.path.isfile", "os.path.join", "os.path.exists", "...repos_filtered.IntelAI.models.tools.docker.assembler.auto_generate_documentation_list", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "...repos_filtered.IntelAI.models.tools.docker.assembler.generate_doc_text_replace_options", "<builtin>.input", "re.findall", "...repos_filtered.IntelAI.models.tools.docker.assembler.auto_generate_package_file_list", "...repos_filtered.IntelAI.models.tools.docker.assembler.get_use_case_directory", "<builtin>.open", "yaml.dump", "sys.exit", "...repos_filtered.IntelAI.models.tools.docker.assembler.get_model_name_directory", "os.path.basename"], "re.findall": [], "<builtin>.input": [], "absl.flags.FLAGS.use_case.replace": [], "yaml.dump": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.get_tag_spec": ["os.path.isdir", "...repos_filtered.IntelAI.models.tools.docker.assembler.TfDockerTagValidator.__init__", "...repos_filtered.IntelAI.models.tools.docker.assembler.read_spec_files", "yaml.safe_load", "os.path.join", "cerberus.Validator.validate", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "yaml.dump", "<builtin>.exit", "cerberus.Validator.normalized"], "cerberus.Validator.validate": [], "cerberus.Validator.normalized": [], "...repos_filtered.IntelAI.models.tools.docker.assembler.merge_dir": ["os.makedirs", "os.path.exists", "shutil.rmtree", "distutils.dir_util.copy_tree"], "...repos_filtered.IntelAI.models.tools.docker.assembler.main": ["absl.app.UsageError", "...repos_filtered.IntelAI.models.tools.docker.assembler.gather_existing_partials", "...repos_filtered.IntelAI.models.tools.docker.assembler.mkdir_p", "multiprocessing.Process", "...repos_filtered.IntelAI.models.tools.docker.assembler.merge_dir", "<builtin>.print", "...repos_filtered.IntelAI.models.tools.docker.assembler.write_deployment", "os.path.relpath", "absl.flags.FLAGS.generate_new_spec.strip", "...repos_filtered.IntelAI.models.tools.docker.assembler.assemble_tags", "<builtin>.open", "...repos_filtered.IntelAI.models.tools.docker.assembler.get_package_name", "...repos_filtered.IntelAI.models.tools.docker.assembler.write_package", "docker.from_env", "json.loads", "re.search", "re.match", "...repos_filtered.IntelAI.models.tools.docker.assembler.delete_dockerfiles", "re.sub", "os.path.exists", "<builtin>.any", "<builtin>.set", "docker.errors.BuildError", "os.getcwd", "os.environ.get", "...repos_filtered.IntelAI.models.tools.docker.assembler.get_tag_spec", "...repos_filtered.IntelAI.models.tools.docker.assembler.auto_generate_model_spec", "<builtin>.len", "os.path.join", "os.remove", "...repos_filtered.IntelAI.models.tools.docker.assembler.eprint", "<builtin>.next", "platform.processor", "...repos_filtered.IntelAI.models.tools.docker.assembler.set_test_args", "re.findall", "<builtin>.exit", "sys.exit", "os.path.dirname"], "absl.app.UsageError": [], "absl.flags.FLAGS.generate_new_spec.strip": [], "<builtin>.any": [], "docker.from_env": [], "re.match": [], "re.sub": [], "os.path.relpath": [], "platform.processor": [], "<builtin>.next": [], "json.loads": [], "docker.errors.BuildError": [], "multiprocessing.Process": [], "os.environ.get": [], "absl.app.run": [], "...repos_filtered.IntelAI.models.k8s": [], "...repos_filtered.IntelAI.models.k8s.recommendation": [], "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow": [], "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds": [], "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training": [], "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training.fp32.run_tf_serving_client": ["<builtin>.vars", "<builtin>.print", "tensorflow.compat.v1.disable_eager_execution", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training.fp32.run_tf_serving_client.benchmark"], "tensorflow.compat.v1.disable_eager_execution": [], "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training.fp32.run_tf_serving_client.check_for_link": ["argparse.ArgumentTypeError", "os.stat", "os.path.islink", "os.path.isfile"], "os.path.islink": [], "os.stat": [], "argparse.ArgumentTypeError": [], "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training.fp32.run_tf_serving_client.check_valid_file": ["...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training.fp32.run_tf_serving_client.check_for_link", "argparse.ArgumentTypeError", "os.path.isfile"], "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training.fp32.run_tf_serving_client.generate_input_fn": ["<builtin>.range", "<builtin>.str", "tensorflow.data.TextLineDataset"], "<builtin>.range": [], "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training.fp32.run_tf_serving_client.generate_input_fn.parse_csv": ["<builtin>.range", "tensorflow.io.decode_csv", "<builtin>.zip", "collections.OrderedDict", "tensorflow.compat.v1.logging.info"], "tensorflow.compat.v1.logging.info": [], "tensorflow.io.decode_csv": [], "<builtin>.zip": [], "collections.OrderedDict": [], "tensorflow.data.TextLineDataset": [], "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training.fp32.run_tf_serving_client.input_fn": ["tensorflow.data.TFRecordDataset"], "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training.fp32.run_tf_serving_client.input_fn._parse_function": ["<builtin>.zip", "collections.OrderedDict", "tensorflow.reshape", "tensorflow.io.FixedLenSequenceFeature", "tensorflow.io.parse_example"], "tensorflow.io.FixedLenSequenceFeature": [], "tensorflow.io.parse_example": [], "tensorflow.reshape": [], "tensorflow.data.TFRecordDataset": [], "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training.fp32.run_tf_serving_client.benchmark": ["<builtin>.range", "grpc.insecure_channel", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.global_variables_initializer", "<builtin>.print", "tensorflow_serving.apis.predict_pb2.PredictRequest", "tensorflow_serving.apis.prediction_service_pb2_grpc.PredictionServiceStub", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.make_tensor_proto", "time.time", "numpy.argmax", "<builtin>.str", "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training.fp32.run_tf_serving_client.generate_input_fn"], "grpc.insecure_channel": [], "tensorflow_serving.apis.prediction_service_pb2_grpc.PredictionServiceStub": [], "tensorflow_serving.apis.predict_pb2.PredictRequest": [], "tensorflow.compat.v1.data.make_one_shot_iterator": [], "tensorflow.compat.v1.Session": [], "tensorflow.compat.v1.global_variables_initializer": [], "tensorflow.make_tensor_proto": [], "time.time": [], "numpy.argmax": [], "argparse.ArgumentParser": [], "<builtin>.vars": [], "...repos_filtered.IntelAI.models.k8s.recommendation.tensorflow.wide_deep_large_ds.training.fp32": [], "...repos_filtered.IntelAI.models.k8s.image_recognition": [], "...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow": [], "...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow.resnet50v1_5": [], "...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow.resnet50v1_5.inference": [], "...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow.resnet50v1_5.inference.fp32.run_tf_serving_client": ["tensorflow.compat.v1.disable_eager_execution", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.app.flags.DEFINE_string", "tensorflow.compat.v1.app.flags.DEFINE_integer"], "tensorflow.compat.v1.app.flags.DEFINE_string": [], "tensorflow.compat.v1.app.flags.DEFINE_integer": [], "...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow.resnet50v1_5.inference.fp32.run_tf_serving_client.preprocess_image": ["tensorflow.compat.v1.image.convert_image_dtype", "tensorflow.compat.v1.image.resize_bilinear", "tensorflow.compat.v1.image.decode_jpeg", "tensorflow.compat.v1.image.central_crop", "tensorflow.compat.v1.multiply", "tensorflow.compat.v1.expand_dims", "tensorflow.compat.v1.squeeze"], "tensorflow.compat.v1.image.decode_jpeg": [], "tensorflow.compat.v1.image.convert_image_dtype": [], "tensorflow.compat.v1.image.central_crop": [], "tensorflow.compat.v1.expand_dims": [], "tensorflow.compat.v1.image.resize_bilinear": [], "tensorflow.compat.v1.squeeze": [], "tensorflow.compat.v1.multiply": [], "...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow.resnet50v1_5.inference.fp32.run_tf_serving_client.parse_example_proto": ["tensorflow.compat.v1.parse_single_example", "tensorflow.compat.v1.FixedLenFeature", "tensorflow.compat.v1.cast"], "tensorflow.compat.v1.FixedLenFeature": [], "tensorflow.compat.v1.parse_single_example": [], "tensorflow.compat.v1.cast": [], "...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow.resnet50v1_5.inference.fp32.run_tf_serving_client.sample_images": ["tensorflow.Session", "numpy.array", "os.path.join", "tensorflow.data.TFRecordDataset", "...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow.resnet50v1_5.inference.fp32.run_tf_serving_client.preprocess_image", "random.choice", "os.listdir"], "random.choice": [], "...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow.resnet50v1_5.inference.fp32.run_tf_serving_client.sample_images.<lambda1>": ["...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow.resnet50v1_5.inference.fp32.run_tf_serving_client.parse_example_proto"], "tensorflow.Session": [], "numpy.array": [], "...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow.resnet50v1_5.inference.fp32.run_tf_serving_client.main": ["<builtin>.range", "...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow.resnet50v1_5.inference.fp32.run_tf_serving_client.sample_images", "grpc.insecure_channel", "<builtin>.print", "numpy.random.rand", "tensorflow_serving.apis.predict_pb2.PredictRequest", "tensorflow_serving.apis.prediction_service_pb2_grpc.PredictionServiceStub", "tensorflow.make_tensor_proto", "time.time"], "numpy.random.rand": [], "tensorflow.compat.v1.app.run": [], "...repos_filtered.IntelAI.models.k8s.image_recognition.tensorflow.resnet50v1_5.inference.fp32": [], "...repos_filtered.IntelAI.models.datasets": [], "...repos_filtered.IntelAI.models.datasets.large_kaggle_advertising_challenge.preprocess_csv_tfrecords": ["<builtin>.dict", "<builtin>.print", "<builtin>.zip", "...repos_filtered.IntelAI.models.datasets.large_kaggle_advertising_challenge.preprocess_csv_tfrecords.version_is_less_than", "<builtin>.open", "pandas.read_csv", "tensorflow.strings.to_hash_bucket_fast", "tensorflow.io.TFRecordWriter", "tensorflow.train.Example", "tensorflow.compat.v1.enable_eager_execution", "<builtin>.str", "<builtin>.range", "<builtin>.len", "os.path.splitext", "argparse.ArgumentParser", "pandas.isnull", "numpy.array", "os.path.isfile", "sys.exit", "os.path.basename"], "...repos_filtered.IntelAI.models.datasets.large_kaggle_advertising_challenge.preprocess_csv_tfrecords.version_is_less_than": ["<builtin>.range", "<builtin>.len", "<builtin>.print", "tensorflow.__version__.split", "<builtin>.int"], "tensorflow.__version__.split": [], "<builtin>.int": [], "tensorflow.compat.v1.enable_eager_execution": [], "os.path.splitext": [], "pandas.read_csv": [], "tensorflow.io.TFRecordWriter": [], "<builtin>.dict": [], "pandas.isnull": [], "tensorflow.strings.to_hash_bucket_fast": [], "tensorflow.train.Example": [], "...repos_filtered.IntelAI.models.datasets.large_kaggle_advertising_challenge": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs": ["tensorflow.compat.v1.disable_eager_execution", "absl.flags.DEFINE_string", "absl.app.run"], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._check_or_create_dir": ["tensorflow.compat.v1.gfile.MakeDirs", "tensorflow.compat.v1.gfile.Exists"], "tensorflow.compat.v1.gfile.Exists": [], "tensorflow.compat.v1.gfile.MakeDirs": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.download_dataset": ["...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.download_dataset._untar_file", "os.path.join", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.download_dataset._download", "os.remove", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.download_dataset._get_members", "absl.logging.info", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._check_or_create_dir"], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.download_dataset._download": ["urllib.urlretrieve"], "urllib.urlretrieve": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.download_dataset._get_members": ["tarfile.open"], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.download_dataset._untar_file": ["tarfile.open", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._check_or_create_dir"], "absl.logging.info": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._int64_feature": ["tensorflow.compat.v1.train.Int64List", "<builtin>.isinstance", "tensorflow.compat.v1.train.Feature"], "tensorflow.compat.v1.train.Int64List": [], "tensorflow.compat.v1.train.Feature": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._bytes_feature": ["tensorflow.compat.v1.train.BytesList", "tensorflow.compat.v1.train.Feature"], "tensorflow.compat.v1.train.BytesList": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._convert_to_example": ["tensorflow.compat.v1.train.Features", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._bytes_feature", "tensorflow.compat.v1.train.Example", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._int64_feature", "os.path.basename"], "tensorflow.compat.v1.train.Features": [], "tensorflow.compat.v1.train.Example": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._is_png": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._is_cmyk": ["<builtin>.set", "os.path.basename"], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.ImageCoder.__init__": ["tensorflow.compat.v1.image.encode_jpeg", "tensorflow.compat.v1.image.decode_jpeg", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.image.decode_png"], "tensorflow.compat.v1.placeholder": [], "tensorflow.compat.v1.image.decode_png": [], "tensorflow.compat.v1.image.encode_jpeg": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.ImageCoder.png_to_jpeg": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.ImageCoder.cmyk_to_rgb": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.ImageCoder.decode_jpeg": ["<builtin>.len"], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._process_image": ["<builtin>.len", "tensorflow.compat.v1.gfile.FastGFile", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.ImageCoder.decode_jpeg", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._is_png", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.ImageCoder.png_to_jpeg", "absl.logging.info", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.ImageCoder.cmyk_to_rgb", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._is_cmyk"], "tensorflow.compat.v1.gfile.FastGFile": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._process_image_files_batch": ["...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._convert_to_example", "<builtin>.zip", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._process_image", "tensorflow.compat.v1.python_io.TFRecordWriter"], "tensorflow.compat.v1.python_io.TFRecordWriter": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._process_dataset": ["<builtin>.range", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._process_image_files_batch", "<builtin>.len", "os.path.join", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.ImageCoder.__init__", "math.ceil", "absl.logging.info", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._check_or_create_dir", "<builtin>.int"], "math.ceil": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.convert_to_tf_records": ["<builtin>.len", "tensorflow.compat.v1.gfile.FastGFile", "os.path.join", "<builtin>.enumerate", "tensorflow.compat.v1.gfile.Glob", "<builtin>.set", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs._process_dataset", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.convert_to_tf_records.make_shuffle_idx", "absl.logging.info", "random.seed", "os.path.basename", "<builtin>.sorted", "os.path.dirname"], "random.seed": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.convert_to_tf_records.make_shuffle_idx": ["<builtin>.range", "random.shuffle", "<builtin>.list"], "random.shuffle": [], "tensorflow.compat.v1.gfile.Glob": [], "<builtin>.enumerate": [], "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.main": ["<builtin>.ValueError", "<builtin>.AssertionError", "absl.logging.set_verbosity", "...repos_filtered.IntelAI.models.datasets.imagenet.imagenet_to_gcs.convert_to_tf_records"], "absl.logging.set_verbosity": [], "<builtin>.ValueError": [], "<builtin>.AssertionError": [], "...repos_filtered.IntelAI.models.datasets.imagenet": [], "...repos_filtered.IntelAI.models.tests.conftest": ["pytest.fixture"], "...repos_filtered.IntelAI.models.tests.conftest.patch_setattr": ["inspect.currentframe", "inspect.getouterframes", "<builtin>.any", "<builtin>.hasattr", "os.path.relpath", "os.path.splitext"], "<builtin>.hasattr": [], "inspect.currentframe": [], "inspect.getouterframes": [], "pytest.fixture": [], "...repos_filtered.IntelAI.models.tests.conftest.patch": [], "...repos_filtered.IntelAI.models.tests.conftest.patch.wrapper": ["mock.MagicMock", "...repos_filtered.IntelAI.models.tests.conftest.patch_setattr"], "mock.MagicMock": [], "...repos_filtered.IntelAI.models.tests": [], "...repos_filtered.IntelAI.models.tests.unit": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark": ["pytest.fixture", "pytest.mark.skip", "pytest.mark.parametrize"], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.setup_mock_values": ["test_utils.platform_config.set_mock_system_type"], "test_utils.platform_config.set_mock_system_type": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.mock_platform_util": ["mock.MagicMock"], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.mock_os": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.mock_subprocess": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.mock_popen": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.mock_system_platform": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.platform_mock": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.mock_path_exists": ["mock.MagicMock"], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.mock_isfile": ["mock.MagicMock"], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.mock_isdir": ["mock.MagicMock"], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.mock_islink": ["mock.MagicMock"], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.mock_stat": ["mock.MagicMock"], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.launch_benchmark": ["<builtin>.range", "mock.patch.object", "<builtin>.len", "conditional.conditional", "launch_benchmark.LaunchBenchmark", "<builtin>.hasattr", "<builtin>.str", "pytest.raises"], "mock.patch.object": [], "pytest.raises": [], "conditional.conditional": [], "launch_benchmark.LaunchBenchmark": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.test_launch_benchmark_parse_args": [], "pytest.mark.parametrize": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.test_launch_benchmark_parse_unknown_args": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.test_launch_benchmark_parse_bad_args": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.test_output_results_with_accuracy": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.test_launch_benchmark_validate_model": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.test_bare_metal": [], "pytest.mark.skip": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.test_launch_benchmark_tensorflow_serving_framework": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.test_help": ["mock.patch.object", "launch_benchmark.LaunchBenchmark", "pytest.raises"], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.test_launch_benchmark_custom_volume": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.test_disable_tcmalloc": [], "...repos_filtered.IntelAI.models.tests.unit.test_launch_benchmark.test_launch_benchmark_docker_privileged": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util": ["pytest.fixture", "pytest.mark.parametrize", "mock.patch"], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.setup_mock_values": ["test_utils.platform_config.set_mock_os_access", "test_utils.platform_config.set_mock_system_type", "test_utils.platform_config.set_mock_lscpu_subprocess_values"], "test_utils.platform_config.set_mock_os_access": [], "test_utils.platform_config.set_mock_lscpu_subprocess_values": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.os_mock": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.subprocess_mock": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.subprocess_popen_mock": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.platform_mock": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.read_mock": [], "mock.patch": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.test_platform_util_lscpu_parsing": ["mock.MagicMock", "benchmarks.common.platform_util.PlatformUtil"], "benchmarks.common.platform_util.PlatformUtil": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.test_platform_util_unsupported_os": ["mock.MagicMock", "<builtin>.str", "pytest.raises", "benchmarks.common.platform_util.PlatformUtil"], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.test_cpu_info_binding_information": ["os.path.join", "benchmarks.common.platform_util.CPUInfo", "os.path.abspath", "<builtin>.open", "json.load", "os.path.dirname"], "benchmarks.common.platform_util.CPUInfo": [], "os.path.abspath": [], "json.load": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.test_cpu_info_binding_information_no_numa": ["os.path.join", "benchmarks.common.platform_util.CPUInfo", "os.path.abspath", "<builtin>.open", "json.load", "os.path.dirname"], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.test_numa_cpu_core_list": ["mock.MagicMock", "<builtin>.len", "benchmarks.common.platform_util.PlatformUtil"], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.test_platform_util_wmic_parsing": ["mock.MagicMock", "benchmarks.common.platform_util.PlatformUtil"], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.test_get_list_from_string_ranges": ["mock.MagicMock", "benchmarks.common.platform_util.PlatformUtil"], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.test_numa_cpu_core_list_cpuset": ["mock.MagicMock", "<builtin>.len", "mock.patch", "benchmarks.common.platform_util.PlatformUtil", "mock.mock_open"], "mock.mock_open": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.test_platform_utils_num_sockets_with_cpuset": ["mock.MagicMock", "benchmarks.common.platform_util.PlatformUtil"], "...repos_filtered.IntelAI.models.tests.unit.common.test_platform_util.test_platform_util_with_no_args": ["benchmarks.common.platform_util.PlatformUtil"], "...repos_filtered.IntelAI.models.tests.unit.common": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init": ["pytest.fixture", "pytest.mark.parametrize", "mock.patch", "pytest.mark.skip", "contextlib.contextmanager"], "contextlib.contextmanager": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.catch_stdout": ["cStringIO.StringIO", "io.StringIO"], "cStringIO.StringIO": [], "io.StringIO": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.mock_json": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.mock_glob": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.test_base_model_initializer": ["mock.MagicMock", "benchmarks.common.base_model_init.BaseModelInitializer"], "benchmarks.common.base_model_init.BaseModelInitializer": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.test_env_var_already_set": ["benchmarks.common.base_model_init.set_env_var", "os.environ.get"], "benchmarks.common.base_model_init.set_env_var": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.test_env_var_not_already_set": ["benchmarks.common.base_model_init.set_env_var", "os.environ.get"], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.test_set_kmp_vars_config_json_does_not_exists": ["mock.MagicMock", "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.catch_stdout", "benchmarks.common.base_model_init.BaseModelInitializer"], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.test_set_kmp_vars_config_json_exists": ["mock.MagicMock", "tempfile.mkstemp", "benchmarks.common.base_model_init.BaseModelInitializer"], "tempfile.mkstemp": [], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.test_command_prefix_tcmalloc_int8": ["mock.MagicMock", "<builtin>.print", "benchmarks.common.base_model_init.BaseModelInitializer"], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.test_command_prefix_tcmalloc_fp32": ["mock.MagicMock", "benchmarks.common.base_model_init.BaseModelInitializer"], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.test_command_prefix_numa_multi_instance": ["mock.MagicMock", "benchmarks.common.base_model_init.BaseModelInitializer"], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.test_multi_instance_train_prefix": ["mock.MagicMock", "benchmarks.common.base_model_init.BaseModelInitializer"], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.test_numa_multi_instance_run_command": ["mock.MagicMock", "benchmarks.common.base_model_init.BaseModelInitializer"], "...repos_filtered.IntelAI.models.tests.unit.common.test_base_model_init.test_num_inter_intra_threads_settings": ["mock.MagicMock", "<builtin>.print", "<builtin>.len", "benchmarks.common.base_model_init.BaseModelInitializer"], "...repos_filtered.IntelAI.models.tests.unit.common.utils": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators": ["pytest.fixture", "pytest.mark.parametrize", "pytest.mark.skipif"], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.mock_link": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.mock_exists": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.mock_isfile": ["mock.MagicMock"], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_for_link_file": ["os.link", "common.utils.validators.check_for_link", "os.path.join", "os.remove", "os.path.exists", "<builtin>.str", "pytest.raises", "os.symlink", "tempfile.NamedTemporaryFile", "os.path.dirname"], "tempfile.NamedTemporaryFile": [], "os.symlink": [], "os.link": [], "common.utils.validators.check_for_link": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_for_link_folder": ["common.utils.validators.check_for_link", "tempfile.mkdtemp", "os.path.join", "os.remove", "os.path.exists", "os.rmdir", "<builtin>.str", "pytest.raises", "os.symlink", "os.path.dirname"], "os.rmdir": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_no_spaces": ["common.utils.validators.check_no_spaces", "pytest.raises"], "common.utils.validators.check_no_spaces": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_positive_number": ["pytest.raises", "common.utils.validators.check_positive_number"], "common.utils.validators.check_positive_number": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_positive_number_or_equal_to_negative_one": ["pytest.raises", "common.utils.validators.check_positive_number_or_equal_to_negative_one"], "common.utils.validators.check_positive_number_or_equal_to_negative_one": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_valid_filename": ["tempfile.NamedTemporaryFile", "common.utils.validators.check_valid_filename"], "common.utils.validators.check_valid_filename": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_valid_filename_bad": ["pytest.raises", "common.utils.validators.check_valid_filename"], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_valid_folder": ["common.utils.validators.check_valid_folder", "tempfile.mkdtemp"], "common.utils.validators.check_valid_folder": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_valid_folder_bad": ["common.utils.validators.check_valid_folder", "pytest.raises"], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_valid_file_or_dir": ["common.utils.validators.check_valid_file_or_dir", "tempfile.NamedTemporaryFile"], "common.utils.validators.check_valid_file_or_dir": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_valid_file_or_dir_bad": ["pytest.raises", "common.utils.validators.check_valid_file_or_dir"], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_invalid_shm_size": ["common.utils.validators.check_shm_size", "pytest.raises"], "common.utils.validators.check_shm_size": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_check_valid_shm_size": ["common.utils.validators.check_shm_size"], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_bad_volume_mount_strings": ["common.utils.validators.check_volume_mount", "pytest.raises"], "common.utils.validators.check_volume_mount": [], "pytest.mark.skipif": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_valid_volume_mount": ["common.utils.validators.check_volume_mount", "os.rmdir", "tempfile.mkdtemp"], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_valid_num_cores_per_instance": ["common.utils.validators.check_num_cores_per_instance"], "common.utils.validators.check_num_cores_per_instance": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_validators.test_invalid_num_cores_per_instance": ["pytest.raises", "common.utils.validators.check_num_cores_per_instance"], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_multi_instance": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_multi_instance.TestCase": ["mock.patch.object"], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_multi_instance.TestCase.test_generate_inference_prefix_ht": ["<builtin>.range", "<builtin>.len", "os.path.join", "unittest.TestCase.assertEqual", "os.path.abspath", "common.utils.multi_instance.InferencePrefix", "<builtin>.open", "json.load", "<builtin>.int", "os.path.dirname"], "common.utils.multi_instance.InferencePrefix": [], "unittest.TestCase.assertEqual": [], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_multi_instance.TestCase.test_generate_inference_prefix_no_ht": ["<builtin>.range", "<builtin>.len", "os.path.join", "unittest.TestCase.assertEqual", "os.path.abspath", "common.utils.multi_instance.InferencePrefix", "<builtin>.open", "json.load", "<builtin>.int", "os.path.dirname"], "...repos_filtered.IntelAI.models.tests.unit.common.utils.test_multi_instance.TestCase.test_generate_inference_prefix_wrong_configuration": ["<builtin>.range", "<builtin>.len", "unittest.TestCase.assertRaises", "os.path.join", "os.path.abspath", "common.utils.multi_instance.InferencePrefix", "<builtin>.open", "json.load", "<builtin>.int", "os.path.dirname"], "unittest.TestCase.assertRaises": [], "...repos_filtered.IntelAI.models.tests.unit.common.tensorflow.test_run_tf_benchmarks": ["mock.patch", "...repos_filtered.IntelAI.models.tests.unit.common.tensorflow.test_run_tf_benchmarks.parse_model_args_file", "pytest.mark.parametrize"], "...repos_filtered.IntelAI.models.tests.unit.common.tensorflow.test_run_tf_benchmarks.parse_model_args_file": ["os.path.join", "os.path.realpath", "test_utils.io.parse_json_files", "os.path.dirname"], "os.path.realpath": [], "test_utils.io.parse_json_files": [], "...repos_filtered.IntelAI.models.tests.unit.common.tensorflow.test_run_tf_benchmarks.delete_env_var": [], "...repos_filtered.IntelAI.models.tests.unit.common.tensorflow.test_run_tf_benchmarks.clear_kmp_env_vars": ["...repos_filtered.IntelAI.models.tests.unit.common.tensorflow.test_run_tf_benchmarks.delete_env_var"], "...repos_filtered.IntelAI.models.tests.unit.common.tensorflow.test_run_tf_benchmarks.test_run_benchmark": ["mock.MagicMock", "mock.patch.object", "<builtin>.len", "test_utils.platform_config.set_mock_lscpu_subprocess_values", "re.sub", "<builtin>.print", "<builtin>.zip", "fnmatch.fnmatch", "...repos_filtered.IntelAI.models.tests.unit.common.tensorflow.test_run_tf_benchmarks.parse_model_args_file", "test_utils.platform_config.set_mock_os_access", "re.search", "test_utils.platform_config.set_mock_system_type", "benchmarks.common.tensorflow.run_tf_benchmark.ModelBenchmarkUtil", "...repos_filtered.IntelAI.models.tests.unit.common.tensorflow.test_run_tf_benchmarks.clear_kmp_env_vars", "<builtin>.sorted"], "benchmarks.common.tensorflow.run_tf_benchmark.ModelBenchmarkUtil": [], "fnmatch.fnmatch": [], "...repos_filtered.IntelAI.models.tests.unit.common.tensorflow.test_run_tf_benchmarks.test_run_benchmark_bad_socket": ["mock.MagicMock", "mock.patch.object", "test_utils.platform_config.set_mock_lscpu_subprocess_values", "re.sub", "...repos_filtered.IntelAI.models.tests.unit.common.tensorflow.test_run_tf_benchmarks.parse_model_args_file", "test_utils.platform_config.set_mock_os_access", "re.search", "test_utils.platform_config.set_mock_system_type", "benchmarks.common.tensorflow.run_tf_benchmark.ModelBenchmarkUtil", "pytest.raises", "...repos_filtered.IntelAI.models.tests.unit.common.tensorflow.test_run_tf_benchmarks.clear_kmp_env_vars"], "...repos_filtered.IntelAI.models.tests.unit.common.tensorflow": [], "...repos_filtered.IntelAI.models.tests.test_utils.platform_config": ["platform.system"], "platform.system": [], "...repos_filtered.IntelAI.models.tests.test_utils.platform_config.set_mock_system_type": [], "...repos_filtered.IntelAI.models.tests.test_utils.platform_config.set_mock_os_access": [], "...repos_filtered.IntelAI.models.tests.test_utils.platform_config.set_mock_lscpu_subprocess_values": [], "...repos_filtered.IntelAI.models.tests.test_utils.platform_config.set_mock_wmic_subprocess_values": [], "...repos_filtered.IntelAI.models.tests.test_utils.io": [], "...repos_filtered.IntelAI.models.tests.test_utils.io.parse_json_files": ["<builtin>.tuple", "os.path.join", "<builtin>.open", "json.load", "os.listdir"], "<builtin>.tuple": [], "...repos_filtered.IntelAI.models.tests.test_utils": [], "...repos_filtered.IntelAI.models.models": [], "...repos_filtered.IntelAI.models.models.recommendation": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.unicode_to_utf8": ["<builtin>.dict"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.load_dict": ["pickle.load", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.unicode_to_utf8", "<builtin>.open", "json.load"], "pickle.load": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.fopen": ["gzip.open", "<builtin>.open"], "gzip.open": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.DataIterator.__init__": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.load_dict", "os.path.join", "<builtin>.open", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.fopen"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.DataIterator.get_n": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.DataIterator.__iter__": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.DataIterator.reset": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.DataIterator.next": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.DataIterator.__next__"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.DataIterator.__next__": ["<builtin>.range", "<builtin>.len", "random.randint", "numpy.array", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.DataIterator.reset", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.data_iterator.DataIterator.next"], "random.randint": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.local_aggretor": ["<builtin>.len", "<builtin>.int", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.Dice": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.Dice.dice": ["<builtin>.range", "tensorflow.square", "<builtin>.len", "tensorflow.constant_initializer", "tensorflow.sqrt", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "tensorflow.sigmoid", "tensorflow.compat.v1.variable_scope", "tensorflow.reshape", "<builtin>.list"], "tensorflow.compat.v1.variable_scope": [], "tensorflow.constant_initializer": [], "tensorflow.compat.v1.get_variable": [], "tensorflow.reduce_mean": [], "tensorflow.square": [], "tensorflow.sqrt": [], "tensorflow.sigmoid": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.Dice.parametric_relu": ["tensorflow.constant_initializer", "<builtin>.abs", "tensorflow.nn.relu", "tensorflow.compat.v1.get_variable"], "tensorflow.nn.relu": [], "<builtin>.abs": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.generate_voc": ["<builtin>.sorted", "<builtin>.len", "cPickle.dump", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.generate_voc.<lambda1>": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.generate_voc.<lambda2>": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.generate_voc.<lambda3>": [], "cPickle.dump": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.__init__": ["tensorflow.reduce_sum", "tensorflow.compat.v1.placeholder", "<builtin>.ValueError", "<builtin>.print", "tensorflow.compat.v1.summary.histogram", "tensorflow.shape", "tensorflow.device", "tensorflow.name_scope", "tensorflow.compat.v1.get_variable", "tensorflow.nn.embedding_lookup", "numpy.ones", "tensorflow.concat", "tensorflow.reshape", "tensorflow.random.uniform"], "numpy.ones": [], "tensorflow.device": [], "tensorflow.random.uniform": [], "tensorflow.name_scope": [], "tensorflow.compat.v1.summary.histogram": [], "tensorflow.nn.embedding_lookup": [], "tensorflow.concat": [], "tensorflow.reduce_sum": [], "tensorflow.shape": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model._sparse_to_dense_grads": ["tensorflow.convert_to_tensor"], "tensorflow.convert_to_tensor": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.build_fcn_net": ["tensorflow.cast", "Dice.dice", "tensorflow.compat.v1.layers.batch_normalization", "tensorflow.compat.v1.variable_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.compat.v1.train.AdamOptimizer", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model._sparse_to_dense_grads", "tensorflow.round", "tensorflow.compat.v1.summary.merge_all", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.math.log", "tensorflow.compat.v1.layers.dense", "tensorflow.compat.v1.summary.scalar"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.build_fcn_net.dtype_getter": [], "tensorflow.compat.v1.layers.batch_normalization": [], "tensorflow.compat.v1.layers.dense": [], "Dice.dice": [], "tensorflow.nn.softmax": [], "tensorflow.math.log": [], "tensorflow.compat.v1.summary.scalar": [], "tensorflow.compat.v1.train.AdamOptimizer": [], "tensorflow.round": [], "tensorflow.equal": [], "tensorflow.cast": [], "tensorflow.compat.v1.summary.merge_all": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.auxiliary_loss": ["tensorflow.cast", "tensorflow.shape", "tensorflow.compat.v1.variable_scope", "tensorflow.reduce_mean", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.auxiliary_net", "tensorflow.concat", "tensorflow.reshape", "tensorflow.math.log"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.auxiliary_loss.dtype_getter": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.auxiliary_net": ["tensorflow.nn.sigmoid", "tensorflow.compat.v1.layers.batch_normalization", "tensorflow.compat.v1.variable_scope", "tensorflow.nn.softmax", "tensorflow.compat.v1.layers.dense"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.auxiliary_net.dtype_getter": [], "tensorflow.nn.sigmoid": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.train_synthetic_input": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.train": ["tensorflow.python.client.timeline.Timeline", "<builtin>.open"], "tensorflow.python.client.timeline.Timeline": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.calculate": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.save": ["tensorflow.compat.v1.train.Saver"], "tensorflow.compat.v1.train.Saver": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.restore": ["tensorflow.compat.v1.train.Saver", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model_DIN_V2_Gru_att_Gru.__init__": ["tensorflow.python.ops.rnn_cell.GRUCell", "rnn.dynamic_rnn", "tensorflow.compat.v1.summary.histogram", "<builtin>.super", "tensorflow.name_scope", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.build_fcn_net"], "tensorflow.python.ops.rnn_cell.GRUCell": [], "rnn.dynamic_rnn": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model_DIN_V2_Gru_Gru_att.__init__": ["tensorflow.python.ops.rnn_cell.GRUCell", "rnn.dynamic_rnn", "tensorflow.reduce_sum", "tensorflow.compat.v1.summary.histogram", "<builtin>.super", "tensorflow.name_scope", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.build_fcn_net"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model_WideDeep.__init__": ["tensorflow.cast", "tensorflow.concat", "<builtin>.super", "tensorflow.compat.v1.layers.batch_normalization", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.compat.v1.train.AdamOptimizer", "tensorflow.round", "tensorflow.compat.v1.summary.merge_all", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.math.log", "tensorflow.compat.v1.layers.dense", "tensorflow.compat.v1.summary.scalar"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model_DIN_V2_Gru_QA_attGru.__init__": ["tensorflow.expand_dims", "tensorflow.python.ops.rnn_cell.GRUCell", "rnn.dynamic_rnn", "tensorflow.compat.v1.summary.histogram", "<builtin>.super", "tensorflow.name_scope", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.build_fcn_net"], "tensorflow.expand_dims": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model_DNN.__init__": ["<builtin>.super", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.build_fcn_net", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model_PNN.__init__": ["<builtin>.super", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.build_fcn_net", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model_DIN.__init__": ["tensorflow.reduce_sum", "tensorflow.compat.v1.summary.histogram", "<builtin>.super", "tensorflow.name_scope", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.build_fcn_net"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model_DIN_V2_Gru_Vec_attGru_Neg.__init__": ["tensorflow.expand_dims", "rnn.dynamic_rnn", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.auxiliary_loss", "tensorflow.compat.v1.summary.histogram", "tensorflow.concat", "<builtin>.super", "tensorflow.name_scope", "tensorflow.compat.v1.nn.rnn_cell.GRUCell", "tensorflow.compat.v1.variable_scope", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.build_fcn_net"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model_DIN_V2_Gru_Vec_attGru_Neg.__init__.dtype_getter": [], "tensorflow.compat.v1.nn.rnn_cell.GRUCell": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model_DIN_V2_Gru_Vec_attGru.__init__": ["tensorflow.expand_dims", "tensorflow.python.ops.rnn_cell.GRUCell", "rnn.dynamic_rnn", "tensorflow.compat.v1.summary.histogram", "<builtin>.super", "tensorflow.name_scope", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.model.Model.build_fcn_net"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.shuffle": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.shuffle.main"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.shuffle.main": ["os.path.realpath", "tempfile.mkstemp", "tempfile.TemporaryFile", "os.remove", "os.path.split", "random.shuffle", "<builtin>.open"], "os.path.split": [], "tempfile.TemporaryFile": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils._Linear.__init__": ["tensorflow.python.util.nest.is_sequence", "tensorflow.python.ops.variable_scope.variable_scope", "<builtin>.ValueError", "tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.ops.init_ops.constant_initializer", "tensorflow.python.ops.variable_scope.get_variable_scope"], "tensorflow.python.util.nest.is_sequence": [], "tensorflow.python.ops.variable_scope.get_variable_scope": [], "tensorflow.python.ops.variable_scope.variable_scope": [], "tensorflow.python.ops.variable_scope.get_variable": [], "tensorflow.python.ops.init_ops.constant_initializer": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils._Linear.__call__": ["tensorflow.python.ops.array_ops.concat", "<builtin>.len", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.nn_ops.bias_add"], "tensorflow.python.ops.math_ops.matmul": [], "tensorflow.python.ops.array_ops.concat": [], "tensorflow.python.ops.nn_ops.bias_add": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.QAAttGRUCell.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.QAAttGRUCell.state_size": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.QAAttGRUCell.output_size": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.QAAttGRUCell.__call__": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.QAAttGRUCell.call"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.QAAttGRUCell.call": ["tensorflow.python.ops.array_ops.split", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils._Linear.__init__", "tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.ops.math_ops.sigmoid", "tensorflow.python.ops.init_ops.constant_initializer"], "tensorflow.python.ops.math_ops.sigmoid": [], "tensorflow.python.ops.array_ops.split": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.VecAttGRUCell.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.VecAttGRUCell.state_size": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.VecAttGRUCell.output_size": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.VecAttGRUCell.__call__": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.VecAttGRUCell.call"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.VecAttGRUCell.call": ["tensorflow.python.ops.array_ops.split", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils._Linear.__init__", "tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.ops.math_ops.sigmoid", "tensorflow.python.ops.init_ops.constant_initializer"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.prelu": ["tensorflow.cast", "tensorflow.maximum", "tensorflow.constant_initializer", "tensorflow.compat.v1.get_variable", "tensorflow.minimum", "tensorflow.compat.v1.variable_scope"], "tensorflow.maximum": [], "tensorflow.minimum": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.calc_auc": ["<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.calc_auc.<lambda1>": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.attention": ["tensorflow.expand_dims", "tensorflow.random_normal", "tensorflow.tensordot", "tensorflow.shape", "tensorflow.name_scope", "tensorflow.ones_like", "tensorflow.tanh", "tensorflow.Variable", "tensorflow.where", "tensorflow.concat", "tensorflow.reshape", "tensorflow.equal", "tensorflow.array_ops.transpose", "tensorflow.nn.softmax", "<builtin>.isinstance"], "tensorflow.array_ops.transpose": [], "tensorflow.ones_like": [], "tensorflow.random_normal": [], "tensorflow.Variable": [], "tensorflow.tensordot": [], "tensorflow.tanh": [], "tensorflow.where": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.din_attention": ["tensorflow.expand_dims", "<builtin>.print", "tensorflow.shape", "tensorflow.ones_like", "tensorflow.tile", "tensorflow.where", "tensorflow.concat", "tensorflow.reshape", "tensorflow.equal", "tensorflow.array_ops.transpose", "tensorflow.compat.v1.layers.dense", "<builtin>.isinstance", "tensorflow.nn.softmax", "tensorflow.matmul"], "tensorflow.tile": [], "tensorflow.matmul": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.din_fcn_attention": ["tensorflow.expand_dims", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.prelu", "tensorflow.shape", "tensorflow.ones_like", "tensorflow.tile", "tensorflow.where", "tensorflow.concat", "tensorflow.reshape", "tensorflow.equal", "tensorflow.array_ops.transpose", "tensorflow.compat.v1.layers.dense", "<builtin>.isinstance", "tensorflow.nn.softmax", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.self_attention": ["tensorflow.expand_dims", "<builtin>.len", "tensorflow.TensorArray", "tensorflow.while_loop", "tensorflow.transpose"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.self_attention.cond": ["tensorflow.shape", "tensorflow.less"], "tensorflow.less": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.self_attention.body": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.din_fcn_attention", "tensorflow.reduce_sum"], "tensorflow.TensorArray": [], "tensorflow.while_loop": [], "tensorflow.transpose": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.self_all_attention": ["tensorflow.expand_dims", "<builtin>.len", "tensorflow.TensorArray", "tensorflow.while_loop", "tensorflow.transpose"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.self_all_attention.cond": ["tensorflow.shape", "tensorflow.less"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.self_all_attention.body": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.din_fcn_attention", "tensorflow.reduce_sum"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.din_fcn_shine": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.utils.prelu", "tensorflow.shape", "tensorflow.ones_like", "tensorflow.tile", "tensorflow.concat", "tensorflow.reshape", "tensorflow.equal", "tensorflow.array_ops.transpose", "tensorflow.compat.v1.layers.dense", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.train": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.train.train", "<builtin>.print", "tensorflow.random.set_seed", "tensorflow.compat.v1.disable_v2_behavior", "numpy.random.seed", "tensorflow.compat.v1.set_random_seed", "argparse.ArgumentParser", "random.seed"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.train.prepare_data": ["<builtin>.len", "numpy.max", "numpy.zeros", "numpy.array", "<builtin>.ValueError", "<builtin>.zip", "<builtin>.enumerate"], "numpy.max": [], "numpy.zeros": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.train.train": ["sys.stdout.flush", "<builtin>.range", "<builtin>.len", "<builtin>.tuple", "os.path.join", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.global_variables_initializer", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.train.prepare_data", "tensorflow.compat.v1.local_variables_initializer", "<builtin>.str", "time.time", "<builtin>.float", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.RunMetadata", "data_iterator.DataIterator", "tensorflow.compat.v1.RunOptions"], "tensorflow.compat.v1.ConfigProto": [], "data_iterator.DataIterator": [], "tensorflow.compat.v1.local_variables_initializer": [], "sys.stdout.flush": [], "tensorflow.compat.v1.RunOptions": [], "tensorflow.compat.v1.RunMetadata": [], "<builtin>.float": [], "tensorflow.compat.v1.disable_v2_behavior": [], "tensorflow.compat.v1.set_random_seed": [], "tensorflow.random.set_seed": [], "numpy.random.seed": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.process_data": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.process_data.manual_join", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.process_data.process_reviews", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.process_data.split_test", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.process_data.process_meta"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.process_data.process_meta": ["<builtin>.eval", "<builtin>.open"], "<builtin>.eval": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.process_data.process_reviews": ["<builtin>.str", "<builtin>.eval", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.process_data.manual_join": ["<builtin>.len", "random.randint", "<builtin>.float", "<builtin>.open", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.process_data.manual_join.<lambda1>": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.process_data.split_test": ["<builtin>.open"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._transpose_batch_time": ["tensorflow.python.ops.math_ops.range", "<builtin>.ValueError", "tensorflow.python.ops.array_ops.concat", "tensorflow.python.framework.tensor_shape.TensorShape", "tensorflow.python.ops.array_ops.rank", "tensorflow.python.ops.array_ops.transpose"], "tensorflow.python.ops.array_ops.rank": [], "tensorflow.python.ops.math_ops.range": [], "tensorflow.python.ops.array_ops.transpose": [], "tensorflow.python.framework.tensor_shape.TensorShape": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._best_effort_input_batch_size": ["<builtin>.ValueError", "tensorflow.python.ops.array_ops.shape"], "tensorflow.python.ops.array_ops.shape": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._infer_state_dtype": ["tensorflow.python.util.nest.flatten", "<builtin>.ValueError", "tensorflow.python.util.nest.is_sequence", "<builtin>.all"], "tensorflow.python.util.nest.flatten": [], "<builtin>.all": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._rnn_step": ["tensorflow.python.util.nest.flatten", "<builtin>.len", "<builtin>.ValueError", "<builtin>.zip", "tensorflow.python.util.nest.assert_same_structure", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._time_step.<lambda1>", "tensorflow.python.ops.control_flow_ops.cond", "tensorflow.python.util.nest.pack_sequence_as", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.static_rnn.<lambda1>", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._time_step.<lambda2>", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._rnn_step._copy_some_through"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._rnn_step._copy_one_through": ["tensorflow.python.framework.ops.colocate_with", "tensorflow.python.ops.array_ops.where"], "tensorflow.python.framework.ops.colocate_with": [], "tensorflow.python.ops.array_ops.where": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._rnn_step._copy_some_through": ["<builtin>.zip", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._rnn_step._copy_one_through"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._rnn_step._maybe_copy_some_through": ["tensorflow.python.util.nest.flatten", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._time_step.<lambda1>", "tensorflow.python.util.nest.assert_same_structure", "tensorflow.python.ops.control_flow_ops.cond", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.static_rnn.<lambda1>", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._time_step.<lambda2>"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.static_rnn.<lambda1>": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._time_step.<lambda2>": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._time_step.<lambda1>": [], "tensorflow.python.util.nest.assert_same_structure": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._rnn_step._maybe_copy_some_through.<lambda1>": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._rnn_step._maybe_copy_some_through.<lambda2>": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._rnn_step._copy_some_through"], "tensorflow.python.ops.control_flow_ops.cond": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._rnn_step.<lambda1>": [], "tensorflow.python.util.nest.pack_sequence_as": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._reverse_seq": ["tensorflow.python.util.nest.flatten", "<builtin>.range", "<builtin>.len", "<builtin>.reversed", "<builtin>.tuple", "tensorflow.python.ops.array_ops.reverse_sequence", "<builtin>.zip", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.util.nest.pack_sequence_as", "tensorflow.python.framework.tensor_shape.unknown_shape", "tensorflow.python.ops.array_ops.unstack", "<builtin>.list"], "<builtin>.reversed": [], "tensorflow.python.framework.tensor_shape.unknown_shape": [], "tensorflow.python.ops.array_ops.stack": [], "tensorflow.python.ops.array_ops.reverse_sequence": [], "tensorflow.python.ops.array_ops.unstack": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.bidirectional_dynamic_rnn": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.dynamic_rnn", "tensorflow.python.ops.rnn_cell_impl.assert_like_rnncell", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.bidirectional_dynamic_rnn._reverse", "tensorflow.python.ops.variable_scope.variable_scope"], "tensorflow.python.ops.rnn_cell_impl.assert_like_rnncell": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.dynamic_rnn": ["tensorflow.python.util.nest.flatten", "tensorflow.cast", "<builtin>.tuple", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._best_effort_input_batch_size", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.dynamic_rnn._assert_has_shape", "tensorflow.python.framework.ops.control_dependencies", "tensorflow.python.ops.variable_scope.variable_scope", "<builtin>.ValueError", "tensorflow.python.ops.array_ops.identity", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop", "tensorflow.convert_to_tensor", "tensorflow.python.util.nest.pack_sequence_as", "tensorflow.python.ops.rnn_cell_impl.assert_like_rnncell", "tensorflow.python.util.nest.map_structure", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._transpose_batch_time"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.bidirectional_dynamic_rnn._reverse": ["tensorflow.python.ops.array_ops.reverse_sequence", "tensorflow.python.ops.array_ops.reverse"], "tensorflow.python.ops.array_ops.reverse": [], "tensorflow.python.ops.array_ops.identity": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.dynamic_rnn.<lambda1>": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.dynamic_rnn._assert_has_shape": ["tensorflow.python.ops.math_ops.reduce_all", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.ops.array_ops.shape", "tensorflow.python.ops.control_flow_ops.Assert", "tensorflow.python.ops.math_ops.equal"], "tensorflow.python.ops.math_ops.equal": [], "tensorflow.python.ops.math_ops.reduce_all": [], "tensorflow.python.ops.control_flow_ops.Assert": [], "tensorflow.python.framework.ops.control_dependencies": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop": ["tensorflow.python.util.nest.flatten", "<builtin>.tuple", "<builtin>.zip", "tensorflow.python.ops.math_ops.reduce_max", "tensorflow.python.framework.ops.name_scope", "<builtin>.isinstance", "tensorflow.python.ops.math_ops.reduce_min", "<builtin>.ValueError", "tensorflow.python.ops.control_flow_ops.while_loop", "<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._create_zero_arrays", "tensorflow.python.ops.rnn_cell_impl._concat", "tensorflow.python.ops.array_ops.constant", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._best_effort_input_batch_size", "tensorflow.python.ops.array_ops.shape", "tensorflow.python.util.nest.pack_sequence_as", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._infer_state_dtype", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._create_ta"], "tensorflow.python.util.nest.map_structure": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._create_zero_arrays": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._infer_state_dtype", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.ops.rnn_cell_impl._concat"], "tensorflow.python.ops.rnn_cell_impl._concat": [], "tensorflow.python.ops.array_ops.zeros": [], "tensorflow.python.ops.math_ops.reduce_min": [], "tensorflow.python.ops.math_ops.reduce_max": [], "tensorflow.python.ops.array_ops.constant": [], "tensorflow.python.framework.ops.name_scope": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._create_ta": ["tensorflow.python.ops.tensor_array_ops.TensorArray"], "tensorflow.python.ops.tensor_array_ops.TensorArray": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._time_step": ["tensorflow.python.util.nest.flatten", "<builtin>.tuple", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._rnn_step", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._time_step.<lambda1>", "tensorflow.python.util.nest.pack_sequence_as", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop._time_step.<lambda2>"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop.<lambda1>": [], "tensorflow.python.ops.control_flow_ops.while_loop": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._dynamic_rnn_loop.<lambda2>": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.raw_rnn": ["tensorflow.python.util.nest.flatten", "tensorflow.python.ops.array_ops.zeros", "<builtin>.len", "tensorflow.python.framework.ops.convert_to_tensor", "tensorflow.python.ops.tensor_array_ops.TensorArray", "tensorflow.python.ops.variable_scope.variable_scope", "<builtin>.zip", "tensorflow.python.util.nest.assert_same_structure", "tensorflow.python.ops.array_ops.shape", "<builtin>.enumerate", "tensorflow.python.util.nest.pack_sequence_as", "tensorflow.python.ops.rnn_cell_impl._concat", "tensorflow.python.ops.rnn_cell_impl.assert_like_rnncell", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.control_flow_ops.while_loop", "<builtin>.TypeError", "<builtin>.callable"], "<builtin>.callable": [], "<builtin>.TypeError": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.raw_rnn.<lambda1>": [], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.framework.ops.convert_to_tensor": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.raw_rnn.condition": ["tensorflow.python.ops.math_ops.logical_not", "tensorflow.python.ops.math_ops.reduce_all"], "tensorflow.python.ops.math_ops.logical_not": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.raw_rnn.body": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.raw_rnn.body._copy_some_through", "tensorflow.python.util.nest.assert_same_structure", "tensorflow.python.ops.math_ops.logical_or", "tensorflow.python.util.nest.map_structure"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.raw_rnn.body._copy_some_through": ["tensorflow.python.util.nest.map_structure"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.raw_rnn.body._copy_some_through.copy_fn": ["tensorflow.python.framework.ops.colocate_with", "tensorflow.python.ops.array_ops.where"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.raw_rnn.body.<lambda1>": [], "tensorflow.python.ops.math_ops.logical_or": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.static_rnn": ["tensorflow.python.util.nest.flatten", "tensorflow.cast", "<builtin>.tuple", "tensorflow.python.util.nest.is_sequence", "tensorflow.python.framework.ops.convert_to_tensor", "tensorflow.python.ops.math_ops.reduce_min", "tensorflow.python.ops.variable_scope.variable_scope", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._rnn_step", "tensorflow.python.ops.math_ops.reduce_max", "<builtin>.enumerate", "tensorflow.python.ops.array_ops.shape", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.static_rnn._create_zero_output", "tensorflow.python.util.nest.pack_sequence_as", "tensorflow.python.ops.rnn_cell_impl.assert_like_rnncell", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.static_rnn.<lambda1>", "<builtin>.TypeError"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.static_rnn._create_zero_output": ["tensorflow.python.ops.array_ops.zeros", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.ops.rnn_cell_impl._concat", "tensorflow.python.framework.tensor_shape.TensorShape", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._infer_state_dtype"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.static_rnn.<lambda2>": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.static_state_saving_rnn": ["tensorflow.python.util.nest.flatten", "tensorflow.python.framework.ops.control_dependencies", "<builtin>.len", "tensorflow.python.util.nest.is_sequence", "<builtin>.ValueError", "<builtin>.zip", "tensorflow.python.ops.array_ops.identity", "tensorflow.python.util.nest.pack_sequence_as", "<builtin>.str", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.static_rnn"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.static_bidirectional_rnn": ["tensorflow.python.util.nest.flatten", "<builtin>.tuple", "tensorflow.python.util.nest.is_sequence", "tensorflow.python.ops.variable_scope.variable_scope", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn._reverse_seq", "tensorflow.python.ops.array_ops.concat", "<builtin>.zip", "tensorflow.python.util.nest.pack_sequence_as", "tensorflow.python.ops.rnn_cell_impl.assert_like_rnncell", "<builtin>.TypeError", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.rnn.static_rnn"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.training.fp32.split_by_user": ["random.randint", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.unicode_to_utf8": ["<builtin>.dict"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.load_dict": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.unicode_to_utf8", "pickle.load", "<builtin>.open", "json.load"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.fopen": ["gzip.open", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.DataIterator.__init__": ["<builtin>.len", "os.path.join", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.fopen", "<builtin>.open", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.load_dict"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.DataIterator.get_n": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.DataIterator.__iter__": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.DataIterator.reset": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.DataIterator.next": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.DataIterator.__next__"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.DataIterator.__next__": ["<builtin>.range", "<builtin>.len", "random.randint", "numpy.array", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.DataIterator.reset", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.data_iterator.DataIterator.next"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.inference_pb": ["tensorflow.random.set_seed", "numpy.random.seed", "tensorflow.compat.v1.set_random_seed", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.inference_pb.inference", "argparse.ArgumentParser", "random.seed"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.inference_pb.prepare_data": ["<builtin>.len", "numpy.max", "numpy.zeros", "numpy.array", "<builtin>.ValueError", "<builtin>.zip", "<builtin>.enumerate", "<builtin>.max"], "<builtin>.max": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.inference_pb.filtered_data": ["sys.stdout.flush", "<builtin>.len", "<builtin>.print", "time.time", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.inference_pb.prepare_data"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.inference_pb.calculate": ["<builtin>.range", "<builtin>.dict", "<builtin>.len", "tensorflow.python.client.timeline.Timeline", "<builtin>.zip", "time.time", "<builtin>.open", "tensorflow.compat.v1.RunMetadata", "tensorflow.compat.v1.RunOptions"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.inference_pb.inference": ["<builtin>.range", "tensorflow.Graph", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.inference_pb.filtered_data", "os.path.join", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.GraphDef", "tensorflow.compat.v1.GraphOptions", "tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig", "tensorflow.import_graph_def", "<builtin>.float", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.inference_pb.calculate", "<builtin>.str", "<builtin>.int", "tensorflow.io.gfile.GFile", "data_iterator.DataIterator"], "tensorflow.io.gfile.GFile": [], "tensorflow.compat.v1.GraphDef": [], "tensorflow.Graph": [], "tensorflow.import_graph_def": [], "tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig": [], "tensorflow.compat.v1.GraphOptions": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.shuffle": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.shuffle.main"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.shuffle.main": ["os.path.realpath", "tempfile.mkstemp", "tempfile.TemporaryFile", "os.remove", "os.path.split", "random.shuffle", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils._Linear.__init__": ["tensorflow.python.util.nest.is_sequence", "tensorflow.python.ops.variable_scope.variable_scope", "<builtin>.ValueError", "tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.ops.init_ops.constant_initializer", "tensorflow.python.ops.variable_scope.get_variable_scope"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils._Linear.__call__": ["tensorflow.python.ops.array_ops.concat", "<builtin>.len", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.nn_ops.bias_add"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.QAAttGRUCell.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.QAAttGRUCell.state_size": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.QAAttGRUCell.output_size": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.QAAttGRUCell.__call__": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.QAAttGRUCell.call"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.QAAttGRUCell.call": ["tensorflow.python.ops.array_ops.split", "tensorflow.python.ops.variable_scope.variable_scope", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils._Linear.__init__", "tensorflow.python.ops.math_ops.sigmoid", "tensorflow.python.ops.init_ops.constant_initializer"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.VecAttGRUCell.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.VecAttGRUCell.state_size": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.VecAttGRUCell.output_size": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.VecAttGRUCell.__call__": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.VecAttGRUCell.call"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.VecAttGRUCell.call": ["tensorflow.python.ops.array_ops.split", "tensorflow.python.ops.variable_scope.variable_scope", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils._Linear.__init__", "tensorflow.python.ops.math_ops.sigmoid", "tensorflow.python.ops.init_ops.constant_initializer"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.prelu": ["tensorflow.cast", "tensorflow.maximum", "tensorflow.constant_initializer", "tensorflow.compat.v1.get_variable", "tensorflow.minimum", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.calc_auc": ["<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.calc_auc.<lambda1>": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.attention": ["tensorflow.expand_dims", "tensorflow.random_normal", "tensorflow.tensordot", "tensorflow.shape", "tensorflow.name_scope", "tensorflow.ones_like", "tensorflow.tanh", "tensorflow.Variable", "tensorflow.where", "tensorflow.concat", "tensorflow.reshape", "tensorflow.equal", "tensorflow.array_ops.transpose", "tensorflow.nn.softmax", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.din_attention": ["tensorflow.expand_dims", "<builtin>.print", "tensorflow.shape", "tensorflow.ones_like", "tensorflow.tile", "tensorflow.where", "tensorflow.concat", "tensorflow.reshape", "tensorflow.equal", "tensorflow.array_ops.transpose", "tensorflow.compat.v1.layers.dense", "<builtin>.isinstance", "tensorflow.nn.softmax", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.din_fcn_attention": ["tensorflow.expand_dims", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.prelu", "tensorflow.shape", "tensorflow.ones_like", "tensorflow.tile", "tensorflow.where", "tensorflow.concat", "tensorflow.reshape", "tensorflow.equal", "tensorflow.array_ops.transpose", "tensorflow.compat.v1.layers.dense", "<builtin>.isinstance", "tensorflow.nn.softmax", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.self_attention": ["tensorflow.expand_dims", "<builtin>.len", "tensorflow.TensorArray", "tensorflow.while_loop", "tensorflow.transpose"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.self_attention.cond": ["tensorflow.shape", "tensorflow.less"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.self_attention.body": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.din_fcn_attention", "tensorflow.reduce_sum"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.self_all_attention": ["tensorflow.expand_dims", "<builtin>.len", "tensorflow.TensorArray", "tensorflow.while_loop", "tensorflow.transpose"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.self_all_attention.cond": ["tensorflow.shape", "tensorflow.less"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.self_all_attention.body": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.din_fcn_attention", "tensorflow.reduce_sum"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.din_fcn_shine": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.dien.inference.utils.prelu", "tensorflow.shape", "tensorflow.ones_like", "tensorflow.tile", "tensorflow.concat", "tensorflow.reshape", "tensorflow.equal", "tensorflow.array_ops.transpose", "tensorflow.compat.v1.layers.dense", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model.sparse_to_dense_grads": ["tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model.neumf_model_fn": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model.construct_model", "training.ncf_common.convert_to_softmax_logits", "official.recommendation.stat_utils.random_int32", "tensorflow.identity", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model.sparse_to_dense_grads", "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy", "tensorflow.contrib.tpu.CrossShardOptimizer", "tensorflow.compat.v1.trainable_variables", "tensorflow.estimator.EstimatorSpec", "tensorflow.keras.layers.Input", "tensorflow.group", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model._get_estimator_spec_with_metrics", "official.utils.logs.mlperf_helper.ncf_print", "tensorflow.compat.v1.train.get_global_step", "tensorflow.compat.v1.get_collection", "tensorflow.compat.v1.train.AdamOptimizer", "tensorflow.set_random_seed"], "official.recommendation.stat_utils.random_int32": [], "tensorflow.set_random_seed": [], "tensorflow.keras.layers.Input": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model.construct_model": ["tensorflow.cast", "sys.stdout.flush", "<builtin>.len", "tensorflow.keras.layers.multiply", "<builtin>.ValueError", "tensorflow.keras.mixed_precision.experimental.Policy", "tensorflow.keras.layers.concatenate", "tensorflow.keras.layers.Lambda", "six.moves.xrange", "official.utils.logs.mlperf_helper.ncf_print", "tensorflow.keras.regularizers.l2", "tensorflow.keras.layers.Embedding", "tensorflow.keras.layers.Dense", "tensorflow.keras.models.Model"], "training.ncf_common.convert_to_softmax_logits": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model._get_estimator_spec_with_metrics": ["tensorflow.contrib.tpu.TPUEstimatorSpec", "tensorflow.estimator.EstimatorSpec", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model.compute_eval_loss_and_metrics_helper"], "official.utils.logs.mlperf_helper.ncf_print": [], "tensorflow.contrib.tpu.CrossShardOptimizer": [], "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy": [], "tensorflow.identity": [], "tensorflow.compat.v1.train.get_global_step": [], "tensorflow.compat.v1.trainable_variables": [], "tensorflow.compat.v1.get_collection": [], "tensorflow.group": [], "tensorflow.estimator.EstimatorSpec": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model._strip_first_and_last_dimension": ["tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model.construct_model.mf_slice_fn": ["tensorflow.squeeze"], "tensorflow.squeeze": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model.construct_model.mlp_slice_fn": ["tensorflow.squeeze"], "tensorflow.keras.regularizers.l2": [], "tensorflow.keras.layers.Embedding": [], "tensorflow.keras.layers.Lambda": [], "tensorflow.keras.mixed_precision.experimental.Policy": [], "tensorflow.keras.layers.multiply": [], "tensorflow.keras.layers.concatenate": [], "six.moves.xrange": [], "tensorflow.keras.layers.Dense": [], "tensorflow.keras.models.Model": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model.compute_eval_loss_and_metrics_helper": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model.compute_top_k_and_ndcg", "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy", "tensorflow.one_hot", "tensorflow.tile", "tensorflow.reshape", "tensorflow.zeros"], "tensorflow.contrib.tpu.TPUEstimatorSpec": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model.compute_top_k_and_ndcg": ["tensorflow.cast", "tensorflow.reduce_sum", "tensorflow.less", "tensorflow.not_equal", "tensorflow.reshape", "tensorflow.equal", "tensorflow.math.log", "tensorflow.argsort", "tensorflow.multiply", "tensorflow.range"], "tensorflow.zeros": [], "tensorflow.one_hot": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.neumf_model.compute_eval_loss_and_metrics_helper.metric_fn": ["tensorflow.compat.v1.metrics.mean"], "tensorflow.compat.v1.metrics.mean": [], "tensorflow.argsort": [], "tensorflow.range": [], "tensorflow.multiply": [], "tensorflow.not_equal": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_estimator_main": ["absl.logging.set_verbosity", "absl.app.run", "training.ncf_common.define_ncf_flags"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_estimator_main.construct_estimator": ["tensorflow.estimator.Estimator", "tensorflow.contrib.compiler.xla.estimator_model_fn", "training.ncf_common.get_v1_distribution_strategy", "absl.logging.info", "tensorflow.estimator.RunConfig"], "training.ncf_common.get_v1_distribution_strategy": [], "tensorflow.estimator.RunConfig": [], "tensorflow.contrib.compiler.xla.estimator_model_fn": [], "tensorflow.estimator.Estimator": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_estimator_main.log_and_get_hooks": ["official.utils.logs.logger.get_benchmark_logger", "official.utils.logs.hooks_helper.get_train_hooks"], "official.utils.logs.hooks_helper.get_train_hooks": [], "official.utils.logs.logger.get_benchmark_logger": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_estimator_main.main": ["official.utils.logs.mlperf_helper.LOGGER", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_estimator_main.run_ncf", "official.utils.logs.logger.benchmark_context", "os.path.split", "os.path.abspath", "official.utils.logs.mlperf_helper.set_ncf_root"], "official.utils.logs.logger.benchmark_context": [], "official.utils.logs.mlperf_helper.LOGGER": [], "official.utils.logs.mlperf_helper.set_ncf_root": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_estimator_main.run_ncf": ["<builtin>.range", "official.utils.misc.model_helpers.apply_clean", "training.ncf_common.parse_flags", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_estimator_main.log_and_get_hooks", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_estimator_main.construct_estimator", "official.utils.logs.mlperf_helper.ncf_print", "official.utils.misc.model_helpers.past_stop_threshold", "tensorflow.estimator.ProfilerHook", "absl.logging.info", "<builtin>.float", "tensorflow.keras.backend.clear_session", "training.ncf_common.get_inputs"], "training.ncf_common.parse_flags": [], "training.ncf_common.get_inputs": [], "official.utils.misc.model_helpers.apply_clean": [], "tensorflow.estimator.ProfilerHook": [], "official.utils.misc.model_helpers.past_stop_threshold": [], "tensorflow.keras.backend.clear_session": [], "training.ncf_common.define_ncf_flags": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_common": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_common.get_inputs": ["official.recommendation.movielens.download", "official.recommendation.data_pipeline.DummyConstructor", "numpy.random.seed", "official.recommendation.data_preprocessing.instantiate_pipeline"], "official.recommendation.movielens.download": [], "official.recommendation.data_pipeline.DummyConstructor": [], "official.recommendation.data_preprocessing.instantiate_pipeline": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_common.parse_flags": ["<builtin>.int", "official.utils.flags.core.get_num_gpus", "<builtin>.float"], "official.utils.flags.core.get_num_gpus": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_common.get_v1_distribution_strategy": ["tensorflow.distribute.experimental.TPUStrategy", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "json.dumps", "official.utils.misc.distribution_utils.get_distribution_strategy", "absl.logging.info", "absl.logging.getLogger", "tensorflow.Session.reset"], "absl.logging.getLogger": [], "tensorflow.distribute.cluster_resolver.TPUClusterResolver": [], "tensorflow.Session.reset": [], "json.dumps": [], "tensorflow.distribute.experimental.TPUStrategy": [], "official.utils.misc.distribution_utils.get_distribution_strategy": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_common.define_ncf_flags": ["official.utils.flags.core.set_defaults", "absl.flags.validator", "official.utils.flags.core.define_device", "official.utils.flags.core.define_benchmark", "absl.flags.multi_flags_validator", "official.utils.flags.core.define_performance", "absl.flags.DEFINE_integer", "absl.flags.DEFINE_bool", "absl.flags.adopt_module_key_flags", "absl.flags.DEFINE_float", "absl.flags.DEFINE_string", "absl.flags.DEFINE_list", "official.utils.flags.core.define_base", "absl.flags.DEFINE_boolean", "official.utils.flags.core.help_wrap", "absl.flags.DEFINE_enum"], "official.utils.flags.core.define_base": [], "official.utils.flags.core.define_performance": [], "official.utils.flags.core.define_device": [], "official.utils.flags.core.define_benchmark": [], "absl.flags.adopt_module_key_flags": [], "official.utils.flags.core.set_defaults": [], "official.utils.flags.core.help_wrap": [], "absl.flags.DEFINE_enum": [], "absl.flags.DEFINE_list": [], "absl.flags.DEFINE_float": [], "absl.flags.DEFINE_bool": [], "absl.flags.validator": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_common.define_ncf_flags.eval_size_check": ["<builtin>.int"], "absl.flags.multi_flags_validator": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_common.define_ncf_flags.xla_validator": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.training.ncf_common.convert_to_softmax_logits": ["tensorflow.concat"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.define_ncf_flags", "tensorflow.logging.set_verbosity", "absl.app.run"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.LoggerHook.begin": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.LoggerHook.before_run": ["time.time"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.LoggerHook.after_run": ["<builtin>.print", "time.time", "datetime.datetime.now"], "datetime.datetime.now": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.LoggerHook.end": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.get_hit_rate_and_ndcg": ["numpy.arange", "numpy.zeros", "numpy.array", "numpy.sum", "numpy.concatenate", "numpy.argsort", "numpy.array_equal", "numpy.log", "numpy.flip", "numpy.where", "numpy.equal", "numpy.ones", "numpy.argwhere"], "numpy.arange": [], "numpy.concatenate": [], "numpy.where": [], "numpy.array_equal": [], "numpy.argsort": [], "numpy.flip": [], "numpy.equal": [], "numpy.argwhere": [], "numpy.log": [], "numpy.sum": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.evaluate_model": ["numpy.concatenate", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.get_hit_rate_and_ndcg", "os.environ.get", "tensorflow.train.SessionRunHook.__init__", "<builtin>.list", "tensorflow.logging.info"], "tensorflow.logging.info": [], "tensorflow.train.SessionRunHook.__init__": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.construct_estimator": ["tensorflow.contrib.tpu.TPUEstimator", "tensorflow.estimator.Estimator", "tensorflow.contrib.tpu.TPUConfig", "tensorflow.contrib.cluster_resolver.TPUClusterResolver", "tensorflow.ConfigProto", "official.utils.misc.distribution_utils.get_distribution_strategy", "tensorflow.contrib.tpu.RunConfig", "tensorflow.estimator.RunConfig"], "tensorflow.contrib.cluster_resolver.TPUClusterResolver": [], "tensorflow.contrib.tpu.TPUConfig": [], "tensorflow.ConfigProto": [], "tensorflow.contrib.tpu.RunConfig": [], "tensorflow.contrib.tpu.TPUEstimator": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.main": ["official.utils.logs.logger.benchmark_context", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.run_ncf"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.run_ncf": ["official.recommendation.data_preprocessing.make_pred_input_fn", "<builtin>.print", "tensorflow.logging.warning", "gc.collect", "tensorflow.logging.fatal", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.evaluate_model", "tensorflow.logging.info", "official.utils.misc.model_helpers.apply_clean", "tensorflow.gfile.DeleteRecursively", "official.utils.logs.logger.get_benchmark_logger", "<builtin>.float", "numpy.abs", "official.recommendation.data_preprocessing.make_train_input_fn", "official.utils.misc.distribution_utils.per_device_batch_size", "official.utils.flags.core.get_num_gpus", "<builtin>.range", "official.datasets.movielens.download", "official.utils.logs.hooks_helper.get_train_hooks", "<builtin>.int", "tensorflow.keras.backend.clear_session", "official.recommendation.data_preprocessing.instantiate_pipeline", "official.utils.misc.model_helpers.past_stop_threshold", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.construct_estimator"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.serving_input_receiver_fn": ["tensorflow.placeholder", "tensorflow.estimator.export.ServingInputReceiver"], "tensorflow.placeholder": [], "tensorflow.estimator.export.ServingInputReceiver": [], "official.datasets.movielens.download": [], "official.utils.misc.distribution_utils.per_device_batch_size": [], "official.recommendation.data_preprocessing.make_pred_input_fn": [], "official.recommendation.data_preprocessing.make_train_input_fn": [], "numpy.abs": [], "tensorflow.logging.warning": [], "tensorflow.gfile.DeleteRecursively": [], "tensorflow.logging.fatal": [], "gc.collect": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32.ncf_main.define_ncf_flags": ["official.utils.flags.core.set_defaults", "official.utils.flags.core.define_device", "official.utils.flags.core.define_benchmark", "official.utils.flags.core.define_performance", "absl.flags.DEFINE_integer", "absl.flags.DEFINE_bool", "absl.flags.adopt_module_key_flags", "absl.flags.DEFINE_string", "absl.flags.DEFINE_float", "absl.flags.DEFINE_list", "official.utils.flags.core.define_base", "absl.flags.DEFINE_boolean", "official.utils.flags.core.help_wrap", "absl.flags.DEFINE_enum"], "tensorflow.logging.set_verbosity": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.ncf.inference.fp32": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference": ["tensorflow.compat.v1.logging.set_verbosity", "time.time", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.main"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.build_model_columns": ["tensorflow.feature_column.crossed_column", "tensorflow.feature_column.categorical_column_with_vocabulary_list", "tensorflow.feature_column.categorical_column_with_hash_bucket", "tensorflow.feature_column.embedding_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.bucketized_column", "tensorflow.feature_column.indicator_column"], "tensorflow.feature_column.numeric_column": [], "tensorflow.feature_column.categorical_column_with_vocabulary_list": [], "tensorflow.feature_column.categorical_column_with_hash_bucket": [], "tensorflow.feature_column.bucketized_column": [], "tensorflow.feature_column.crossed_column": [], "tensorflow.feature_column.indicator_column": [], "tensorflow.feature_column.embedding_column": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.build_estimator": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.build_model_columns", "tensorflow.compat.v1.ConfigProto", "tensorflow.estimator.LinearClassifier", "tensorflow.estimator.DNNClassifier", "tensorflow.estimator.RunConfig", "tensorflow.estimator.DNNLinearCombinedClassifier"], "tensorflow.estimator.LinearClassifier": [], "tensorflow.estimator.DNNClassifier": [], "tensorflow.estimator.DNNLinearCombinedClassifier": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.input_fn": ["tensorflow.io.gfile.exists", "tensorflow.data.TextLineDataset"], "tensorflow.io.gfile.exists": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.input_fn.parse_csv": ["<builtin>.dict", "tensorflow.io.decode_csv", "<builtin>.print", "<builtin>.zip", "tensorflow.equal"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.main": ["os.path.join", "<builtin>.print", "<builtin>.sum", "official.utils.logs.hooks_helper.get_train_hooks", "time.time", "<builtin>.open", "<builtin>.sorted", "argparse.ArgumentParser.parse_args", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.build_estimator", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.WideDeepArgParser.__init__"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.WideDeepArgParser.__init__": ["official.utils.arg_parsers.parsers.BaseParser", "argparse.ArgumentParser.add_argument", "<builtin>.super", "argparse.ArgumentParser.set_defaults"], "argparse.ArgumentParser.parse_args": [], "<builtin>.sum": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.main.train_input_fn": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.input_fn"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.main.eval_input_fn": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep.inference.fp32.wide_deep_inference.input_fn"], "official.utils.arg_parsers.parsers.BaseParser": [], "argparse.ArgumentParser.add_argument": [], "argparse.ArgumentParser.set_defaults": [], "tensorflow.compat.v1.logging.set_verbosity": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization": ["<builtin>.dict", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_numeric", "tensorflow.python.framework.ops.Graph", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_categorical_embedding_with_hash_bucket", "<builtin>.print", "os.path.dirname", "tensorflow.compat.v1.graph_util.extract_sub_graph", "tensorflow.core.framework.graph_pb2.GraphDef", "<builtin>.open", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.fuse_categorical_numeric_columns", "tensorflow.import_graph_def", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_crossed_column", "google.protobuf.text_format.Merge", "<builtin>.str", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_bucketized_column", "tensorflow.python.framework.graph_io.write_graph", "os.path.splitext", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_categorical_with_voc_list", "tensorflow.compat.v1.GraphDef", "<builtin>.enumerate", "sys.exit", "os.path.basename", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_categorical_column_with_identity"], "tensorflow.python.framework.ops.Graph": [], "tensorflow.core.framework.graph_pb2.GraphDef": [], "google.protobuf.text_format.Merge": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_categorical_embedding_with_hash_bucket": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_categorical_embedding_with_hash_bucket"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_bucketized_column": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_bucketized_column"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_crossed_column": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_crossed_column"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_categorical_column_with_identity": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_categorical_column_with_identity"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_categorical_with_voc_list": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_categorical_with_voc_list"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.optimize_numeric": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.dataset.featurecolumn_graph_optimization.fuse_categorical_numeric_columns": ["<builtin>.range", "tensorflow.reduce_sum", "tensorflow.compat.v1.placeholder", "tensorflow.gather_nd", "tensorflow.constant", "numpy.stack", "tensorflow.concat", "tensorflow.reshape", "tensorflow.python.client.session.Session"], "tensorflow.python.client.session.Session": [], "numpy.stack": [], "tensorflow.constant": [], "tensorflow.gather_nd": [], "tensorflow.compat.v1.graph_util.extract_sub_graph": [], "tensorflow.python.framework.graph_io.write_graph": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.train_and_eval", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.get_arg_parser", "<builtin>.print", "tensorflow.compat.v1.logging.set_verbosity", "time.time", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.generate_input_fn": ["tensorflow.data.TextLineDataset"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.generate_input_fn.parse_csv": ["<builtin>.range", "tensorflow.io.decode_csv", "<builtin>.zip", "collections.OrderedDict", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.build_feature_cols": ["<builtin>.range", "<builtin>.len", "numpy.array", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.build_feature_cols.numeric_column_normalized", "<builtin>.print", "tensorflow.feature_column.categorical_column_with_hash_bucket", "tensorflow.feature_column.embedding_column", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.build_feature_cols.make_minmaxscaler", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.build_feature_cols.numeric_column_normalized": ["tensorflow.feature_column.numeric_column"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.build_feature_cols.make_minmaxscaler": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.build_feature_cols.make_minmaxscaler.minmaxscaler": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.build_model": ["tensorflow.estimator.LinearClassifier", "tensorflow.estimator.DNNClassifier", "tensorflow.estimator.RunConfig", "tensorflow.estimator.DNNLinearCombinedClassifier"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.build_estimator": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.build_model", "time.time", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.build_feature_cols", "<builtin>.str", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.column_to_dtype": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.serving_input_fn": ["tensorflow.expand_dims", "tensorflow.estimator.export.ServingInputReceiver", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.column_to_dtype", "tensorflow.compat.v1.placeholder"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.train_and_eval": ["os.path.join", "<builtin>.print", "os.path.exists", "<builtin>.sum", "math.ceil", "time.time", "<builtin>.open", "<builtin>.float", "<builtin>.str", "<builtin>.int", "sys.exit", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.build_estimator"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.train_and_eval.<lambda1>": ["<builtin>.int", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.generate_input_fn"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.train_and_eval.<lambda2>": ["...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.generate_input_fn"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.training.train.get_arg_parser": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference.inference": ["<builtin>.dict", "tensorflow.python.framework.ops.Graph", "<builtin>.zip", "<builtin>.print", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference.inference.input_fn", "<builtin>.open", "tensorflow.import_graph_def", "math.ceil", "<builtin>.float", "numpy.argmax", "google.protobuf.text_format.Merge", "tensorflow.compat.v1.data.make_one_shot_iterator", "<builtin>.range", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.python_io.tf_record_iterator", "<builtin>.round", "time.time", "os.path.splitext", "tensorflow.io.FixedLenSequenceFeature", "<builtin>.int", "argparse.ArgumentParser", "numpy.sum", "<builtin>.sum", "tensorflow.compat.v1.Session", "tensorflow.core.framework.graph_pb2.GraphDef"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference.inference.str2bool": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference.inference.input_fn": ["tensorflow.data.TFRecordDataset"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference.inference.input_fn._parse_function": ["tensorflow.reshape", "<builtin>.zip", "tensorflow.io.parse_example", "collections.OrderedDict"], "tensorflow.compat.v1.python_io.tf_record_iterator": [], "<builtin>.round": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference.parallel_inference": ["tensorflow.TensorArray", "tensorflow.python.framework.ops.Graph", "sys.exit", "<builtin>.print", "tensorflow.compat.v1.graph_util.extract_sub_graph", "tensorflow.compat.v1.disable_v2_behavior", "<builtin>.open", "tensorflow.compat.v2.while_loop", "tensorflow.import_graph_def", "math.ceil", "tensorflow.constant", "<builtin>.float", "google.protobuf.text_format.Merge", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.range", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.python_io.tf_record_iterator", "<builtin>.round", "time.time", "os.path.splitext", "tensorflow.io.FixedLenSequenceFeature", "<builtin>.int", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference.parallel_inference.input_fn", "tensorflow.compat.v1.reset_default_graph", "<builtin>.sum", "tensorflow.compat.v1.GraphDef", "tensorflow.compat.v1.Session", "tensorflow.core.framework.graph_pb2.GraphDef"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference.parallel_inference.str2bool": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference.parallel_inference.input_fn": ["tensorflow.data.TFRecordDataset"], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference.parallel_inference.input_fn._parse_function": ["tensorflow.reshape", "<builtin>.zip", "tensorflow.io.parse_example", "collections.OrderedDict"], "tensorflow.compat.v1.reset_default_graph": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference.parallel_inference._body": ["tensorflow.cast", "tensorflow.reduce_sum", "tensorflow.add", "tensorflow.import_graph_def", "tensorflow.equal", "tensorflow.argmax"], "tensorflow.argmax": [], "tensorflow.add": [], "...repos_filtered.IntelAI.models.models.recommendation.tensorflow.wide_deep_large_ds.inference.parallel_inference.<lambda1>": ["<builtin>.int"], "tensorflow.compat.v2.while_loop": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.print_weights", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create", "caffe2.python.net_drawer.GetPydotGraph", "<builtin>.print", "<builtin>.min", "warnings.catch_warnings", "numpy.random.seed", "<builtin>.open", "dlrm_data_caffe2.read_dataset", "warnings.filterwarnings", "caffe2.python.core.Net", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.get_output", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.sgd_optimizer", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.get_loss", "copy.deepcopy", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.calculate_metrics", "caffe2.python.core.DeviceOption", "caffe2.python.core.DeviceScope", "<builtin>.str", "numpy.round", "<builtin>.range", "caffe2.python.dyndep.InitOpsLibrary", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.MSEloss", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.parameters", "caffe2.python.workspace.NumGpuDevices", "<builtin>.map", "time.time", "argparse.ArgumentParser", "<builtin>.list", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.BCEloss", "onnx.checker.check_model", "numpy.array", "dlrm_data_caffe2.generate_random_data", "numpy.sum", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.__init__", "numpy.set_printoptions", "numpy.fromstring", "sys.exit", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.run"], "warnings.catch_warnings": [], "warnings.filterwarnings": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.FeedBlobWrapper": ["<builtin>.range", "numpy.split", "caffe2.python.core.DeviceOption", "caffe2.python.workspace.FeedBlob", "<builtin>.str", "sys.exit"], "numpy.split": [], "caffe2.python.core.DeviceOption": [], "caffe2.python.workspace.FeedBlob": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.FetchBlobWrapper": ["<builtin>.range", "numpy.concatenate", "functools.reduce", "<builtin>.str", "caffe2.python.workspace.FetchBlob"], "caffe2.python.workspace.FetchBlob": [], "functools.reduce": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.AddLayerWrapper": ["<builtin>.range", "caffe2.python.brew.iter", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.AddLayerWrapper.adjust_tag", "caffe2.python.core.DeviceOption", "caffe2.python.core.DeviceScope", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.AddLayerWrapper.adjust_tag": ["<builtin>.list", "<builtin>.map"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.AddLayerWrapper.adjust_tag.<lambda1>": [], "<builtin>.map": [], "caffe2.python.core.DeviceScope": [], "caffe2.python.brew.iter": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_mlp": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.AddLayerWrapper", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.FeedBlobWrapper", "numpy.sqrt", "numpy.random.normal", "<builtin>.str"], "numpy.sqrt": [], "numpy.random.normal": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_emb": ["<builtin>.range", "numpy.random.uniform", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.FeedBlobWrapper", "numpy.sqrt", "caffe2.python.core.DeviceOption", "caffe2.python.core.DeviceScope", "<builtin>.str"], "numpy.random.uniform": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_interactions": ["sys.exit"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_sequential_forward_ops": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_emb", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_mlp", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_interactions"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_parallel_forward_ops": ["<builtin>.range", "<builtin>.len", "<builtin>.zip", "<builtin>.enumerate", "<builtin>.str", "<builtin>.map", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_mlp", "caffe2.python.core.DeviceOption", "caffe2.python.core.DeviceScope", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_interactions", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_emb", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_parallel_forward_ops.<lambda1>": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_parallel_forward_ops.<lambda2>": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.__init__": ["caffe2.python.model_helper.ModelHelper", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_sequential_forward_ops", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_parallel_forward_ops", "<builtin>.super", "caffe2.python.workspace.GlobalInit", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.set_tags"], "caffe2.python.workspace.GlobalInit": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.set_tags": [], "caffe2.python.model_helper.ModelHelper": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.parameters": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.get_loss": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.FetchBlobWrapper"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.get_output": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.FetchBlobWrapper"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_model", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_input"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_input": ["<builtin>.range", "<builtin>.len", "numpy.zeros", "numpy.array", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.FeedBlobWrapper", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.create_model": ["<builtin>.range", "<builtin>.len", "numpy.array", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.FeedBlobWrapper", "caffe2.python.workspace.CreateNet", "caffe2.python.workspace.RunNetOnce"], "caffe2.python.workspace.RunNetOnce": [], "caffe2.python.workspace.CreateNet": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.run": ["<builtin>.range", "<builtin>.len", "numpy.array", "caffe2.python.workspace.C.benchmark_net", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.FeedBlobWrapper", "caffe2.python.workspace.RunNet", "<builtin>.str"], "caffe2.python.workspace.RunNet": [], "caffe2.python.workspace.C.benchmark_net": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.MSEloss": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.AddLayerWrapper"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.BCEloss": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.AddLayerWrapper"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.sgd_optimizer": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.AddLayerWrapper", "<builtin>.enumerate", "caffe2.python.core.DeviceOption", "caffe2.python.core.DeviceScope", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.print_all": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.FetchBlobWrapper", "<builtin>.enumerate", "caffe2.python.workspace.Blobs"], "caffe2.python.workspace.Blobs": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.print_weights": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.FetchBlobWrapper", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.print_activations": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.DLRM_Net.FetchBlobWrapper", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.define_metrics": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.define_metrics.<dict1>.<lambda1>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.define_metrics.<dict1>.<lambda2>": [], "numpy.round": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.define_metrics.<lambda2>": ["numpy.round"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.define_metrics.<dict1>.<lambda3>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.define_metrics.<lambda3>": ["numpy.round"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.define_metrics.<dict1>.<lambda4>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.define_metrics.<lambda4>": ["numpy.round"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.define_metrics.<dict1>.<lambda5>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.define_metrics.<lambda5>": ["numpy.round"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.calculate_metrics": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.define_metrics", "numpy.concatenate"], "numpy.set_printoptions": [], "caffe2.python.workspace.NumGpuDevices": [], "numpy.fromstring": [], "dlrm_data_caffe2.read_dataset": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_caffe2.<lambda1>": [], "dlrm_data_caffe2.generate_random_data": [], "<builtin>.min": [], "caffe2.python.dyndep.InitOpsLibrary": [], "caffe2.python.net_drawer.GetPydotGraph": [], "caffe2.python.core.Net": [], "onnx.checker.check_model": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.loadDataset"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.convertUStringToDistinctIntsDict": ["<builtin>.range", "<builtin>.print", "<builtin>.len", "numpy.zeros"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.convertUStringToDistinctIntsUnique": ["<builtin>.range", "<builtin>.len", "numpy.zeros", "numpy.array", "numpy.concatenate", "<builtin>.print", "numpy.unique"], "numpy.unique": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.processCriteoAdData": ["<builtin>.range", "numpy.zeros", "<builtin>.print", "os.path.exists", "numpy.load", "numpy.transpose", "<builtin>.enumerate", "numpy.savez_compressed"], "numpy.load": [], "numpy.transpose": [], "numpy.savez_compressed": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.concatCriteoAdData": ["<builtin>.range", "numpy.zeros", "<builtin>.len", "numpy.array", "numpy.sum", "numpy.concatenate", "<builtin>.print", "os.path.exists", "numpy.load", "<builtin>.str", "numpy.save", "numpy.random.permutation", "numpy.savez_compressed", "numpy.random.randint", "sys.exit"], "numpy.save": [], "numpy.random.randint": [], "numpy.random.permutation": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.transformCriteoAdData": ["<builtin>.range", "numpy.arange", "<builtin>.len", "numpy.array", "numpy.concatenate", "numpy.log", "<builtin>.print", "numpy.random.permutation", "numpy.array_split"], "numpy.array_split": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.getCriteoAdData": ["<builtin>.range", "numpy.zeros", "<builtin>.len", "numpy.array", "numpy.sum", "<builtin>.print", "os.path.exists", "numpy.load", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.concatCriteoAdData", "<builtin>.enumerate", "<builtin>.divmod", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.getCriteoAdData.process_one_file", "numpy.savez_compressed", "<builtin>.open", "<builtin>.str", "sys.exit", "<builtin>.list", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.processCriteoAdData"], "<builtin>.divmod": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.getCriteoAdData.process_one_file": ["<builtin>.range", "numpy.zeros", "numpy.random.uniform", "<builtin>.len", "numpy.int32", "numpy.array", "<builtin>.print", "os.path.exists", "numpy.transpose", "<builtin>.enumerate", "<builtin>.map", "numpy.savez_compressed", "<builtin>.open", "<builtin>.str", "<builtin>.list"], "numpy.int32": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.getCriteoAdData.process_one_file.<lambda1>": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.getCriteoAdData.process_one_file.<lambda2>": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.loadDataset": ["<builtin>.range", "<builtin>.ValueError", "<builtin>.print", "os.path.exists", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_utils.getCriteoAdData", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.trace_profile", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.read_trace_from_file", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.write_trace_to_file", "<builtin>.enumerate", "<builtin>.map", "collections.Counter", "numpy.set_printoptions", "numpy.random.seed", "<builtin>.float", "<builtin>.sorted", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.trace_generate_lru", "argparse.ArgumentParser", "<builtin>.list", "operator.itemgetter", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.write_dist_to_file"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.read_dataset": ["<builtin>.len", "<builtin>.print", "numpy.load", "data_utils.transformCriteoAdData", "data_utils.loadDataset", "sys.exit", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.read_dataset.assemble_samples"], "data_utils.loadDataset": [], "data_utils.transformCriteoAdData": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.read_dataset.assemble_samples": ["<builtin>.range", "<builtin>.len", "<builtin>.print", "<builtin>.min", "numpy.ones", "<builtin>.int", "<builtin>.list", "numpy.floor"], "numpy.floor": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.generate_random_data": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.generate_random_output_batch", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.generate_synthetic_input_batch", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.generate_uniform_input_batch", "<builtin>.min", "numpy.ceil", "<builtin>.int", "sys.exit"], "numpy.ceil": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.generate_uniform_input_batch": ["<builtin>.range", "numpy.int32", "numpy.random.rand", "<builtin>.min", "numpy.random.random", "numpy.round", "numpy.unique", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.generate_synthetic_input_batch": ["<builtin>.range", "numpy.int32", "numpy.max", "<builtin>.print", "numpy.random.rand", "<builtin>.min", "numpy.min", "numpy.mod", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.read_dist_from_file", "numpy.random.random", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.trace_generate_lru", "<builtin>.str", "numpy.round", "numpy.unique", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.generate_random_output_batch": ["numpy.round", "numpy.random.rand"], "numpy.random.random": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.read_dist_from_file": ["<builtin>.float", "<builtin>.print", "<builtin>.int", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.trace_generate_lru": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.generate_stack_distance", "<builtin>.len", "numpy.uint64"], "numpy.min": [], "numpy.mod": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.generate_stack_distance": ["numpy.random.rand", "bisect.bisect", "<builtin>.enumerate"], "bisect.bisect": [], "numpy.uint64": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.trace_generate_rand": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.generate_stack_distance", "<builtin>.len", "numpy.uint64"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.trace_profile": ["<builtin>.len", "numpy.uint64", "numpy.ceil", "<builtin>.int", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.read_trace_from_file": ["<builtin>.print", "<builtin>.map", "<builtin>.open", "<builtin>.list", "numpy.fromfile"], "numpy.fromfile": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.read_trace_from_file.<lambda1>": ["numpy.uint64"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.write_trace_to_file": ["<builtin>.len", "numpy.array", "<builtin>.print", "<builtin>.open", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.write_dist_to_file": ["<builtin>.print", "<builtin>.str", "<builtin>.len", "<builtin>.open"], "collections.Counter": [], "operator.itemgetter": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.<lambda1>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_caffe2.<lambda2>": ["<builtin>.float"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte._test"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte.DataLoader.__init__": ["numpy.array", "os.path.join", "<builtin>.sum", "numpy.load", "numpy.ceil", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte.DataLoader.__iter__": ["<builtin>.iter", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte._batch_generator"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte._batch_generator": ["numpy.concatenate", "os.path.join", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte._transform_features", "numpy.load", "<builtin>.slice", "numpy.ceil", "<builtin>.int"], "<builtin>.iter": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte.DataLoader.__len__": ["math.ceil"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte._transform_features": ["torch.log", "torch.tensor", "torch.arange"], "torch.log": [], "torch.tensor": [], "torch.arange": [], "<builtin>.slice": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte._test": ["<builtin>.range", "<builtin>.print", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte._batch_generator", "time.time"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte.CriteoBinDataset.__init__": ["<builtin>.print", "numpy.load", "math.ceil", "<builtin>.open", "os.path.getsize"], "os.path.getsize": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte.CriteoBinDataset.__len__": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte.CriteoBinDataset.__getitem__": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte._transform_features", "torch.from_numpy", "numpy.frombuffer", "extend_distributed.dist.get_rank"], "extend_distributed.dist.get_rank": [], "numpy.frombuffer": [], "torch.from_numpy": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte.numpy_to_binary": ["<builtin>.len", "numpy.concatenate", "<builtin>.ValueError", "<builtin>.print", "numpy.load", "<builtin>.open", "numpy.ceil", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte._preprocess": ["<builtin>.range", "os.makedirs", "os.path.join", "<builtin>.print", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte.numpy_to_binary"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte._test_bin": ["<builtin>.range", "tqdm.tqdm", "torch.utils.data.DataLoader", "<builtin>.len", "os.path.join", "<builtin>.zip", "numpy.array_equal", "<builtin>.ValueError", "<builtin>.print", "<builtin>.enumerate", "dlrm_data_pytorch.CriteoDataset", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.data_loader_terabyte.CriteoBinDataset.__init__", "argparse.ArgumentParser"], "torch.utils.data.DataLoader": [], "dlrm_data_pytorch.CriteoDataset": [], "tqdm.tqdm": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed": ["os.environ.get"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.env2int": ["<builtin>.int", "os.environ.get"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.get_my_slice": ["torch.distributed.get_rank", "<builtin>.min", "<builtin>.divmod", "<builtin>.slice", "torch.distributed.get_world_size"], "torch.distributed.get_world_size": [], "torch.distributed.get_rank": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.get_split_lengths": ["torch.distributed.get_world_size", "<builtin>.range", "<builtin>.divmod", "torch.distributed.get_rank"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.init_distributed": ["torch.zeros", "<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.Request.__init__", "torch.distributed.get_rank", "<builtin>.print", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.env2int", "torch.distributed.init_process_group", "torch.distributed.all_gather", "<builtin>.hasattr", "torch.ones", "os.environ.get", "torch.distributed.get_world_size", "<builtin>.str", "<builtin>.list", "torch.distributed.is_mpi_available"], "torch.distributed.is_mpi_available": [], "torch.distributed.init_process_group": [], "torch.ones": [], "torch.zeros": [], "torch.distributed.all_gather": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.Request.__init__": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.Request.wait": ["torch.autograd.Function.apply"], "torch.autograd.Function.apply": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.All2All_ScatterList_Req.forward": ["<builtin>.range", "<builtin>.tuple", "torch.distributed.get_rank", "torch.distributed.scatter", "<builtin>.list"], "torch.distributed.scatter": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.All2All_ScatterList_Req.backward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.All2All_ScatterList_Wait.forward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.All2All_ScatterList_Wait.backward": ["<builtin>.range", "<builtin>.tuple", "torch.distributed.get_rank", "torch.distributed.gather", "<builtin>.list"], "torch.distributed.gather": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.All2All_Scatter_Req.forward": ["<builtin>.range", "<builtin>.tuple", "torch.distributed.get_rank", "torch.cat", "torch.distributed.scatter", "<builtin>.list"], "torch.cat": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.All2All_Scatter_Req.backward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.All2All_Scatter_Wait.forward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.All2All_Scatter_Wait.backward": ["<builtin>.range", "<builtin>.len", "torch.distributed.get_rank", "torch.distributed.gather", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.All2All_Req.forward": ["torch.cat", "<builtin>.tuple", "torch.distributed.all_to_all_single"], "torch.distributed.all_to_all_single": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.All2All_Req.backward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.All2All_Wait.forward": ["<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.All2All_Wait.backward": ["torch.cat", "torch.distributed.all_to_all_single"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.AllGather.forward": ["<builtin>.range", "<builtin>.len", "torch.empty_like", "torch.distributed.get_rank", "torch.cat", "<builtin>.sum", "torch.distributed.all_gather", "<builtin>.isinstance", "<builtin>.list"], "torch.empty_like": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.AllGather.backward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.alltoall": ["<builtin>.len", "<builtin>.print", "<builtin>.sum", "torch.autograd.Function.apply", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.get_split_lengths"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.shuffle_data": ["torch.cat", "torch.distributed.all_to_all_single"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.all_gather": ["torch.autograd.Function.apply"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.extend_distributed.barrier": ["torch.distributed.barrier"], "torch.distributed.barrier": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger": ["mlperf_logging.mllog.get_mllogger"], "mlperf_logging.mllog.get_mllogger": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger.log_start": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger._log_print"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger._log_print": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger.get_rank"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger.log_end": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger._log_print"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger.log_event": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger._log_print"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger.get_rank": ["torch.distributed.is_initialized", "torch.distributed.is_available", "torch.distributed.get_rank"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger.config_logger": ["os.path.join", "os.path.abspath", "mlperf_logging.mllog.config", "os.path.dirname"], "mlperf_logging.mllog.config": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger.barrier": ["torch.distributed.is_initialized", "torch.distributed.is_available", "torch.distributed.barrier"], "torch.distributed.is_available": [], "torch.distributed.is_initialized": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger.mlperf_submission_log": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger.config_logger", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.mlperf_logger.log_event"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.trace_generate_lru", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.write_trace_to_file", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.write_dist_to_file", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.read_trace_from_file", "<builtin>.map", "collections.Counter", "numpy.set_printoptions", "numpy.random.seed", "<builtin>.float", "<builtin>.sorted", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.trace_profile", "argparse.ArgumentParser", "<builtin>.list", "operator.itemgetter"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.CriteoDataset.__init__": ["<builtin>.range", "numpy.arange", "<builtin>.len", "numpy.array", "numpy.ceil", "numpy.concatenate", "<builtin>.ValueError", "<builtin>.print", "os.path.exists", "numpy.load", "data_utils.getCriteoAdData", "numpy.random.permutation", "numpy.array_split", "<builtin>.str", "<builtin>.int", "sys.exit"], "data_utils.getCriteoAdData": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.CriteoDataset.__getitem__": ["<builtin>.range", "<builtin>.len", "numpy.load", "sys.exit", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.CriteoDataset._default_preprocess": ["torch.log", "torch.tensor"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.CriteoDataset.__len__": ["<builtin>.len", "sys.exit"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.collate_wrapper_criteo": ["<builtin>.range", "torch.stack", "<builtin>.zip", "torch.tensor", "torch.log", "<builtin>.list"], "torch.stack": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.ensure_dataset_preprocessed": ["<builtin>.range", "<builtin>.print", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.CriteoDataset.__init__", "data_loader_terabyte.numpy_to_binary"], "data_loader_terabyte.numpy_to_binary": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.make_criteo_data_and_loaders": ["<builtin>.range", "torch.utils.data.DataLoader", "os.path.exists", "<builtin>.any", "mlperf_logger.log_event", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.CriteoDataset.__init__", "data_loader_terabyte.CriteoBinDataset", "data_loader_terabyte.DataLoader", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.ensure_dataset_preprocessed", "torch.utils.data.RandomSampler", "<builtin>.list", "os.path.dirname"], "data_loader_terabyte.CriteoBinDataset": [], "mlperf_logger.log_event": [], "torch.utils.data.RandomSampler": [], "data_loader_terabyte.DataLoader": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.RandomDataset.__init__": ["numpy.ceil", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.RandomDataset.reset_numpy_seed": ["numpy.random.seed"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.RandomDataset.__getitem__": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_random_output_batch", "<builtin>.min", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_uniform_input_batch", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_synthetic_input_batch", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.RandomDataset.reset_numpy_seed", "sys.exit", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_uniform_input_batch": ["<builtin>.range", "torch.tensor", "numpy.random.rand", "<builtin>.min", "numpy.random.random", "numpy.int64", "numpy.round", "numpy.unique", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_synthetic_input_batch": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.trace_generate_lru", "numpy.max", "torch.tensor", "numpy.random.rand", "<builtin>.min", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.read_dist_from_file", "numpy.min", "<builtin>.enumerate", "<builtin>.print", "numpy.mod", "numpy.random.random", "numpy.int64", "<builtin>.str", "numpy.round", "numpy.unique", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_random_output_batch": ["numpy.round", "torch.tensor", "numpy.random.rand"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.RandomDataset.__len__": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.collate_wrapper_random": ["torch.stack"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.make_random_data_and_loader": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.RandomDataset.__init__", "torch.utils.data.DataLoader"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_random_data": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_random_output_batch", "<builtin>.min", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_uniform_input_batch", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_synthetic_input_batch", "numpy.ceil", "<builtin>.int", "sys.exit"], "numpy.int64": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.read_dist_from_file": ["<builtin>.float", "<builtin>.print", "<builtin>.int", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.trace_generate_lru": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_stack_distance", "numpy.uint64"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_stack_distance": ["numpy.random.rand", "bisect.bisect", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.trace_generate_rand": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.generate_stack_distance", "numpy.uint64"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.trace_profile": ["<builtin>.len", "numpy.uint64", "numpy.ceil", "<builtin>.int", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.read_trace_from_file": ["<builtin>.print", "<builtin>.map", "<builtin>.open", "<builtin>.list", "numpy.fromfile"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.read_trace_from_file.<lambda1>": ["numpy.uint64"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.write_trace_to_file": ["<builtin>.len", "numpy.array", "<builtin>.print", "<builtin>.open", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.write_dist_to_file": ["<builtin>.print", "<builtin>.str", "<builtin>.len", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.<lambda1>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_data_pytorch.<lambda2>": ["<builtin>.float"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch": ["torch.nn.Module.state_dict", "torch.cuda.is_available", "<builtin>.print", "<builtin>.min", "torch.nn.Module.parameters", "warnings.catch_warnings", "extend_distributed.init_distributed", "torch.optim.SGD", "json.dumps", "intel_pytorch_extension.core.roc_auc_score", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.time_wrap", "numpy.random.seed", "intel_pytorch_extension.SplitSGD", "extend_distributed.all_gather", "<builtin>.open", "dlrm_data_pytorch.make_random_data_and_loader", "warnings.filterwarnings", "extend_distributed.DDP", "<builtin>.vars", "torch.nn.Module.to", "torch.load", "numpy.concatenate", "mlperf_logger.log_end", "torch.set_printoptions", "onnx.load", "torch.nn.MSELoss", "<builtin>.float", "torch.cuda.manual_seed_all", "mlperf_logger.log_start", "torch.cuda.device_count", "<builtin>.str", "tricks.md_embedding_bag.md_solver", "numpy.round", "extend_distributed.barrier", "<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.loss_fn_wrap", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.create_emb", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.LRPolicyScheduler.__init__", "mlperf_logger.log_event", "dlrm_data_pytorch.make_criteo_data_and_loaders", "<builtin>.map", "mlperf_logger.mlperf_submission_log", "torch.from_numpy", "torch.autograd.profiler.profile", "numpy.diff", "torch.nn.Module.load_state_dict", "argparse.ArgumentParser", "intel_pytorch_extension.is_available", "<builtin>.list", "torch.save", "onnx.checker.check_model", "numpy.array", "numpy.sum", "torch.device", "torch.tensor", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.dlrm_wrap", "torch.optim.lr_scheduler._LRScheduler.step", "torch.manual_seed", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.__init__", "numpy.set_printoptions", "<builtin>.getattr", "mlperf_logger.barrier", "torch.nn.BCELoss", "numpy.fromstring", "sys.exit", "torch.onnx.export"], "<builtin>.getattr": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.LRPolicyScheduler.__init__": ["sys.exit", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.LRPolicyScheduler.get_lr": ["<builtin>.max"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.Cast.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.Cast.forward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.Cast.extra_repr": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.create_mlp": ["<builtin>.range", "torch.nn.Linear", "intel_pytorch_extension.IpexMLPLinear", "torch.nn.ModuleList", "torch.tensor", "<builtin>.hasattr", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.Cast.__init__", "numpy.sqrt", "torch.nn.Sigmoid", "torch.nn.ReLU", "torch.nn.Sequential", "numpy.random.normal", "<builtin>.int", "intel_pytorch_extension.is_available"], "torch.nn.ModuleList": [], "intel_pytorch_extension.IpexMLPLinear": [], "torch.nn.Linear": [], "intel_pytorch_extension.is_available": [], "torch.nn.Sigmoid": [], "torch.nn.ReLU": [], "torch.nn.Sequential": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.create_emb": ["<builtin>.range", "<builtin>.len", "numpy.random.uniform", "torch.nn.ModuleList", "torch.tensor", "tricks.qr_embedding_bag.QREmbeddingBag", "numpy.random.set_state", "tricks.md_embedding_bag.PrEmbeddingBag", "numpy.sqrt", "numpy.random.get_state", "numpy.random.seed", "torch.nn.EmbeddingBag", "intel_pytorch_extension.is_available", "<builtin>.max"], "numpy.random.get_state": [], "tricks.qr_embedding_bag.QREmbeddingBag": [], "tricks.md_embedding_bag.PrEmbeddingBag": [], "torch.nn.EmbeddingBag": [], "numpy.random.set_state": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.__init__": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.create_emb", "<builtin>.super", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.create_mlp", "extend_distributed.dist.get_rank", "numpy.random.randint", "extend_distributed.get_my_slice", "extend_distributed.get_split_lengths"], "extend_distributed.get_split_lengths": [], "extend_distributed.get_my_slice": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.apply_mlp": ["torch.nn.functional.pad"], "torch.nn.functional.pad": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.apply_emb": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.interact_features": ["<builtin>.range", "torch.transpose", "torch.cat", "torch.tensor", "torch.bmm", "intel_pytorch_extension.interaction", "sys.exit"], "intel_pytorch_extension.interaction": [], "torch.transpose": [], "torch.bmm": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.forward": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.sequential_forward", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.distributed_forward", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.parallel_forward"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.distributed_forward": ["<builtin>.range", "<builtin>.len", "torch.arange", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.interact_features", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.apply_mlp", "extend_distributed.alltoall", "extend_distributed.shuffle_data", "torch.clamp", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.apply_emb", "sys.exit", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.sequential_forward": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.apply_emb", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.apply_mlp", "torch.clamp", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.interact_features"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.parallel_forward": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.interact_features", "torch.device", "torch.nn.ModuleList", "<builtin>.zip", "<builtin>.min", "<builtin>.enumerate", "<builtin>.map", "torch.nn.parallel.parallel_apply.parallel_apply", "torch.nn.parallel.scatter_gather.gather", "torch.clamp", "torch.nn.parallel.replicate.replicate", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.apply_emb", "<builtin>.str", "sys.exit", "torch.nn.parallel.scatter_gather.scatter", "<builtin>.list"], "torch.clamp": [], "extend_distributed.shuffle_data": [], "extend_distributed.alltoall": [], "torch.nn.parallel.replicate.replicate": [], "torch.device": [], "torch.nn.parallel.scatter_gather.scatter": [], "torch.nn.parallel.parallel_apply.parallel_apply": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.parallel_forward.<lambda1>": ["<builtin>.list"], "torch.nn.parallel.scatter_gather.gather": [], "mlperf_logger.log_start": [], "extend_distributed.init_distributed": [], "torch.set_printoptions": [], "torch.manual_seed": [], "torch.cuda.is_available": [], "torch.cuda.manual_seed_all": [], "torch.cuda.device_count": [], "mlperf_logger.barrier": [], "mlperf_logger.log_end": [], "dlrm_data_pytorch.make_criteo_data_and_loaders": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.<lambda1>": ["numpy.round"], "dlrm_data_pytorch.make_random_data_and_loader": [], "tricks.md_embedding_bag.md_solver": [], "numpy.diff": [], "torch.nn.Module.parameters": [], "torch.nn.Module.to": [], "extend_distributed.DDP": [], "torch.nn.MSELoss": [], "torch.nn.BCELoss": [], "intel_pytorch_extension.SplitSGD": [], "torch.optim.SGD": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.time_wrap": ["torch.cuda.synchronize", "time.time"], "torch.cuda.synchronize": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.dlrm_wrap": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.DLRM_Net.__init__", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.loss_fn_wrap": [], "mlperf_logger.mlperf_submission_log": [], "torch.load": [], "torch.nn.Module.load_state_dict": [], "extend_distributed.barrier": [], "torch.autograd.profiler.profile": [], "torch.optim.lr_scheduler._LRScheduler.step": [], "extend_distributed.all_gather": [], "intel_pytorch_extension.core.roc_auc_score": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.<dict5>.<lambda1>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.<dict5>.<lambda2>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.<lambda2>": ["numpy.round"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.<dict5>.<lambda3>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.<lambda3>": ["numpy.round"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.<dict5>.<lambda4>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.dlrm_s_pytorch.<lambda4>": ["numpy.round"], "torch.nn.Module.state_dict": [], "torch.save": [], "torch.onnx.export": [], "onnx.load": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize": ["<builtin>.vars", "numpy.array", "torch.load", "torch.device", "<builtin>.ValueError", "<builtin>.print", "dlrm_data_pytorch.make_criteo_data_and_loaders", "dlrm_s_pytorch.DLRM_Net", "json.dumps", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.analyze_model_data"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.visualize_embeddings_umap": ["<builtin>.range", "<builtin>.len", "matplotlib.pyplot.figure", "<builtin>.print", "<builtin>.min", "matplotlib.pyplot.title", "matplotlib.pyplot.scatter", "umap.UMAP", "<builtin>.str", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "umap.UMAP": [], "matplotlib.pyplot.figure": [], "matplotlib.pyplot.scatter": [], "matplotlib.pyplot.title": [], "matplotlib.pyplot.savefig": [], "matplotlib.pyplot.close": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.visualize_embeddings_tsne": ["<builtin>.range", "<builtin>.len", "matplotlib.pyplot.figure", "<builtin>.print", "<builtin>.min", "sklearn.manifold.TSNE", "matplotlib.pyplot.scatter", "matplotlib.pyplot.title", "<builtin>.str", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "sklearn.manifold.TSNE": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.create_vis_data": ["<builtin>.range", "<builtin>.len", "numpy.concatenate", "sklearn.metrics.precision_score", "<builtin>.print", "<builtin>.enumerate", "sklearn.metrics.accuracy_score", "torch.clamp", "sklearn.metrics.recall_score", "<builtin>.int", "sklearn.metrics.f1_score"], "sklearn.metrics.accuracy_score": [], "sklearn.metrics.f1_score": [], "sklearn.metrics.precision_score": [], "sklearn.metrics.recall_score": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.plot_all_data": ["<builtin>.len", "matplotlib.pyplot.subplots", "matplotlib.colors.ListedColormap", "<builtin>.str", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "matplotlib.pyplot.subplots": [], "matplotlib.colors.ListedColormap": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.plot_one_class": ["<builtin>.len", "matplotlib.pyplot.subplots", "numpy.array", "<builtin>.enumerate", "<builtin>.str", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.visualize_umap": ["<builtin>.str", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.plot_one_class", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.plot_all_data", "umap.UMAP"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.visualize_data_umap": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.visualize_umap", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.create_vis_data", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.analyse_categorical_data": ["<builtin>.range", "<builtin>.len", "numpy.array", "matplotlib.pyplot.savefig", "matplotlib.pyplot.figure", "<builtin>.print", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "<builtin>.set", "matplotlib.pyplot.title", "<builtin>.str", "<builtin>.int", "<builtin>.list", "matplotlib.pyplot.close"], "matplotlib.pyplot.plot": [], "matplotlib.pyplot.legend": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.analyze_model_data": ["os.makedirs", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.visualize_embeddings_tsne", "os.path.exists", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.analyse_categorical_data", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.visualize_data_umap", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tools.visualize.visualize_embeddings_umap"], "dlrm_s_pytorch.DLRM_Net": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.cython.cython_compile": ["distutils.extension.Extension", "setuptools.setup", "Cython.Build.cythonize"], "distutils.extension.Extension": [], "Cython.Build.cythonize": [], "setuptools.setup": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.cython.cython_criteo": ["argparse.ArgumentParser", "data_utils_cython.loadDataset"], "data_utils_cython.loadDataset": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.cython": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.md_embedding_bag": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.md_embedding_bag.md_solver": ["<builtin>.len", "<builtin>.enumerate", "torch.sort", "torch.ones", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.md_embedding_bag.pow_2_round", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.md_embedding_bag.alpha_power_rule"], "torch.sort": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.md_embedding_bag.alpha_power_rule": ["<builtin>.range", "<builtin>.len", "torch.round", "torch.sum", "<builtin>.ValueError", "torch.ones"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.md_embedding_bag.pow_2_round": ["torch.round", "torch.log2"], "torch.sum": [], "torch.round": [], "torch.log2": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.md_embedding_bag.PrEmbeddingBag.__init__": ["torch.nn.Linear", "<builtin>.ValueError", "<builtin>.super", "torch.nn.Identity", "torch.nn.init.xavier_uniform_", "torch.nn.EmbeddingBag", "<builtin>.str"], "torch.nn.init.xavier_uniform_": [], "torch.nn.Identity": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.md_embedding_bag.PrEmbeddingBag.forward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.qr_embedding_bag": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.qr_embedding_bag.QREmbeddingBag.__init__": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.qr_embedding_bag.QREmbeddingBag.reset_parameters", "<builtin>.super", "torch.Tensor", "numpy.ceil", "<builtin>.int", "<builtin>.isinstance", "<builtin>.list", "torch.nn.parameter.Parameter"], "torch.Tensor": [], "torch.nn.parameter.Parameter": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.qr_embedding_bag.QREmbeddingBag.reset_parameters": ["numpy.sqrt", "torch.nn.init.uniform_"], "torch.nn.init.uniform_": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.qr_embedding_bag.QREmbeddingBag.forward": ["torch.nn.functional.embedding_bag", "torch.cat", "torch.remainder"], "torch.remainder": [], "torch.nn.functional.embedding_bag": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.training.bfloat16.tricks.qr_embedding_bag.QREmbeddingBag.extra_repr": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.loadDataset"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.convertUStringToDistinctIntsDict": ["<builtin>.range", "<builtin>.print", "<builtin>.len", "numpy.zeros"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.convertUStringToDistinctIntsUnique": ["<builtin>.range", "<builtin>.len", "numpy.zeros", "numpy.array", "numpy.concatenate", "<builtin>.print", "numpy.unique"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.processCriteoAdData": ["<builtin>.range", "numpy.zeros", "<builtin>.print", "os.path.exists", "numpy.load", "numpy.transpose", "<builtin>.enumerate", "numpy.savez_compressed"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.concatCriteoAdData": ["<builtin>.range", "numpy.zeros", "<builtin>.len", "numpy.array", "numpy.sum", "numpy.concatenate", "<builtin>.print", "os.path.exists", "numpy.load", "<builtin>.str", "numpy.save", "numpy.random.permutation", "numpy.savez_compressed", "numpy.random.randint", "sys.exit"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.transformCriteoAdData": ["<builtin>.range", "numpy.arange", "<builtin>.len", "numpy.array", "numpy.concatenate", "numpy.log", "<builtin>.print", "numpy.random.permutation", "numpy.array_split"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.getCriteoAdData": ["multiprocessing.Process", "<builtin>.print", "numpy.load", "<builtin>.open", "os.path.exists", "<builtin>.divmod", "<builtin>.str", "<builtin>.range", "numpy.zeros", "multiprocessing.Manager", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.processCriteoAdData", "numpy.savez_compressed", "<builtin>.list", "numpy.array", "numpy.sum", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.concatCriteoAdData", "sys.exit"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.getCriteoAdData.process_one_file": ["<builtin>.range", "numpy.zeros", "numpy.random.uniform", "<builtin>.len", "numpy.int32", "numpy.array", "<builtin>.print", "os.path.exists", "numpy.transpose", "<builtin>.enumerate", "<builtin>.map", "numpy.savez_compressed", "<builtin>.open", "<builtin>.float", "<builtin>.str", "<builtin>.int", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.getCriteoAdData.process_one_file.<lambda1>": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.getCriteoAdData.process_one_file.<lambda2>": ["<builtin>.int"], "multiprocessing.Manager": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.loadDataset": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_utils.getCriteoAdData", "<builtin>.ValueError", "<builtin>.print", "os.path.exists", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte._test", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte._test_bin"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte.DataLoader.__init__": ["numpy.array", "os.path.join", "<builtin>.sum", "numpy.load", "numpy.ceil", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte.DataLoader.__iter__": ["<builtin>.iter", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte._batch_generator"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte._batch_generator": ["numpy.concatenate", "os.path.join", "<builtin>.ValueError", "numpy.load", "<builtin>.slice", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte._transform_features", "numpy.ceil", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte.DataLoader.__len__": ["math.ceil"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte._transform_features": ["torch.log", "torch.tensor", "torch.arange"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte._test": ["<builtin>.range", "<builtin>.print", "time.time", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte._batch_generator"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte.CriteoBinDataset.__init__": ["<builtin>.print", "numpy.load", "math.ceil", "<builtin>.open", "os.path.getsize"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte.CriteoBinDataset.__len__": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte.CriteoBinDataset.__getitem__": ["torch.from_numpy", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte._transform_features", "numpy.frombuffer", "extend_distributed.dist.get_rank"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte.CriteoBinDataset.__del__": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte.numpy_to_binary": ["<builtin>.len", "numpy.concatenate", "<builtin>.ValueError", "<builtin>.print", "numpy.load", "<builtin>.open", "numpy.ceil", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte._preprocess": ["<builtin>.range", "os.makedirs", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte.numpy_to_binary", "os.path.join", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte._test_bin": ["<builtin>.range", "tqdm.tqdm", "torch.utils.data.DataLoader", "<builtin>.len", "os.path.join", "<builtin>.zip", "numpy.array_equal", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte.CriteoBinDataset.__init__", "<builtin>.ValueError", "<builtin>.print", "<builtin>.enumerate", "dlrm_data_pytorch.CriteoDataset", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.data_loader_terabyte._preprocess", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed": ["os.environ.get"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.env2int": ["<builtin>.int", "os.environ.get"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.get_my_slice": ["torch.distributed.get_rank", "<builtin>.min", "<builtin>.divmod", "<builtin>.slice", "torch.distributed.get_world_size"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.get_split_lengths": ["torch.distributed.get_world_size", "<builtin>.range", "<builtin>.divmod", "torch.distributed.get_rank"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.init_distributed": ["torch.zeros", "<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.Request.__init__", "torch.distributed.get_rank", "<builtin>.print", "torch.distributed.init_process_group", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.env2int", "torch.distributed.all_gather", "<builtin>.hasattr", "torch.ones", "os.environ.get", "torch.distributed.get_world_size", "<builtin>.str", "<builtin>.list", "torch.distributed.is_mpi_available"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.Request.__init__": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.Request.wait": ["torch.autograd.Function.apply"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.All2All_ScatterList_Req.forward": ["<builtin>.range", "<builtin>.tuple", "torch.distributed.get_rank", "torch.distributed.scatter", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.All2All_ScatterList_Req.backward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.All2All_ScatterList_Wait.forward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.All2All_ScatterList_Wait.backward": ["<builtin>.range", "<builtin>.tuple", "torch.distributed.get_rank", "torch.distributed.gather", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.All2All_Scatter_Req.forward": ["<builtin>.range", "<builtin>.tuple", "torch.distributed.get_rank", "torch.cat", "torch.distributed.scatter", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.All2All_Scatter_Req.backward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.All2All_Scatter_Wait.forward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.All2All_Scatter_Wait.backward": ["<builtin>.range", "<builtin>.len", "torch.distributed.get_rank", "torch.distributed.gather", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.All2All_Req.forward": ["torch.cat", "<builtin>.tuple", "torch.distributed.all_to_all_single"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.All2All_Req.backward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.All2All_Wait.forward": ["<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.All2All_Wait.backward": ["torch.cat", "torch.distributed.all_to_all_single"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.AllGather.forward": ["<builtin>.range", "<builtin>.len", "torch.empty_like", "torch.distributed.get_rank", "torch.cat", "<builtin>.sum", "torch.distributed.all_gather", "<builtin>.isinstance", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.AllGather.backward": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.alltoall": ["<builtin>.len", "<builtin>.print", "<builtin>.sum", "torch.autograd.Function.apply", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.get_split_lengths"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.shuffle_data": ["torch.cat", "torch.distributed.all_to_all_single"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.all_gather": ["torch.autograd.Function.apply"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.extend_distributed.barrier": ["torch.distributed.barrier"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.CriteoDataset.__init__": ["<builtin>.range", "numpy.arange", "<builtin>.len", "numpy.array", "numpy.ceil", "numpy.concatenate", "<builtin>.ValueError", "<builtin>.print", "os.path.exists", "numpy.load", "data_utils.getCriteoAdData", "numpy.random.permutation", "numpy.array_split", "<builtin>.str", "<builtin>.int", "sys.exit"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.CriteoDataset.__getitem__": ["<builtin>.range", "<builtin>.len", "numpy.load", "sys.exit", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.CriteoDataset._default_preprocess": ["torch.log", "torch.tensor"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.CriteoDataset.__len__": ["<builtin>.len", "sys.exit"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.collate_wrapper_criteo_offset": ["<builtin>.range", "torch.stack", "<builtin>.zip", "torch.tensor", "torch.log", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.ensure_dataset_preprocessed": ["<builtin>.range", "<builtin>.print", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.CriteoDataset.__init__", "data_loader_terabyte.numpy_to_binary"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.offset_to_length_converter": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.offset_to_length_converter.diff", "torch.stack", "torch.tensor", "torch.cat", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.offset_to_length_converter.diff": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.collate_wrapper_criteo_length": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.offset_to_length_converter", "torch.stack", "<builtin>.zip", "torch.tensor", "torch.log", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.make_criteo_data_and_loaders": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.CriteoDataset.__init__", "torch.utils.data.DataLoader", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_data_pytorch.ensure_dataset_preprocessed", "os.path.exists", "<builtin>.any", "data_loader_terabyte.CriteoBinDataset", "data_loader_terabyte.DataLoader", "torch.utils.data.RandomSampler", "<builtin>.list", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.run", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.freeze": ["torch.jit._recursive.wrap_cpp_module", "torch._C._freeze_module"], "torch._C._freeze_module": [], "torch.jit._recursive.wrap_cpp_module": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.time_wrap": ["time.time"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.dlrm_wrap": ["torch.autograd.profiler.record_function"], "torch.autograd.profiler.record_function": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.loss_fn_wrap": ["torch.autograd.profiler.record_function"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.unpack_batch": ["torch.ones"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.LRPolicyScheduler.__init__": ["sys.exit", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.LRPolicyScheduler.get_lr": ["<builtin>.max"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.create_mlp": ["<builtin>.range", "torch.nn.Linear", "torch.nn.ModuleList", "torch.tensor", "numpy.sqrt", "torch.nn.Sigmoid", "torch.nn.ReLU", "torch.nn.Sequential", "numpy.random.normal", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.create_emb": ["<builtin>.range", "<builtin>.len", "torch.nn.init.uniform_", "torch.nn.ModuleList", "numpy.sqrt", "torch.nn.EmbeddingBag"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.__init__": ["<builtin>.range", "<builtin>.len", "<builtin>.super", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.create_emb", "torch.nn.BCELoss", "extend_distributed.dist.get_rank", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.create_mlp", "extend_distributed.get_my_slice", "extend_distributed.get_split_lengths"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.apply_mlp": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.apply_emb": ["<builtin>.isinstance", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.interact_features": ["<builtin>.range", "torch.transpose", "torch.cat", "torch.tensor", "intel_extension_for_pytorch.nn.functional.interaction", "torch.bmm", "<builtin>.list"], "intel_extension_for_pytorch.nn.functional.interaction": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.forward": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.distributed_forward", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.sequential_forward"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.distributed_forward": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.apply_emb", "extend_distributed.alltoall", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.apply_mlp", "torch.clamp", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.interact_features", "sys.exit"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.sequential_forward": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.apply_emb", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.interact_features", "torch.clamp", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.apply_mlp"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.dash_separated_ints": ["<builtin>.int", "argparse.ArgumentTypeError"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.trace_model": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.unpack_batch", "torch.jit.freeze", "torch.jit.trace", "<builtin>.enumerate", "intel_extension_for_pytorch.optimize", "intel_extension_for_pytorch.quantization.QuantConf", "intel_extension_for_pytorch.quantization.convert", "torch.nn.Module.eval", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.__init__", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.freeze", "torch.cpu.amp.autocast"], "torch.nn.Module.eval": [], "intel_extension_for_pytorch.optimize": [], "intel_extension_for_pytorch.quantization.QuantConf": [], "intel_extension_for_pytorch.quantization.convert": [], "torch.cpu.amp.autocast": [], "torch.jit.trace": [], "torch.jit.freeze": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.run_throughput_benchmark": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.unpack_batch", "<builtin>.print", "<builtin>.enumerate", "sys.exit", "torch.utils.ThroughputBenchmark"], "torch.utils.ThroughputBenchmark": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.inference": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.unpack_batch", "numpy.sum", "numpy.concatenate", "<builtin>.print", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.__init__", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.run_throughput_benchmark", "torch.autograd.profiler.record_function", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.time_wrap", "numpy.round", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.trace_model", "<builtin>.isinstance", "torch.cpu.amp.autocast"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.inference.<dict1>.<lambda1>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.inference.<lambda1>": ["numpy.round"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.inference.<dict1>.<lambda2>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.inference.<lambda2>": ["numpy.round"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.inference.<dict1>.<lambda3>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.inference.<lambda3>": ["numpy.round"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.inference.<dict1>.<lambda4>": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.inference.<lambda4>": ["numpy.round"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.run": ["...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.dlrm_wrap", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.unpack_batch", "torch.BoolTensor", "intel_extension_for_pytorch.nn.modules.IPEXLinearEltwise", "<builtin>.print", "torch.nn.Module.parameters", "torch.optim.SGD", "extend_distributed.init_distributed", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.LRPolicyScheduler.__init__", "intel_extension_for_pytorch.optimize", "numpy.random.seed", "<builtin>.open", "<builtin>.isinstance", "extend_distributed.DDP", "datetime.datetime.now", "torch.load", "torch.set_printoptions", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.run.print_training_performance", "<builtin>.str", "torch.optim.lr_scheduler._LRScheduler.get_last_lr", "extend_distributed.barrier", "<builtin>.range", "torch.cpu.amp.autocast", "<builtin>.len", "time.strftime", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.run.update_training_performance", "dlrm_data_pytorch.make_criteo_data_and_loaders", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.inference", "<builtin>.map", "torch.autograd.profiler.profile", "torch.nn.Module.load_state_dict", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.time_wrap", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.DLRM_Net.__init__", "<builtin>.list", "torch.save", "numpy.array", "torch.device", "intel_extension_for_pytorch.nn.modules.MergedEmbeddingBagWithSGD.from_embeddingbag_list", "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.loss_fn_wrap", "torch.optim.lr_scheduler._LRScheduler.step", "torch.manual_seed", "<builtin>.enumerate", "torch.nn.Identity", "numpy.set_printoptions", "torch.no_grad", "numpy.asarray", "numpy.fromstring", "torch.autograd.profiler.record_function"], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.run.<lambda1>": [], "numpy.asarray": [], "intel_extension_for_pytorch.nn.modules.MergedEmbeddingBagWithSGD.from_embeddingbag_list": [], "torch.BoolTensor": [], "intel_extension_for_pytorch.nn.modules.IPEXLinearEltwise": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.run.update_training_performance": [], "...repos_filtered.IntelAI.models.models.recommendation.pytorch.dlrm.product.dlrm_s_pytorch.run.print_training_performance": ["<builtin>.print", "<builtin>.exit"], "torch.optim.lr_scheduler._LRScheduler.get_last_lr": [], "time.strftime": [], "torch.no_grad": [], "...repos_filtered.IntelAI.models.models.reinforcement": [], "...repos_filtered.IntelAI.models.models.reinforcement.tensorflow": [], "...repos_filtered.IntelAI.models.models.reinforcement.tensorflow.minigo": [], "...repos_filtered.IntelAI.models.models.reinforcement.tensorflow.minigo.training": [], "...repos_filtered.IntelAI.models.models.image_segmentation": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.brats": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.brats.run_performance": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.brats.run_performance.unet_3d_tf.run", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.brats.run_performance.unet_3d_tf.__init__"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.brats.run_performance.unet_3d_tf.__init__": ["<builtin>.print", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.brats.run_performance.unet_3d_tf.run": ["<builtin>.range", "tensorflow.Graph", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "<builtin>.ValueError", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.GraphDef", "numpy.random.randn", "tensorflow.import_graph_def", "time.time", "<builtin>.open", "tensorflow.compat.v1.Session"], "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference": [], "numpy.random.randn": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.brats.run_accuracy": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.brats.run_accuracy.unet_3d_tf.__init__", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.brats.run_accuracy.unet_3d_tf.run"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.brats.run_accuracy.unet_3d_tf.__init__": ["<builtin>.print", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.brats.run_accuracy.unet_3d_tf.run": ["<builtin>.range", "nnunet.evaluation.region_based_evaluation.evaluate_regions", "<builtin>.len", "tensorflow.Graph", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "os.path.join", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "inference.nnUNet.postprocess.postprocess_output", "tensorflow.compat.v1.GraphDef", "inference.nnUNet.setup.setup", "tensorflow.import_graph_def", "<builtin>.open", "pickle.load", "<builtin>.float", "tensorflow.compat.v1.Session", "<builtin>.list", "nnunet.evaluation.region_based_evaluation.get_brats_regions"], "inference.nnUNet.setup.setup": [], "inference.nnUNet.postprocess.postprocess_output": [], "nnunet.evaluation.region_based_evaluation.get_brats_regions": [], "nnunet.evaluation.region_based_evaluation.evaluate_regions": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.brats": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.brats.run_performance": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.brats.run_performance.unet_3d_tf.run", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.brats.run_performance.unet_3d_tf.__init__"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.brats.run_performance.unet_3d_tf.__init__": ["<builtin>.print", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.brats.run_performance.unet_3d_tf.run": ["<builtin>.range", "tensorflow.Graph", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "<builtin>.ValueError", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.GraphDef", "numpy.random.randn", "tensorflow.import_graph_def", "time.time", "<builtin>.open", "tensorflow.compat.v1.Session"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.brats.run_accuracy": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.brats.run_accuracy.unet_3d_tf.run", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.brats.run_accuracy.unet_3d_tf.__init__"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.brats.run_accuracy.unet_3d_tf.__init__": ["<builtin>.print", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.brats.run_accuracy.unet_3d_tf.run": ["<builtin>.range", "nnunet.evaluation.region_based_evaluation.evaluate_regions", "<builtin>.len", "tensorflow.Graph", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "os.path.join", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "inference.nnUNet.postprocess.postprocess_output", "tensorflow.compat.v1.GraphDef", "inference.nnUNet.setup.setup", "tensorflow.import_graph_def", "<builtin>.open", "pickle.load", "<builtin>.float", "tensorflow.compat.v1.Session", "<builtin>.list", "nnunet.evaluation.region_based_evaluation.get_brats_regions"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.brats": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.brats.run_performance": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.brats.run_performance.unet_3d_tf.__init__", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.brats.run_performance.unet_3d_tf.run"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.brats.run_performance.unet_3d_tf.__init__": ["<builtin>.print", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.brats.run_performance.unet_3d_tf.run": ["<builtin>.range", "tensorflow.Graph", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "<builtin>.ValueError", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.GraphDef", "numpy.random.randn", "tensorflow.import_graph_def", "time.time", "<builtin>.open", "tensorflow.compat.v1.Session"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.brats.run_accuracy": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.brats.run_accuracy.unet_3d_tf.run", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.brats.run_accuracy.unet_3d_tf.__init__"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.brats.run_accuracy.unet_3d_tf.__init__": ["<builtin>.print", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.brats.run_accuracy.unet_3d_tf.run": ["<builtin>.range", "nnunet.evaluation.region_based_evaluation.evaluate_regions", "<builtin>.len", "tensorflow.Graph", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "os.path.join", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "inference.nnUNet.postprocess.postprocess_output", "tensorflow.compat.v1.GraphDef", "inference.nnUNet.setup.setup", "tensorflow.import_graph_def", "<builtin>.open", "pickle.load", "<builtin>.float", "tensorflow.compat.v1.Session", "<builtin>.list", "nnunet.evaluation.region_based_evaluation.get_brats_regions"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.preprocess": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.preprocess.preprocess_MLPerf": ["<builtin>.len", "os.path.join", "<builtin>.print", "os.remove", "nnunet.training.model_restore.load_model_and_checkpoint_files", "batchgenerators.augmentations.utils.pad_nd_image", "<builtin>.open", "nnunet.inference.predict.preprocess_multithreaded", "pickle.dump", "<builtin>.isinstance"], "nnunet.training.model_restore.load_model_and_checkpoint_files": [], "nnunet.inference.predict.preprocess_multithreaded": [], "batchgenerators.augmentations.utils.pad_nd_image": [], "pickle.dump": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.preprocess.preprocess_setup": ["os.makedirs", "os.path.isdir", "<builtin>.len", "os.path.isfile", "os.path.join", "<builtin>.print", "batchgenerators.utilities.file_and_folder_operations.subfiles", "<builtin>.open", "pickle.dump", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.preprocess.preprocess_MLPerf"], "batchgenerators.utilities.file_and_folder_operations.subfiles": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.postprocess": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.postprocess.load_predictions": ["<builtin>.range", "<builtin>.len", "<builtin>.tuple", "<builtin>.all", "<builtin>.zip", "numpy.reshape", "<builtin>.list"], "numpy.reshape": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.postprocess.postprocess_output": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.postprocess.load_predictions", "os.path.join", "multiprocessing.Pool", "<builtin>.print", "<builtin>.enumerate", "numpy.prod", "numpy.save"], "multiprocessing.Pool": [], "numpy.prod": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.setup": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.setup.create_directories": ["os.makedirs", "<builtin>.print", "os.path.isdir"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.setup.download_model": ["zipfile.ZipFile", "os.path.isfile", "os.path.join", "os.chdir", "<builtin>.print", "os.getcwd", "os.system"], "os.system": [], "zipfile.ZipFile": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.setup.setup": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.setup.create_directories", "inference.nnUNet.preprocess.preprocess_setup", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.setup.download_model", "inference.nnUNet.Task043_BraTS_2019.task_setup"], "inference.nnUNet.Task043_BraTS_2019.task_setup": [], "inference.nnUNet.preprocess.preprocess_setup": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.Task043_BraTS_2019": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.Task043_BraTS_2019.copy_BraTS_segmentation_and_convert_labels": ["SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "numpy.zeros_like", "SimpleITK.GetImageFromArray", "<builtin>.RuntimeError", "SimpleITK.WriteImage", "numpy.unique"], "SimpleITK.ReadImage": [], "SimpleITK.GetArrayFromImage": [], "<builtin>.RuntimeError": [], "numpy.zeros_like": [], "SimpleITK.GetImageFromArray": [], "SimpleITK.WriteImage": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.Task043_BraTS_2019.task_setup": ["os.path.isdir", "<builtin>.len", "<builtin>.all", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet_mlperf.inference.nnUNet.Task043_BraTS_2019.copy_BraTS_segmentation_and_convert_labels", "<builtin>.print", "collections.OrderedDict", "shutil.copy"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco": ["utils.Dataset.prepare", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.CocoDataset.load_coco", "subprocess.Popen", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.evaluate_coco", "os.path.join", "<builtin>.print", "config.Config.__init__", "utils.Dataset.__init__", "model.MaskRCNN", "<builtin>.int", "argparse.ArgumentParser", "config.Config.display"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.CocoDataset.load_coco": ["pycocotools.coco.COCO", "os.path.join", "utils.Dataset.add_class", "<builtin>.set", "utils.Dataset.add_image", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.CocoDataset.auto_download", "<builtin>.list", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.CocoDataset.auto_download": ["os.makedirs", "zipfile.ZipFile", "shutil.copyfileobj", "<builtin>.print", "os.path.exists", "<builtin>.open"], "pycocotools.coco.COCO": [], "utils.Dataset.add_class": [], "utils.Dataset.add_image": [], "shutil.copyfileobj": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.CocoDataset.load_mask": ["numpy.array", "<builtin>.super", "numpy.ones", "utils.Dataset.map_source_class_id", "numpy.stack", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.CocoDataset.annToMask"], "utils.Dataset.map_source_class_id": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.CocoDataset.annToMask": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.CocoDataset.annToRLE", "pycocotools.mask.decode"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.CocoDataset.image_reference": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.CocoDataset.annToRLE": ["pycocotools.mask.frPyObjects", "pycocotools.mask.merge", "<builtin>.isinstance"], "pycocotools.mask.frPyObjects": [], "pycocotools.mask.merge": [], "pycocotools.mask.decode": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.build_coco_results": ["<builtin>.range", "numpy.around", "numpy.asfortranarray", "pycocotools.mask.encode", "utils.Dataset.get_source_class_id"], "numpy.around": [], "utils.Dataset.get_source_class_id": [], "numpy.asfortranarray": [], "pycocotools.mask.encode": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.evaluate_coco": ["<builtin>.range", "<builtin>.len", "<builtin>.print", "pycocotools.cocoeval.COCOeval", "utils.Dataset.load_image", "<builtin>.enumerate", "time.time", "<builtin>.int", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.build_coco_results"], "utils.Dataset.load_image": [], "pycocotools.cocoeval.COCOeval": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.TrainConfig": ["<builtin>.int"], "config.Config.__init__": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.coco.InferenceConfig": ["<builtin>.int"], "config.Config.display": [], "model.MaskRCNN": [], "utils.Dataset.__init__": [], "utils.Dataset.prepare": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.config": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.config.Config": ["numpy.array"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.config.Config.__init__": ["<builtin>.int", "math.ceil", "numpy.array"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.config.Config.display": ["<builtin>.print", "<builtin>.dir", "<builtin>.getattr", "<builtin>.callable"], "<builtin>.dir": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model": ["distutils.version.LooseVersion"], "distutils.version.LooseVersion": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.TimeHistory.__init__": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.TimeHistory.on_train_begin": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.TimeHistory.on_batch_begin": ["time.time"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.TimeHistory.on_batch_end": ["<builtin>.print", "time.time"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.TimeHistory.on_epoch_end": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.log": ["<builtin>.str", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.BatchNorm.call": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.identity_block": ["keras.layers.Conv2D", "keras.layers.BatchNormalization.__init__", "keras.layers.Activation", "<builtin>.str", "keras.layers.Add"], "keras.layers.Conv2D": [], "keras.layers.BatchNormalization.__init__": [], "keras.layers.Activation": [], "keras.layers.Add": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.conv_block": ["keras.layers.Conv2D", "keras.layers.BatchNormalization.__init__", "keras.layers.Activation", "<builtin>.str", "keras.layers.Add"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.resnet_graph": ["<builtin>.range", "keras.layers.MaxPooling2D", "<builtin>.chr", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.conv_block", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.identity_block", "keras.layers.Conv2D", "keras.layers.ZeroPadding2D", "keras.layers.BatchNormalization.__init__", "keras.layers.Activation"], "keras.layers.ZeroPadding2D": [], "keras.layers.MaxPooling2D": [], "<builtin>.chr": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.apply_box_deltas_graph": ["tensorflow.exp", "tensorflow.stack"], "tensorflow.exp": [], "tensorflow.stack": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.clip_boxes_graph": ["tensorflow.minimum", "tensorflow.maximum", "tensorflow.split", "tensorflow.concat"], "tensorflow.split": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.ProposalLayer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.ProposalLayer.call": ["numpy.array", "<builtin>.min", "tensorflow.nn.top_k", "utils.batch_slice", "numpy.reshape"], "tensorflow.nn.top_k": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.ProposalLayer.call.<lambda1>": ["tensorflow.gather"], "tensorflow.gather": [], "utils.batch_slice": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.ProposalLayer.call.<lambda2>": ["tensorflow.gather"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.ProposalLayer.call.<lambda3>": ["tensorflow.gather"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.ProposalLayer.call.<lambda4>": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.apply_box_deltas_graph"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.ProposalLayer.call.<lambda5>": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.clip_boxes_graph"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.ProposalLayer.call.nms": ["tensorflow.maximum", "tensorflow.gather", "tensorflow.shape", "tensorflow.image.non_max_suppression", "tensorflow.pad"], "tensorflow.image.non_max_suppression": [], "tensorflow.pad": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.ProposalLayer.compute_output_shape": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.log2_graph": ["tensorflow.log"], "tensorflow.log": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.PyramidROIAlign.__init__": ["<builtin>.tuple", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.PyramidROIAlign.call": ["tensorflow.squeeze", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.log2_graph", "tensorflow.concat", "tensorflow.cast", "tensorflow.sqrt", "tensorflow.gather_nd", "tensorflow.stop_gradient", "tensorflow.equal", "tensorflow.range", "<builtin>.range", "tensorflow.maximum", "tensorflow.gather", "tensorflow.image.crop_and_resize", "tensorflow.shape", "tensorflow.minimum", "tensorflow.split", "tensorflow.where", "tensorflow.expand_dims", "tensorflow.nn.top_k", "<builtin>.enumerate", "tensorflow.round"], "tensorflow.stop_gradient": [], "tensorflow.image.crop_and_resize": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.PyramidROIAlign.compute_output_shape": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.overlaps_graph": ["tensorflow.expand_dims", "tensorflow.maximum", "tensorflow.shape", "tensorflow.tile", "tensorflow.minimum", "tensorflow.split", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.detection_targets_graph": ["tensorflow.pad", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.overlaps_graph", "tensorflow.Assert", "tensorflow.transpose", "tensorflow.squeeze", "tensorflow.concat", "tensorflow.cast", "utils.box_refinement_graph", "tensorflow.boolean_mask", "tensorflow.reduce_max", "tensorflow.control_dependencies", "tensorflow.range", "tensorflow.maximum", "tensorflow.gather", "tensorflow.image.crop_and_resize", "tensorflow.shape", "tensorflow.where", "tensorflow.split", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.trim_zeros_graph", "<builtin>.int", "tensorflow.greater", "tensorflow.expand_dims", "tensorflow.identity", "tensorflow.round", "tensorflow.logical_and", "tensorflow.random_shuffle", "tensorflow.argmax"], "tensorflow.greater": [], "tensorflow.Assert": [], "tensorflow.control_dependencies": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.trim_zeros_graph": ["tensorflow.cast", "tensorflow.abs", "tensorflow.boolean_mask", "tensorflow.reduce_sum"], "tensorflow.boolean_mask": [], "tensorflow.reduce_max": [], "tensorflow.logical_and": [], "tensorflow.random_shuffle": [], "utils.box_refinement_graph": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.DetectionTargetLayer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.DetectionTargetLayer.call": ["utils.batch_slice"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.DetectionTargetLayer.call.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.detection_targets_graph"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.DetectionTargetLayer.compute_output_shape": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.DetectionTargetLayer.compute_mask": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.clip_to_window": ["numpy.minimum", "numpy.maximum"], "numpy.minimum": [], "numpy.maximum": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.refine_detections_graph": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.clip_boxes_graph", "tensorflow.to_float", "tensorflow.stack", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.apply_box_deltas_graph", "tensorflow.map_fn", "tensorflow.gather_nd", "tensorflow.constant", "tensorflow.unique", "tensorflow.to_int32", "tensorflow.sets.set_intersection", "tensorflow.range", "tensorflow.gather", "tensorflow.rint", "tensorflow.shape", "tensorflow.minimum", "tensorflow.where", "tensorflow.expand_dims", "tensorflow.nn.top_k", "tensorflow.sparse_tensor_to_dense", "tensorflow.reshape", "tensorflow.pad", "tensorflow.argmax"], "tensorflow.rint": [], "tensorflow.to_int32": [], "tensorflow.sets.set_intersection": [], "tensorflow.sparse_tensor_to_dense": [], "tensorflow.unique": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.refine_detections_graph.nms_keep_map": ["tensorflow.gather", "tensorflow.to_float", "tensorflow.shape", "tensorflow.where", "tensorflow.image.non_max_suppression", "tensorflow.equal", "tensorflow.pad"], "tensorflow.to_float": [], "tensorflow.map_fn": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.DetectionLayer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.DetectionLayer.call": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.parse_image_meta_graph", "utils.batch_slice", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.parse_image_meta_graph": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.DetectionLayer.call.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.refine_detections_graph"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.DetectionLayer.compute_output_shape": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.rpn_graph": ["keras.layers.Activation", "keras.layers.Lambda", "keras.layers.Conv2D"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.rpn_graph.<lambda1>": ["tensorflow.reshape", "tensorflow.shape"], "keras.layers.Lambda": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.rpn_graph.<lambda2>": ["tensorflow.reshape", "tensorflow.shape"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.build_rpn_model": ["keras.models.Model", "keras.layers.Input", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.rpn_graph"], "keras.layers.Input": [], "keras.models.Model": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.fpn_classifier_graph": ["keras.layers.Dense", "keras.layers.Reshape", "keras.layers.Conv2D", "keras.layers.BatchNormalization.__init__", "keras.layers.TimeDistributed", "keras.backend.int_shape", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.PyramidROIAlign.__init__", "keras.layers.Activation", "keras.layers.Lambda"], "keras.layers.TimeDistributed": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.fpn_classifier_graph.<lambda1>": ["keras.backend.squeeze"], "keras.backend.squeeze": [], "keras.layers.Dense": [], "keras.backend.int_shape": [], "keras.layers.Reshape": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.build_fpn_mask_graph": ["keras.layers.Conv2DTranspose", "keras.layers.Conv2D", "keras.layers.BatchNormalization.__init__", "keras.layers.TimeDistributed", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.PyramidROIAlign.__init__", "keras.layers.Activation"], "keras.layers.Conv2DTranspose": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.smooth_l1_loss": ["keras.backend.less", "keras.backend.cast", "keras.backend.abs"], "keras.backend.abs": [], "keras.backend.less": [], "keras.backend.cast": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.rpn_class_loss_graph": ["keras.backend.equal", "tensorflow.size", "keras.backend.mean", "keras.backend.cast", "tensorflow.gather_nd", "keras.backend.sparse_categorical_crossentropy", "tensorflow.squeeze", "keras.backend.not_equal", "keras.backend.switch", "tensorflow.constant", "tensorflow.where"], "keras.backend.equal": [], "keras.backend.not_equal": [], "keras.backend.sparse_categorical_crossentropy": [], "tensorflow.size": [], "keras.backend.mean": [], "keras.backend.switch": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.rpn_bbox_loss_graph": ["keras.backend.equal", "keras.backend.squeeze", "tensorflow.size", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.batch_pack_graph", "keras.backend.mean", "keras.backend.cast", "keras.backend.less", "tensorflow.gather_nd", "keras.backend.sum", "keras.backend.switch", "tensorflow.constant", "tensorflow.where", "keras.backend.abs"], "keras.backend.sum": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.batch_pack_graph": ["<builtin>.range", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.mrcnn_class_loss_graph": ["tensorflow.cast", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.reduce_sum", "tensorflow.gather", "tensorflow.argmax"], "tensorflow.nn.sparse_softmax_cross_entropy_with_logits": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.mrcnn_bbox_loss_graph": ["tensorflow.cast", "tensorflow.size", "keras.backend.mean", "tensorflow.gather", "keras.backend.reshape", "tensorflow.gather_nd", "tensorflow.stack", "keras.backend.switch", "keras.backend.int_shape", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.smooth_l1_loss", "tensorflow.constant", "tensorflow.where"], "keras.backend.reshape": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.mrcnn_mask_loss_graph": ["tensorflow.cast", "tensorflow.size", "keras.backend.binary_crossentropy", "keras.backend.mean", "tensorflow.gather", "keras.backend.reshape", "tensorflow.gather_nd", "tensorflow.shape", "tensorflow.stack", "tensorflow.transpose", "keras.backend.switch", "tensorflow.constant", "tensorflow.where"], "keras.backend.binary_crossentropy": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.load_image_gt": ["numpy.fliplr", "numpy.zeros", "random.randint", "utils.minimize_mask", "utils.resize_image", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.compose_image_meta", "utils.resize_mask", "utils.extract_bboxes"], "utils.resize_image": [], "utils.resize_mask": [], "numpy.fliplr": [], "utils.extract_bboxes": [], "utils.minimize_mask": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.compose_image_meta": ["numpy.array", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.build_detection_targets": ["<builtin>.range", "numpy.arange", "numpy.zeros", "numpy.concatenate", "numpy.where", "utils.box_refinement", "numpy.round", "numpy.random.choice", "numpy.argmax", "<builtin>.int", "utils.compute_iou"], "utils.compute_iou": [], "numpy.random.choice": [], "utils.box_refinement": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.build_rpn_targets": ["numpy.arange", "numpy.zeros", "<builtin>.len", "numpy.sum", "numpy.log", "<builtin>.zip", "numpy.where", "utils.compute_overlaps", "numpy.ones", "numpy.random.choice", "numpy.argmax", "numpy.amax"], "utils.compute_overlaps": [], "numpy.amax": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.generate_random_rois": ["<builtin>.range", "numpy.zeros", "numpy.sort", "numpy.hstack", "<builtin>.min", "numpy.split", "numpy.abs", "numpy.random.randint", "<builtin>.int", "<builtin>.max"], "numpy.sort": [], "numpy.hstack": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.data_generator": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.load_image_gt", "numpy.arange", "<builtin>.len", "numpy.any", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.build_rpn_targets", "numpy.zeros", "logging.exception", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.build_detection_targets", "numpy.copy", "numpy.expand_dims", "numpy.random.shuffle", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.mold_image", "numpy.random.choice", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.generate_random_rois", "utils.generate_pyramid_anchors"], "numpy.copy": [], "utils.generate_pyramid_anchors": [], "numpy.random.shuffle": [], "numpy.any": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.mold_image": [], "numpy.expand_dims": [], "logging.exception": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.__init__": ["tensorflow.Session", "keras.backend.set_session", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.build", "tensorflow.ConfigProto", "keras.backend.set_image_data_format", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.set_log_dir"], "keras.backend.set_session": [], "keras.backend.set_image_data_format": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.set_log_dir": ["re.match", "os.path.join", "datetime.datetime", "<builtin>.int", "datetime.datetime.now"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.build": ["<builtin>.zip", "keras.layers.Conv2D", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.DetectionLayer.__init__", "parallel_model.ParallelModel", "keras.backend.cast", "keras.layers.UpSampling2D", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.build_fpn_mask_graph", "keras.layers.Lambda", "keras.backend.shape", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.DetectionTargetLayer.__init__", "<builtin>.len", "keras.layers.MaxPooling2D", "keras.layers.Concatenate", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.fpn_classifier_graph", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.resnet_graph", "keras.backend.stack", "<builtin>.int", "keras.models.Model", "<builtin>.list", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.build_rpn_model", "utils.generate_pyramid_anchors", "keras.layers.Add", "keras.layers.Input", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.ProposalLayer.__init__", "<builtin>.Exception"], "<builtin>.Exception": [], "keras.backend.shape": [], "keras.backend.stack": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.build.<lambda1>": [], "keras.layers.UpSampling2D": [], "keras.layers.Concatenate": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.build.<lambda2>": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.parse_image_meta_graph"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.build.<lambda3>": ["keras.backend.cast"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.build.<lambda4>": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.build.<lambda5>": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.rpn_class_loss_graph"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.build.<lambda6>": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.rpn_bbox_loss_graph"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.build.<lambda7>": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.mrcnn_class_loss_graph"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.build.<lambda8>": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.mrcnn_bbox_loss_graph"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.build.<lambda9>": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.mrcnn_mask_loss_graph"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.build.<lambda10>": ["numpy.array"], "parallel_model.ParallelModel": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.find_last": ["<builtin>.filter", "os.path.join", "os.walk", "<builtin>.next", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.find_last.<lambda1>": [], "<builtin>.filter": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.find_last.<lambda2>": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.load_weights": ["<builtin>.ImportError", "keras.engine.topology.load_weights_from_hdf5_group_by_name", "<builtin>.filter", "keras.engine.saving.load_weights_from_hdf5_group", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.set_log_dir", "<builtin>.hasattr", "keras.engine.topology.load_weights_from_hdf5_group", "h5py.File", "keras.engine.saving.load_weights_from_hdf5_group_by_name"], "<builtin>.ImportError": [], "h5py.File": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.load_weights.<lambda1>": [], "keras.engine.topology.load_weights_from_hdf5_group_by_name": [], "keras.engine.saving.load_weights_from_hdf5_group_by_name": [], "keras.engine.saving.load_weights_from_hdf5_group": [], "keras.engine.topology.load_weights_from_hdf5_group": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.get_imagenet_weights": ["keras.utils.data_utils.get_file"], "keras.utils.data_utils.get_file": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.compile": ["tensorflow.cast", "tensorflow.size", "<builtin>.len", "tensorflow.add_n", "tensorflow.reduce_mean", "keras.optimizers.SGD", "keras.regularizers.l2"], "keras.optimizers.SGD": [], "keras.regularizers.l2": [], "tensorflow.add_n": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.set_trainable": ["re.fullmatch", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.set_trainable", "<builtin>.print", "<builtin>.hasattr", "<builtin>.bool", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.log"], "re.fullmatch": [], "<builtin>.bool": [], "datetime.datetime": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.train": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.set_trainable", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.TimeHistory.__init__", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.compile", "<builtin>.max", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.data_generator", "<builtin>.next", "keras.callbacks.TensorBoard", "keras.callbacks.ModelCheckpoint", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.log"], "keras.callbacks.TensorBoard": [], "keras.callbacks.ModelCheckpoint": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.mold_inputs": ["numpy.zeros", "utils.resize_image", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.mold_image", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.compose_image_meta", "numpy.stack"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.unmold_detections": ["<builtin>.range", "numpy.arange", "numpy.empty", "numpy.array", "<builtin>.min", "utils.unmold_mask", "numpy.where", "numpy.multiply", "numpy.delete", "numpy.stack"], "numpy.multiply": [], "numpy.delete": [], "utils.unmold_mask": [], "numpy.empty": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.detect": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.unmold_detections", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.mold_inputs", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.log"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.ancestor": ["<builtin>.len", "re.fullmatch", "re.compile", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.ancestor", "<builtin>.bool", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.find_trainable_layer": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.find_trainable_layer"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.get_trainable_layers": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.find_trainable_layer"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.run_graph": ["keras.backend.learning_phase", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.MaskRCNN.mold_inputs", "<builtin>.zip", "keras.backend.function", "collections.OrderedDict", "<builtin>.isinstance", "<builtin>.list", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.log"], "keras.backend.learning_phase": [], "keras.backend.function": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.model.unmold_image": [], "tensorflow.abs": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.extract_bboxes": ["<builtin>.range", "numpy.any", "numpy.zeros", "numpy.array", "numpy.where"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.compute_iou": ["numpy.minimum", "numpy.maximum"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.compute_overlaps": ["<builtin>.range", "numpy.zeros", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.compute_iou"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.compute_overlaps_masks": ["numpy.reshape", "numpy.dot", "numpy.sum"], "numpy.dot": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.non_max_suppression": ["<builtin>.len", "numpy.array", "numpy.where", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.compute_iou", "numpy.delete"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.apply_box_deltas": ["numpy.exp", "numpy.stack"], "numpy.exp": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.box_refinement_graph": ["tensorflow.cast", "tensorflow.stack", "tensorflow.log"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.box_refinement": ["numpy.log", "numpy.stack"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.__init__": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.add_class": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.add_image": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.image_reference": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.prepare": ["numpy.arange", "<builtin>.len", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.prepare.clean_name", "<builtin>.enumerate", "<builtin>.set", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.prepare.clean_name": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.map_source_class_id": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.get_source_class_id": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.append_data": ["<builtin>.str", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.image_ids": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.source_image_link": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.load_image": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.Dataset.load_mask": ["numpy.empty"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.resize_image": ["numpy.pad", "<builtin>.min", "<builtin>.round", "<builtin>.max"], "numpy.pad": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.resize_mask": ["numpy.pad"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.minimize_mask": ["<builtin>.range", "numpy.zeros", "<builtin>.Exception", "numpy.where"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.expand_mask": ["<builtin>.range", "numpy.zeros", "numpy.where"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.mold_mask": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.unmold_mask": ["numpy.zeros", "numpy.where"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.generate_anchors": ["numpy.arange", "numpy.array", "numpy.concatenate", "numpy.sqrt", "numpy.stack", "numpy.meshgrid"], "numpy.meshgrid": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.generate_pyramid_anchors": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.generate_anchors", "numpy.concatenate"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.trim_zeros": ["<builtin>.len", "numpy.all"], "numpy.all": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.compute_ap": ["<builtin>.range", "numpy.arange", "<builtin>.len", "numpy.zeros", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.compute_overlaps_masks", "numpy.sum", "numpy.argsort", "numpy.concatenate", "numpy.cumsum", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.trim_zeros", "numpy.where", "numpy.maximum"], "numpy.cumsum": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.compute_recall": ["<builtin>.len", "numpy.max", "numpy.where", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.compute_overlaps", "<builtin>.set", "numpy.argmax"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.batch_slice": ["<builtin>.range", "<builtin>.len", "<builtin>.zip", "tensorflow.stack", "<builtin>.isinstance", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.maskrcnn.inference.fp32.utils.download_trained_weights": ["<builtin>.print", "shutil.copyfileobj", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.brats.predict": ["tensorflow.get_default_graph", "tensorflow.Session", "keras.backend.set_session", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.brats.predict.main", "tensorflow.ConfigProto", "argparse.ArgumentParser"], "tensorflow.get_default_graph": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.brats.predict.main": ["unet3d.prediction.run_validation_cases", "os.path.abspath", "unet3d.prediction.run_large_batch_validation_cases"], "unet3d.prediction.run_validation_cases": [], "unet3d.prediction.run_large_batch_validation_cases": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.brats": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.brats.train": ["<builtin>.dict", "tensorflow.get_default_graph", "tensorflow.Session", "<builtin>.len", "<builtin>.tuple", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.brats.train.main", "keras.backend.set_session", "os.path.join", "tensorflow.ConfigProto", "argparse.ArgumentParser", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.brats.train.TimeReporter.on_batch_begin": ["time.time"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.brats.train.TimeReporter.on_batch_end": ["<builtin>.print", "sys.exit", "time.time", "<builtin>.hasattr"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.brats.train.fetch_training_data_files": ["<builtin>.tuple", "os.path.join", "glob.glob", "<builtin>.list", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.brats.train.main": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.brats.train.fetch_training_data_files", "<builtin>.print", "os.path.exists", "unet3d.generator.get_training_and_validation_generators", "unet3d.training.load_old_model", "unet3d.training.train_model", "unet3d.data.open_data_file", "unet3d.data.write_data_to_file", "unet3d.model.unet_model_3d"], "unet3d.data.write_data_to_file": [], "unet3d.data.open_data_file": [], "unet3d.training.load_old_model": [], "unet3d.model.unet_model_3d": [], "unet3d.generator.get_training_and_validation_generators": [], "unet3d.training.train_model": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.metrics": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.metrics.dice_coefficient": ["keras.backend.sum", "keras.backend.flatten"], "keras.backend.flatten": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.metrics.dice_coefficient_loss": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.metrics.dice_coefficient"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.metrics.weighted_dice_coefficient": ["keras.backend.sum", "keras.backend.mean"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.metrics.weighted_dice_coefficient_loss": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.metrics.weighted_dice_coefficient"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.metrics.label_wise_dice_coefficient": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.metrics.dice_coefficient"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.metrics.get_label_dice_coefficient_function": ["functools.partial"], "functools.partial": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize.find_downsized_info": ["utils.crop_img", "utils.crop_img_to", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize.get_complete_foreground", "unet3d.utils.utils.resize"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize.get_complete_foreground": ["utils.read_image", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize.get_foreground_from_set_of_files", "nilearn.image.new_img_like", "<builtin>.enumerate"], "utils.crop_img": [], "utils.crop_img_to": [], "unet3d.utils.utils.resize": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize.get_cropping_parameters": ["utils.crop_img", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize.get_complete_foreground"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize.reslice_image_set": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize.get_cropping_parameters", "<builtin>.zip", "<builtin>.enumerate", "os.path.abspath", "utils.read_image", "<builtin>.isinstance", "<builtin>.list"], "utils.read_image": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize.get_foreground_from_set_of_files": ["numpy.logical_or", "numpy.zeros", "utils.read_image", "<builtin>.enumerate"], "nilearn.image.new_img_like": [], "numpy.logical_or": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize.normalize_data": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize.normalize_data_storage": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.normalize.normalize_data", "numpy.asarray", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.scale_image": ["numpy.asarray", "numpy.diag", "numpy.copy", "nilearn.image.new_img_like"], "numpy.diag": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.flip_image": ["numpy.flip", "numpy.copy", "nilearn.image.new_img_like"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.random_flip_dimensions": ["<builtin>.range", "<builtin>.list", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.random_boolean"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.random_boolean": ["numpy.random.choice"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.random_scale_factor": ["numpy.random.normal"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.distort_image": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.flip_image", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.scale_image"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.augment_data": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.random_scale_factor", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.get_image", "nilearn.image.resample_to_img", "numpy.asarray", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.distort_image", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.random_flip_dimensions", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.get_image": [], "nilearn.image.resample_to_img": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.generate_permutation_keys": ["<builtin>.range", "<builtin>.set", "itertools.combinations_with_replacement", "itertools.product"], "itertools.combinations_with_replacement": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.random_permutation_key": ["random.choice", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.generate_permutation_keys", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.permute_data": ["numpy.rot90", "numpy.copy", "<builtin>.range"], "numpy.rot90": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.random_permutation_x_y": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.random_permutation_key", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.permute_data"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.reverse_permute_data": ["<builtin>.range", "numpy.copy", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.reverse_permutation_key", "numpy.rot90"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.augment.reverse_permutation_key": ["<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.patch_wise_prediction": ["<builtin>.len", "<builtin>.tuple", "utils.patches.get_patch_from_3d_data", "utils.patches.compute_patch_indices", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.predict", "time.time", "numpy.asarray", "utils.patches.reconstruct_from_patches", "<builtin>.int", "<builtin>.list"], "utils.patches.compute_patch_indices": [], "utils.patches.get_patch_from_3d_data": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.predict": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.predict_with_permutations", "numpy.asarray", "<builtin>.list"], "utils.patches.reconstruct_from_patches": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.get_prediction_labels": ["<builtin>.range", "numpy.max", "numpy.array", "numpy.argmax", "numpy.unique"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.get_test_indices": ["utils.pickle_load"], "utils.pickle_load": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.predict_from_data_file": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.predict_and_get_image": ["nibabel.Nifti1Image"], "nibabel.Nifti1Image": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.predict_from_data_file_and_get_image": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.predict_and_get_image"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.predict_from_data_file_and_write_image": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.predict_from_data_file_and_get_image"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.prediction_to_image": ["numpy.zeros", "<builtin>.RuntimeError", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.multi_class_prediction", "nibabel.Nifti1Image", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.get_prediction_labels"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.multi_class_prediction": ["<builtin>.range", "nibabel.Nifti1Image"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.run_validation_case": ["os.makedirs", "<builtin>.tuple", "os.path.join", "os.path.exists", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.predict", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.patch_wise_prediction", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.prediction_to_image", "nibabel.Nifti1Image", "numpy.asarray", "<builtin>.int", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.run_validation_cases": ["os.path.join", "<builtin>.print", "utils.pickle_load", "training.load_old_model", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.run_validation_case", "tables.open_file", "time.time"], "training.load_old_model": [], "tables.open_file": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.predict_with_permutations": ["numpy.mean", "augment.reverse_permute_data", "<builtin>.list", "augment.permute_data", "augment.generate_permutation_keys"], "augment.generate_permutation_keys": [], "augment.permute_data": [], "augment.reverse_permute_data": [], "numpy.mean": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.run_large_batch_validation_cases": ["os.makedirs", "<builtin>.tuple", "utils.patches.get_patch_from_3d_data", "<builtin>.print", "utils.pickle_load", "training.load_old_model", "numpy.reshape", "<builtin>.isinstance", "os.path.exists", "tables.open_file", "math.ceil", "nibabel.Nifti1Image", "<builtin>.range", "<builtin>.len", "os.path.join", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.prediction_to_image", "time.time", "<builtin>.int", "<builtin>.list", "utils.patches.compute_patch_indices", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.prediction.predict", "numpy.asarray", "utils.patches.reconstruct_from_patches"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.get_training_and_validation_generators": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.get_number_of_patches", "<builtin>.print", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.data_generator", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.get_number_of_steps", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.get_validation_split"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.get_validation_split": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.split_list", "utils.pickle_dump", "<builtin>.print", "os.path.exists", "utils.pickle_load", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.data_generator": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.convert_data", "<builtin>.len", "copy.copy", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.add_data", "random.shuffle", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.create_patch_index_list", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.get_number_of_patches": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.create_patch_index_list", "<builtin>.list", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.add_data"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.get_number_of_steps": ["numpy.remainder"], "numpy.remainder": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.split_list": ["<builtin>.int", "random.shuffle", "<builtin>.len"], "utils.pickle_dump": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.create_patch_index_list": ["itertools.product", "utils.patches.compute_patch_indices", "numpy.negative", "utils.patches.get_random_nd_index", "<builtin>.list"], "copy.copy": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.add_data": ["numpy.any", "<builtin>.ValueError", "augment.random_permutation_x_y", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.get_data_from_file", "augment.augment_data"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.convert_data": ["numpy.asarray", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.get_multi_class_labels"], "utils.patches.get_random_nd_index": [], "numpy.negative": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.get_data_from_file": ["utils.patches.get_patch_from_3d_data", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.get_data_from_file"], "augment.augment_data": [], "augment.random_permutation_x_y": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.generator.get_multi_class_labels": ["<builtin>.range", "numpy.zeros", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.training": ["keras.backend.set_image_dim_ordering"], "keras.backend.set_image_dim_ordering": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.training.step_decay": ["math.floor", "math.pow", "<builtin>.float"], "math.floor": [], "math.pow": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.training.get_callbacks": ["functools.partial", "<builtin>.list", "keras.callbacks.EarlyStopping", "keras.callbacks.LearningRateScheduler", "keras.callbacks.ReduceLROnPlateau", "keras.callbacks.CSVLogger", "keras.callbacks.ModelCheckpoint"], "keras.callbacks.CSVLogger": [], "keras.callbacks.LearningRateScheduler": [], "keras.callbacks.ReduceLROnPlateau": [], "keras.callbacks.EarlyStopping": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.training.load_old_model": ["<builtin>.ValueError", "<builtin>.print", "<builtin>.str", "keras.models.load_model"], "keras.models.load_model": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.training.TimeReporter.on_batch_begin": ["<builtin>.print", "time.time"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.training.TimeReporter.on_batch_end": ["<builtin>.print", "time.time"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.training.train_model": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.training.get_callbacks"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.data": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.data.create_data_file": ["<builtin>.tuple", "tables.UInt8Atom", "tables.Float32Atom", "tables.Filters", "tables.open_file", "<builtin>.list"], "tables.Filters": [], "tables.Float32Atom": [], "tables.UInt8Atom": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.data.write_image_data_to_file": ["<builtin>.len", "normalize.reslice_image_set", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.data.add_data_to_storage"], "normalize.reslice_image_set": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.data.add_data_to_storage": ["numpy.asarray"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.data.write_data_to_file": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.data.create_data_file", "<builtin>.len", "os.remove", "normalize.normalize_data_storage", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.data.write_image_data_to_file"], "normalize.normalize_data_storage": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.data.open_data_file": ["tables.open_file"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.patches": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.patches.compute_patch_indices": ["<builtin>.len", "numpy.asarray", "numpy.ceil", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.patches.get_set_of_patch_indices"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.patches.get_set_of_patch_indices": ["numpy.asarray"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.patches.get_random_patch_index": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.patches.get_random_nd_index", "numpy.subtract"], "numpy.subtract": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.patches.get_random_nd_index": ["<builtin>.range", "<builtin>.len", "<builtin>.tuple", "numpy.random.choice"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.patches.get_patch_from_3d_data": ["numpy.asarray", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.patches.fix_out_of_bound_patch_attempt", "numpy.any"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.patches.fix_out_of_bound_patch_attempt": ["numpy.pad", "<builtin>.len", "numpy.stack", "numpy.abs"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.patches.reconstruct_from_patches": ["numpy.zeros", "numpy.any", "numpy.logical_and", "<builtin>.zip", "numpy.logical_not", "numpy.ones", "numpy.abs", "numpy.asarray"], "numpy.logical_not": [], "numpy.logical_and": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.utils": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.utils.pickle_dump": ["pickle.dump", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.utils.pickle_load": ["<builtin>.open", "pickle.load"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.utils.get_affine": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.utils.read_image"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.utils.read_image": ["...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.utils.resize", "<builtin>.print", "nilearn_custom_utils.nilearn_utils.crop_img_to", "os.path.abspath", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.utils.fix_shape", "nibabel.load"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.utils.read_image_files": ["<builtin>.len", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.utils.read_image", "numpy.stack", "<builtin>.list"], "nibabel.load": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.utils.fix_shape": ["numpy.squeeze"], "nilearn_custom_utils.nilearn_utils.crop_img_to": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.utils.resize": ["numpy.diag", "numpy.copy", "numpy.asarray", "nilearn.image.reorder_img", "nilearn.image.resample_img"], "numpy.squeeze": [], "nilearn.image.reorder_img": [], "nilearn.image.resample_img": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.nilearn_custom_utils": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.nilearn_custom_utils.nilearn_utils": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.utils.nilearn_custom_utils.nilearn_utils.crop_img": ["numpy.any", "numpy.minimum", "numpy.array", "numpy.logical_or", "<builtin>.zip", "numpy.where", "nilearn.image.image._crop_img_to", "numpy.maximum", "<builtin>.slice", "nilearn.image.image.check_niimg", "<builtin>.max"], "nilearn.image.image.check_niimg": [], "nilearn.image.image._crop_img_to": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.isensee2017": ["functools.partial"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.isensee2017.isensee2017_model": ["<builtin>.range", "keras.engine.Model", "keras.layers.Input", "<builtin>.reversed", "keras.optimizers.Adam", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.isensee2017.create_context_module", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.isensee2017.create_localization_module", "unet.concatenate", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.isensee2017.create_up_sampling_module", "keras.layers.UpSampling3D", "keras.layers.Activation", "<builtin>.list", "unet.create_convolution_block", "keras.layers.Add"], "unet.create_convolution_block": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.isensee2017.create_context_module": ["keras.layers.SpatialDropout3D", "unet.create_convolution_block"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.isensee2017.create_up_sampling_module": ["unet.create_convolution_block", "keras.layers.UpSampling3D"], "unet.concatenate": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.isensee2017.create_localization_module": ["unet.create_convolution_block"], "keras.layers.UpSampling3D": [], "keras.engine.Model": [], "keras.optimizers.Adam": [], "keras.layers.SpatialDropout3D": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.unet": ["keras.backend.set_image_data_format"], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.unet.unet_model_3d": ["<builtin>.range", "keras.engine.Model", "keras.optimizers.Adam", "keras.layers.MaxPooling3D", "keras.layers.merge.concatenate", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.unet.get_up_convolution", "keras.layers.Conv3D", "keras.layers.Activation", "keras.engine.Input", "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.unet.create_convolution_block", "<builtin>.list", "unet3d.metrics.get_label_dice_coefficient_function"], "keras.engine.Input": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.unet.create_convolution_block": ["<builtin>.ImportError", "keras.layers.BatchNormalization", "keras_contrib.layers.normalization.InstanceNormalization", "keras.layers.Conv3D", "keras.layers.Activation"], "keras.layers.MaxPooling3D": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.unet.get_up_convolution": ["keras.layers.Deconvolution3D", "keras.layers.UpSampling3D"], "keras.layers.merge.concatenate": [], "keras.layers.Conv3D": [], "unet3d.metrics.get_label_dice_coefficient_function": [], "keras.layers.BatchNormalization": [], "keras_contrib.layers.normalization.InstanceNormalization": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model.unet.compute_level_output_shape": ["numpy.divide", "<builtin>.tuple", "numpy.asarray", "numpy.power"], "numpy.power": [], "numpy.divide": [], "keras.layers.Deconvolution3D": [], "...repos_filtered.IntelAI.models.models.image_segmentation.tensorflow.3d_unet.inference.fp32.unet3d.model": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.TransNetV2.__init__": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.FrameSimilarity.__init__", "torch.nn.Linear", "torch.nn.ModuleList", "torch.nn.Dropout", "<builtin>.sum", "<builtin>.super", "torch.nn.Module.eval", "<builtin>.NotImplemented", "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.ColorHistograms.__init__", "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.StackedDDCNNV2.__init__"], "<builtin>.NotImplemented": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.StackedDDCNNV2.__init__": ["<builtin>.range", "torch.nn.AvgPool3d", "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.DilatedDCNNV2.__init__", "torch.nn.ModuleList", "<builtin>.print", "torch.nn.MaxPool3d", "<builtin>.super", "<builtin>.NotImplemented"], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.FrameSimilarity.__init__": ["torch.nn.Linear", "<builtin>.super", "<builtin>.NotImplemented"], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.ColorHistograms.__init__": ["torch.nn.Linear", "<builtin>.super"], "torch.nn.Dropout": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.TransNetV2.forward": ["torch.cat", "torch.mean", "torch.nn.functional.relu"], "torch.mean": [], "torch.nn.functional.relu": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.DilatedDCNNV2.__init__": ["...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.Conv3DConfigurable.__init__", "torch.nn.BatchNorm3d", "<builtin>.super", "<builtin>.NotImplemented"], "torch.nn.MaxPool3d": [], "torch.nn.AvgPool3d": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.StackedDDCNNV2.forward": ["random.random", "torch.nn.functional.relu"], "random.random": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.Conv3DConfigurable.__init__": ["torch.nn.Conv3d", "<builtin>.super", "torch.nn.ModuleList", "<builtin>.NotImplemented"], "torch.nn.BatchNorm3d": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.DilatedDCNNV2.forward": ["...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.Conv3DConfigurable.__init__", "torch.cat"], "torch.nn.Conv3d": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.Conv3DConfigurable.forward": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.FrameSimilarity.forward": ["torch.nn.functional.pad", "torch.transpose", "torch.arange", "torch.nn.functional.relu", "torch.cat", "torch.nn.functional.normalize", "torch.mean", "torch.bmm"], "torch.nn.functional.normalize": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.ColorHistograms.compute_color_histograms": ["torch.zeros", "<builtin>.len", "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.ColorHistograms.compute_color_histograms.get_bin", "torch.arange", "torch.nn.functional.normalize", "torch.ones"], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.ColorHistograms.compute_color_histograms.get_bin": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.ColorHistograms.forward": ["torch.nn.functional.pad", "torch.nn.functional.relu", "torch.arange", "torch.bmm", "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.transnetv2.ColorHistograms.compute_color_histograms"], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference": ["...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.inference", "argparse.ArgumentParser", "transnetv2.TransNetV2"], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.ProgressMeter.__init__": ["...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.ProgressMeter._get_batch_fmtstr"], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.ProgressMeter._get_batch_fmtstr": ["<builtin>.str", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.ProgressMeter.display": ["<builtin>.str", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.AverageMeter.__init__": ["...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.AverageMeter.reset"], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.AverageMeter.reset": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.AverageMeter.update": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.AverageMeter.__str__": [], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.get_batches": ["torch.cat", "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.get_batches.func"], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.get_batches.func": ["<builtin>.range"], "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.inference": ["<builtin>.range", "torch.jit.freeze", "<builtin>.print", "torch.jit.trace", "torch.utils.mkldnn.to_mkldnn", "intel_extension_for_pytorch.optimize", "time.time", "torch.no_grad", "torch.profiler.profile", "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.AverageMeter.__init__", "...repos_filtered.IntelAI.models.models.shot_boundary_detection.pytorch.transnetv2.inference.cpu.inference.AverageMeter.update", "torch.randint", "<builtin>.isinstance", "torch.cpu.amp.autocast"], "torch.utils.mkldnn.to_mkldnn": [], "torch.randint": [], "torch.profiler.profile": [], "transnetv2.TransNetV2": [], "...repos_filtered.IntelAI.models.models.common": [], "...repos_filtered.IntelAI.models.models.common.tensorflow": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.misc": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.misc.model_helpers": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.misc.model_helpers.past_stop_threshold": ["<builtin>.ValueError", "<builtin>.isinstance", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.arg_parsers": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.arg_parsers.parsers": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.arg_parsers.parsers.parse_dtype_info": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.arg_parsers.parsers.BaseParser.__init__": ["argparse.ArgumentParser.add_argument", "<builtin>.super", "tensorflow.test.is_built_with_cuda"], "tensorflow.test.is_built_with_cuda": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.arg_parsers.parsers.PerformanceParser.__init__": ["argparse.ArgumentParser.add_argument", "<builtin>.list", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.arg_parsers.parsers.ImageModelParser.__init__": ["argparse.ArgumentParser.add_argument", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.arg_parsers.parsers.ExportParser.__init__": ["argparse.ArgumentParser.add_argument", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.arg_parsers.parsers.BenchmarkParser.__init__": ["argparse.ArgumentParser.add_argument", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.arg_parsers.parsers.EagerParser.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.hooks_helper": ["<builtin>.dict"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.hooks_helper.get_train_hooks": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.hooks_helper.get_logging_tensor_hook": ["tensorflow.estimator.LoggingTensorHook"], "tensorflow.estimator.LoggingTensorHook": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.hooks_helper.get_profiler_hook": ["tensorflow.estimator.ProfilerHook"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.hooks_helper.get_examples_per_second_hook": ["mlperf_utils.logs.hooks.ExamplesPerSecondHook"], "mlperf_utils.logs.hooks.ExamplesPerSecondHook": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.hooks_helper.get_logging_metric_hook": ["<builtin>.ValueError", "mlperf_utils.logs.metric_hook.LoggingMetricHook"], "mlperf_utils.logs.metric_hook.LoggingMetricHook": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.hooks": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.hooks.ExamplesPerSecondHook.__init__": ["<builtin>.ValueError", "tensorflow.estimator.SecondOrStepTimer"], "tensorflow.estimator.SecondOrStepTimer": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.hooks.ExamplesPerSecondHook.begin": ["<builtin>.RuntimeError", "tensorflow.compat.v1.train.get_global_step"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.hooks.ExamplesPerSecondHook.before_run": ["tensorflow.estimator.SessionRunArgs"], "tensorflow.estimator.SessionRunArgs": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.hooks.ExamplesPerSecondHook.after_run": ["tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.metric_hook": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.metric_hook.LoggingMetricHook.__init__": ["<builtin>.ValueError", "<builtin>.super", "mlperf_utils.logs.logger.BenchmarkLogger"], "mlperf_utils.logs.logger.BenchmarkLogger": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.metric_hook.LoggingMetricHook.begin": ["<builtin>.RuntimeError", "<builtin>.super", "tensorflow.compat.v1.train.get_global_step"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.metric_hook.LoggingMetricHook.after_run": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.metric_hook.LoggingMetricHook._log_metric"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.metric_hook.LoggingMetricHook._log_metric": ["tensorflow.estimator.LoggingTensorHook._timer.update_last_triggered_step"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.metric_hook.LoggingMetricHook.end": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.metric_hook.LoggingMetricHook._log_metric"], "tensorflow.estimator.LoggingTensorHook._timer.update_last_triggered_step": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger.BenchmarkLogger.__init__": ["tensorflow.io.gfile.isdir", "tensorflow.io.gfile.makedirs"], "tensorflow.io.gfile.isdir": [], "tensorflow.io.gfile.makedirs": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger.BenchmarkLogger.log_estimator_evaluation_result": ["<builtin>.type", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger.BenchmarkLogger.log_metric", "tensorflow.compat.v1.logging.warning", "<builtin>.isinstance", "<builtin>.sorted"], "<builtin>.type": [], "tensorflow.compat.v1.logging.warning": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger.BenchmarkLogger.log_metric": ["<builtin>.type", "json.dump", "os.path.join", "tensorflow.compat.v1.logging.warning", "<builtin>.float", "tensorflow.io.gfile.GFile", "<builtin>.isinstance", "<builtin>.sorted", "datetime.datetime.now"], "json.dump": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger.BenchmarkLogger.log_run_info": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger._collect_memory_info", "json.dump", "os.path.join", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger._collect_cpu_info", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger._collect_tensorflow_environment_variables", "tensorflow.compat.v1.logging.warning", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger._collect_gpu_info", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger._collect_tensorflow_info", "tensorflow.io.gfile.GFile", "datetime.datetime.now"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger._collect_tensorflow_info": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger._collect_tensorflow_environment_variables": ["<builtin>.sorted", "os.environ.items"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger._collect_cpu_info": ["cpuinfo.get_cpu_info", "multiprocessing.cpu_count"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger._collect_gpu_info": ["<builtin>.len", "tensorflow.python.client.device_lib.list_local_devices", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger._parse_gpu_model"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger._collect_memory_info": ["psutil.virtual_memory"], "os.environ.items": [], "multiprocessing.cpu_count": [], "cpuinfo.get_cpu_info": [], "tensorflow.python.client.device_lib.list_local_devices": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.logger._parse_gpu_model": [], "psutil.virtual_memory": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.benchmark_uploader": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.benchmark_uploader.main"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.__init__": ["google.cloud.bigquery.Client"], "google.cloud.bigquery.Client": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.upload_benchmark_run": ["os.path.join", "tensorflow.compat.v1.logging.error", "tensorflow.io.gfile.GFile", "json.load"], "tensorflow.compat.v1.logging.error": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.upload_metric": ["os.path.join", "<builtin>.filter", "json.loads", "tensorflow.compat.v1.logging.error", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.upload_metric.<lambda1>": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.benchmark_uploader.main": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.upload_benchmark_run", "<builtin>.print", "official.utils.arg_parsers.parsers.BenchmarkParser", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.__init__", "uuid.uuid4", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.upload_metric", "<builtin>.str", "sys.exit"], "official.utils.arg_parsers.parsers.BenchmarkParser": [], "uuid.uuid4": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.export": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.export.export": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.export.export.build_tensor_serving_input_receiver_fn": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_utils.export.export.build_tensor_serving_input_receiver_fn.serving_input_receiver_fn": ["tensorflow.estimator.export.TensorServingInputReceiver", "tensorflow.compat.v1.placeholder"], "tensorflow.estimator.export.TensorServingInputReceiver": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.tags": ["<builtin>.set"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance._transformer_tags": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.tf_mlperf_log": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.tf_mlperf_log._example"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.tf_mlperf_log.log_deferred": ["tensorflow.cond", "tensorflow.compat.v1.assign_add", "tensorflow.Variable", "tensorflow.compat.v1.Print", "tensorflow.equal", "tensorflow.zeros", "tensorflow.timestamp", "tensorflow.math.mod"], "tensorflow.timestamp": [], "tensorflow.compat.v1.Print": [], "tensorflow.compat.v1.assign_add": [], "tensorflow.math.mod": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.tf_mlperf_log.log_deferred.<lambda1>": ["tensorflow.timestamp", "tensorflow.compat.v1.Print"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.tf_mlperf_log.log_deferred.<lambda2>": [], "tensorflow.cond": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.tf_mlperf_log.sum_metric": ["tensorflow.identity", "tensorflow.compat.v1.Variable", "tensorflow.zeros", "tensorflow.compat.v1.assign_add"], "tensorflow.compat.v1.Variable": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.tf_mlperf_log._example": ["<builtin>.dict", "<builtin>.range", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.tf_mlperf_log.log_deferred", "<builtin>.print", "tensorflow.compat.v1.Session", "uuid.uuid4", "tensorflow.Variable", "<builtin>.str", "tensorflow.zeros", "tensorflow.compat.v1.assign_add"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance._gnmt_tags": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance._resnet_tags": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance._ssd_tags": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log": ["logging.FileHandler", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log.ncf_print", "os.getenv", "<builtin>.set", "re.compile", "logging.getLogger", "logging.StreamHandler"], "os.getenv": [], "logging.getLogger": [], "logging.StreamHandler": [], "logging.FileHandler": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log.get_caller": ["inspect.stack", "inspect.getframeinfo", "re.sub"], "inspect.stack": [], "inspect.getframeinfo": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log._mlperf_print": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log.get_caller", "<builtin>.ValueError", "<builtin>.print", "json.dumps", "uuid.uuid4", "time.time", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log.gnmt_print": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log.maskrcnn_print": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log.minigo_print": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log.ncf_print": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log.resnet_print": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log.ssd_print": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log.transformer_print": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance._maskrcnn_tags": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper._get_shape": ["<builtin>.str"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper._in_out_shape": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper._get_shape"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper.log_max_pool": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper._in_out_shape", "mlperf_compliance.mlperf_log.resnet_print"], "mlperf_compliance.mlperf_log.resnet_print": [], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper.log_begin_block": ["mlperf_compliance.mlperf_log.resnet_print", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper._get_shape"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper.log_end_block": ["mlperf_compliance.mlperf_log.resnet_print", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper._get_shape"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper.log_projection": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper._in_out_shape", "mlperf_compliance.mlperf_log.resnet_print"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper.log_conv2d": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper._in_out_shape", "mlperf_compliance.mlperf_log.resnet_print"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper.log_batch_norm": ["mlperf_compliance.mlperf_log.resnet_print", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.resnet_log_helper._get_shape"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.test_tag_set": ["...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.test_tag_set.check_collisions", "re.compile", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.test_tag_set.check_format"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.test_tag_set.extract_tags": ["<builtin>.dir", "<builtin>.isinstance", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.test_tag_set.check_collisions": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.test_tag_set.extract_tags", "collections.defaultdict", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance.test_tag_set.check_format": ["<builtin>.print", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.common.tensorflow.mlperf_compliance._ncf_tags": [], "...repos_filtered.IntelAI.models.models.image_recognition": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.datasets": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.datasets.Dataset.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.datasets.Dataset.tf_record_pattern": ["os.path.join"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.datasets.Dataset.reader": ["tensorflow.compat.v1.TFRecordReader"], "tensorflow.compat.v1.TFRecordReader": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.datasets.Dataset": ["abc.abstractmethod"], "abc.abstractmethod": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.datasets.Dataset.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.datasets.Dataset.num_examples_per_epoch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.datasets.Dataset.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.datasets.ImagenetData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.datasets.ImagenetData.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.datasets.ImagenetData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.datasets.ImagenetData.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.eval_image_classifier_inference": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.run", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.__init__"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.__init__": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.validate_args", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.validate_args": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.write_results_output": ["<builtin>.zip", "<builtin>.open", "numpy.argmax"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.run": ["tensorflow.cast", "tensorflow.Graph", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "tensorflow.compat.v1.gfile.FastGFile", "tensorflow.nn.in_top_k", "datasets.ImagenetData", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.GraphDef", "tensorflow.reduce_sum", "tensorflow.import_graph_def", "time.time", "tensorflow.constant", "<builtin>.open", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.write_results_output", "tensorflow.random.uniform"], "datasets.ImagenetData": [], "tensorflow.nn.in_top_k": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.preprocessing.parse_example_proto": ["tensorflow.cast", "tensorflow.io.FixedLenFeature", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example"], "tensorflow.io.FixedLenFeature": [], "tensorflow.io.VarLenFeature": [], "tensorflow.io.parse_single_example": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.preprocessing.eval_image": ["tensorflow.cond", "tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.image.central_crop", "tensorflow.less", "tensorflow.squeeze", "tensorflow.image.crop_to_bounding_box", "tensorflow.image.convert_image_dtype", "tensorflow.multiply", "tensorflow.subtract"], "tensorflow.compat.v1.name_scope": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.preprocessing.eval_image.<lambda1>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "tensorflow.image.resize": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.preprocessing.eval_image.<lambda2>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "tensorflow.image.crop_to_bounding_box": [], "tensorflow.image.convert_image_dtype": [], "tensorflow.image.central_crop": [], "tensorflow.subtract": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.preprocessing.RecordInputImagePreprocessor.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.preprocessing.RecordInputImagePreprocessor.parse_and_preprocess": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.preprocessing.parse_example_proto", "tensorflow.image.decode_jpeg", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.preprocessing.eval_image"], "tensorflow.image.decode_jpeg": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.inference.preprocessing.RecordInputImagePreprocessor.minibatch": ["tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.data.TFRecordDataset.list_files", "<builtin>.min", "tensorflow.python.data.experimental.map_and_batch", "tensorflow.python.data.experimental.parallel_interleave", "tensorflow.reshape", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.platform.gfile.Glob"], "tensorflow.python.platform.gfile.Glob": [], "tensorflow.data.TFRecordDataset.list_files": [], "tensorflow.python.data.experimental.parallel_interleave": [], "tensorflow.python.data.experimental.map_and_batch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing_benchmark": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing_benchmark.parse_example_proto": ["tensorflow.cast", "tensorflow.io.FixedLenFeature", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing_benchmark.eval_image": ["tensorflow.cond", "tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.image.central_crop", "tensorflow.less", "tensorflow.squeeze", "tensorflow.image.crop_to_bounding_box", "tensorflow.image.convert_image_dtype", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing_benchmark.eval_image.<lambda1>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing_benchmark.eval_image.<lambda2>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing_benchmark.RecordInputImagePreprocessor.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing_benchmark.RecordInputImagePreprocessor.parse_and_preprocess": ["tensorflow.image.decode_jpeg", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing_benchmark.parse_example_proto", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing_benchmark.eval_image"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing_benchmark.RecordInputImagePreprocessor.minibatch": ["tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.data.TFRecordDataset.list_files", "<builtin>.min", "tensorflow.python.data.experimental.map_and_batch", "tensorflow.python.data.experimental.parallel_interleave", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.platform.gfile.Glob"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.benchmark": ["<builtin>.range", "tensorflow.Graph", "sys.exit", "datasets.ImagenetData", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.compat.v1.global_variables_initializer", "tensorflow.compat.v1.GraphDef", "tensorflow.compat.v1.Session", "tensorflow.import_graph_def", "time.time", "<builtin>.open", "tensorflow.random.uniform", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.Dataset.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.Dataset.tf_record_pattern": ["os.path.join"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.Dataset.reader": ["tensorflow.compat.v1.TFRecordReader"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.Dataset.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.Dataset": ["abc.abstractmethod"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.Dataset.num_examples_per_epoch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.Dataset.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.Dataset.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.Dataset.queue_runner_required": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.Dataset.use_synthetic_gpu_images": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.ImagenetData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.ImagenetData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.datasets.ImagenetData.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.parse_example_proto": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.io.FixedLenFeature", "tensorflow.transpose", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.decode_jpeg": ["tensorflow.image.decode_jpeg", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.eval_image": ["tensorflow.cond", "tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.slice", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.less", "tensorflow.compat.v1.summary.image", "tensorflow.image.crop_to_bounding_box", "tensorflow.image.sample_distorted_bounding_box", "cnn_util.tensorflow_version"], "tensorflow.compat.v1.summary.image": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.eval_image.<lambda1>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.eval_image.<lambda2>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "tensorflow.image.sample_distorted_bounding_box": [], "tensorflow.slice": [], "cnn_util.tensorflow_version": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.distort_image": ["tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.slice", "tensorflow.image.random_flip_left_right", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.compat.v1.summary.image", "tensorflow.image.sample_distorted_bounding_box", "tensorflow.image.convert_image_dtype", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.distort_color", "tensorflow.image.draw_bounding_boxes", "cnn_util.tensorflow_version"], "tensorflow.image.draw_bounding_boxes": [], "tensorflow.image.random_flip_left_right": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.distort_color": ["tensorflow.compat.v1.name_scope", "tensorflow.clip_by_value", "tensorflow.image.random_saturation", "tensorflow.image.random_brightness", "tensorflow.image.random_contrast", "tensorflow.image.random_hue"], "tensorflow.image.random_brightness": [], "tensorflow.image.random_saturation": [], "tensorflow.image.random_hue": [], "tensorflow.image.random_contrast": [], "tensorflow.clip_by_value": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.ImagePreprocessor.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.ImagePreprocessor.preprocess": ["tensorflow.image.decode_jpeg", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.distort_image", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.eval_image"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.ImagePreprocessor.minibatch": ["<builtin>.range", "tensorflow.cast", "random.randint", "tensorflow.compat.v1.name_scope", "six.moves.xrange", "tensorflow.python.ops.data_flow_ops.RecordInput", "tensorflow.parallel_stack", "tensorflow.split", "tensorflow.concat", "tensorflow.reshape", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.ImagePreprocessor.preprocess", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.preprocessing.parse_example_proto"], "tensorflow.python.ops.data_flow_ops.RecordInput": [], "tensorflow.parallel_stack": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.cnn_util": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.cnn_util.tensorflow_version_tuple": ["<builtin>.int", "tensorflow.__version__.split"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.cnn_util.tensorflow_version": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.cnn_util.tensorflow_version_tuple"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.generate_calibration_data": ["tensorflow.nn.in_top_k", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.generate_calibration_data.load_graph", "tensorflow.reduce_sum", "datasets.ImagenetData", "<builtin>.print", "tensorflow.cast", "tensorflow.io.TFRecordWriter", "collections.namedtuple", "tensorflow.constant", "<builtin>.sorted", "<builtin>.range", "<builtin>.len", "tensorflow.compat.v1.ConfigProto", "argparse.ArgumentParser", "preprocessing.ImagePreprocessor", "numpy.where", "operator.attrgetter", "tensorflow.compat.v1.Session", "sys.exit"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50.int8.generate_calibration_data.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "preprocessing.ImagePreprocessor": [], "collections.namedtuple": [], "operator.attrgetter": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.misc": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.misc.model_helpers": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.misc.model_helpers.past_stop_threshold": ["<builtin>.ValueError", "<builtin>.isinstance", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.arg_parsers": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.arg_parsers.parsers": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.arg_parsers.parsers.parse_dtype_info": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.arg_parsers.parsers.BaseParser.__init__": ["argparse.ArgumentParser.add_argument", "<builtin>.super", "tensorflow.test.is_built_with_cuda"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.arg_parsers.parsers.PerformanceParser.__init__": ["argparse.ArgumentParser.add_argument", "<builtin>.list", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.arg_parsers.parsers.ImageModelParser.__init__": ["argparse.ArgumentParser.add_argument", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.arg_parsers.parsers.ExportParser.__init__": ["argparse.ArgumentParser.add_argument", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.arg_parsers.parsers.BenchmarkParser.__init__": ["argparse.ArgumentParser.add_argument", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.arg_parsers.parsers.EagerParser.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.hooks_helper": ["<builtin>.dict"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.hooks_helper.get_train_hooks": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.hooks_helper.get_logging_tensor_hook": ["tensorflow.estimator.LoggingTensorHook"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.hooks_helper.get_profiler_hook": ["tensorflow.estimator.ProfilerHook"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.hooks_helper.get_examples_per_second_hook": ["mlperf_utils.logs.hooks.ExamplesPerSecondHook"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.hooks_helper.get_logging_metric_hook": ["<builtin>.ValueError", "mlperf_utils.logs.metric_hook.LoggingMetricHook"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.hooks": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.hooks.ExamplesPerSecondHook.__init__": ["<builtin>.ValueError", "tensorflow.estimator.SecondOrStepTimer"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.hooks.ExamplesPerSecondHook.begin": ["<builtin>.RuntimeError", "tensorflow.compat.v1.train.get_global_step"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.hooks.ExamplesPerSecondHook.before_run": ["tensorflow.estimator.SessionRunArgs"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.hooks.ExamplesPerSecondHook.after_run": ["tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.metric_hook": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.metric_hook.LoggingMetricHook.__init__": ["<builtin>.ValueError", "<builtin>.super", "mlperf_utils.logs.logger.BenchmarkLogger"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.metric_hook.LoggingMetricHook.begin": ["<builtin>.RuntimeError", "<builtin>.super", "tensorflow.compat.v1.train.get_global_step"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.metric_hook.LoggingMetricHook.after_run": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.metric_hook.LoggingMetricHook._log_metric"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.metric_hook.LoggingMetricHook._log_metric": ["tensorflow.estimator.LoggingTensorHook._timer.update_last_triggered_step"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.metric_hook.LoggingMetricHook.end": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.metric_hook.LoggingMetricHook._log_metric"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger.BenchmarkLogger.__init__": ["tensorflow.io.gfile.isdir", "tensorflow.io.gfile.makedirs"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger.BenchmarkLogger.log_estimator_evaluation_result": ["<builtin>.type", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger.BenchmarkLogger.log_metric", "tensorflow.compat.v1.logging.warning", "<builtin>.isinstance", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger.BenchmarkLogger.log_metric": ["<builtin>.type", "json.dump", "os.path.join", "tensorflow.compat.v1.logging.warning", "<builtin>.float", "tensorflow.io.gfile.GFile", "<builtin>.isinstance", "<builtin>.sorted", "datetime.datetime.now"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger.BenchmarkLogger.log_run_info": ["json.dump", "os.path.join", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger._collect_gpu_info", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger._collect_cpu_info", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger._collect_tensorflow_environment_variables", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger._collect_tensorflow_info", "tensorflow.compat.v1.logging.warning", "tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger._collect_memory_info", "datetime.datetime.now"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger._collect_tensorflow_info": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger._collect_tensorflow_environment_variables": ["<builtin>.sorted", "os.environ.items"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger._collect_cpu_info": ["cpuinfo.get_cpu_info", "multiprocessing.cpu_count"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger._collect_gpu_info": ["<builtin>.len", "tensorflow.python.client.device_lib.list_local_devices", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger._parse_gpu_model"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger._collect_memory_info": ["psutil.virtual_memory"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.logger._parse_gpu_model": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.benchmark_uploader": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.benchmark_uploader.main"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.__init__": ["google.cloud.bigquery.Client"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.upload_benchmark_run": ["os.path.join", "tensorflow.compat.v1.logging.error", "tensorflow.io.gfile.GFile", "json.load"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.upload_metric": ["os.path.join", "<builtin>.filter", "json.loads", "tensorflow.compat.v1.logging.error", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.upload_metric.<lambda1>": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.benchmark_uploader.main": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.upload_benchmark_run", "<builtin>.print", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.__init__", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.logs.benchmark_uploader.BigQueryUploader.upload_metric", "official.utils.arg_parsers.parsers.BenchmarkParser", "uuid.uuid4", "<builtin>.str", "sys.exit"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.export": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.export.export": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.export.export.build_tensor_serving_input_receiver_fn": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_utils.export.export.build_tensor_serving_input_receiver_fn.serving_input_receiver_fn": ["tensorflow.estimator.export.TensorServingInputReceiver", "tensorflow.compat.v1.placeholder"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main.main", "os.path.abspath", "tensorflow.compat.v1.logging.set_verbosity", "os.path.split"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main.get_filenames": ["os.path.join", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main._parse_example_proto": ["tensorflow.cast", "tensorflow.io.FixedLenFeature", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main.parse_record": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main._parse_example_proto", "mlperf_resnet.imagenet_preprocessing.preprocess_image"], "mlperf_resnet.imagenet_preprocessing.preprocess_image": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main.input_fn": ["mlperf_resnet.resnet_run_loop.process_record_dataset", "mlperf_compliance.mlperf_log.resnet_print", "tensorflow.data.Dataset.from_tensor_slices", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main.get_filenames"], "tensorflow.data.Dataset.from_tensor_slices": [], "mlperf_resnet.resnet_run_loop.process_record_dataset": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main.get_synth_input_fn": ["mlperf_resnet.resnet_run_loop.get_synth_input_fn"], "mlperf_resnet.resnet_run_loop.get_synth_input_fn": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main.ImagenetModel.__init__": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main._get_block_sizes", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main._get_block_sizes": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main.imagenet_model_fn": ["horovod.tensorflow.size", "mlperf_resnet.resnet_run_loop.learning_rate_with_decay", "mlperf_resnet.resnet_run_loop.resnet_model_fn"], "horovod.tensorflow.size": [], "mlperf_resnet.resnet_run_loop.learning_rate_with_decay": [], "mlperf_resnet.resnet_run_loop.resnet_model_fn": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main.main": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_main.get_synth_input_fn", "mlperf_compliance.mlperf_log.resnet_print", "mlperf_resnet.resnet_run_loop.ResnetArgParser", "tensorflow.compat.v1.set_random_seed", "<builtin>.int", "random.seed", "mlperf_resnet.resnet_run_loop.resnet_main"], "mlperf_resnet.resnet_run_loop.ResnetArgParser": [], "mlperf_resnet.resnet_run_loop.resnet_main": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.batch_norm": ["tensorflow.compat.v1.layers.batch_normalization", "mlperf_compliance.resnet_log_helper.log_batch_norm"], "mlperf_compliance.resnet_log_helper.log_batch_norm": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.fixed_padding": ["tensorflow.pad"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.conv2d_fixed_padding": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.fixed_padding", "tensorflow.compat.v1.variance_scaling_initializer", "mlperf_compliance.resnet_log_helper.log_conv2d", "tensorflow.compat.v1.layers.conv2d"], "tensorflow.compat.v1.variance_scaling_initializer": [], "tensorflow.compat.v1.layers.conv2d": [], "mlperf_compliance.resnet_log_helper.log_conv2d": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model._building_block_v1": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model._building_block_v2": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model._bottleneck_block_v1": ["tensorflow.math.add_n", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.block_layer.projection_shortcut", "mlperf_compliance.mlperf_log.resnet_print", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.conv2d_fixed_padding", "mlperf_compliance.resnet_log_helper.log_begin_block", "mlperf_compliance.resnet_log_helper.log_projection", "mlperf_compliance.resnet_log_helper.log_end_block", "tensorflow.nn.relu", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.batch_norm"], "mlperf_compliance.resnet_log_helper.log_begin_block": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.block_layer.projection_shortcut": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.conv2d_fixed_padding"], "mlperf_compliance.resnet_log_helper.log_projection": [], "tensorflow.math.add_n": [], "mlperf_compliance.resnet_log_helper.log_end_block": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model._bottleneck_block_v2": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.block_layer": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model._building_block_v1", "tensorflow.identity", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model._bottleneck_block_v2", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model._bottleneck_block_v1", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model._building_block_v2"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.Model.__init__": ["<builtin>.ValueError", "tensorflow.test.is_built_with_cuda"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.Model._custom_dtype_getter": ["tensorflow.cast"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.Model._model_variable_scope": ["tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.Model.__call__": ["tensorflow.identity", "tensorflow.compat.v1.layers.max_pooling2d", "mlperf_compliance.mlperf_log.resnet_print", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.conv2d_fixed_padding", "tensorflow.transpose", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.Model._model_variable_scope", "<builtin>.enumerate", "mlperf_compliance.resnet_log_helper.log_max_pool", "tensorflow.reduce_mean", "tensorflow.compat.v1.random_normal_initializer", "tensorflow.compat.v1.layers.dense", "tensorflow.reshape", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.block_layer", "tensorflow.nn.relu", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_model.batch_norm"], "tensorflow.compat.v1.layers.max_pooling2d": [], "mlperf_compliance.resnet_log_helper.log_max_pool": [], "tensorflow.compat.v1.random_normal_initializer": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._decode_crop_and_flip": ["tensorflow.image.extract_jpeg_shape", "tensorflow.image.random_flip_left_right", "tensorflow.image.decode_and_crop_jpeg", "mlperf_compliance.mlperf_log.resnet_print", "tensorflow.stack", "tensorflow.image.sample_distorted_bounding_box", "tensorflow.constant", "tensorflow.unstack"], "tensorflow.image.extract_jpeg_shape": [], "tensorflow.unstack": [], "tensorflow.image.decode_and_crop_jpeg": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._central_crop": ["tensorflow.shape", "tensorflow.slice", "mlperf_compliance.mlperf_log.resnet_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._mean_image_subtraction": ["<builtin>.ValueError", "tensorflow.expand_dims", "<builtin>.len", "mlperf_compliance.mlperf_log.resnet_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._smallest_size_at_least": ["tensorflow.cast", "tensorflow.minimum"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._aspect_preserving_resize": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._resize_image", "tensorflow.shape", "mlperf_compliance.mlperf_log.resnet_print", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._smallest_size_at_least"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._resize_image": ["tensorflow.image.resize"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing.preprocess_image": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._aspect_preserving_resize", "tensorflow.image.decode_jpeg", "mlperf_compliance.mlperf_log.resnet_print", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._mean_image_subtraction", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._decode_crop_and_flip", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._central_crop", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.imagenet_preprocessing._resize_image"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop": ["horovod.tensorflow.size", "<builtin>.print", "horovod.tensorflow.init"], "horovod.tensorflow.init": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.process_record_dataset": ["horovod.tensorflow.size", "mlperf_compliance.mlperf_log.resnet_print", "horovod.tensorflow.rank", "tensorflow.data.experimental.map_and_batch"], "horovod.tensorflow.rank": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.process_record_dataset.<lambda1>": [], "tensorflow.data.experimental.map_and_batch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.get_synth_input_fn": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.get_synth_input_fn.input_fn": ["tensorflow.zeros", "tensorflow.data.Dataset.from_tensors"], "tensorflow.data.Dataset.from_tensors": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.learning_rate_with_decay": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.learning_rate_with_decay.learning_rate_fn": ["tensorflow.cast", "tensorflow.cond", "<builtin>.int", "tensorflow.compat.v1.train.piecewise_constant"], "tensorflow.compat.v1.train.piecewise_constant": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.learning_rate_with_decay.learning_rate_fn.<lambda1>": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.learning_rate_with_decay.learning_rate_fn.<lambda2>": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.learning_rate_with_decay.poly_rate_fn": ["tensorflow.cast", "tensorflow.maximum", "tensorflow.compat.v1.where", "tensorflow.constant", "tensorflow.compat.v1.train.polynomial_decay", "<builtin>.int", "tensorflow.subtract"], "tensorflow.compat.v1.train.polynomial_decay": [], "tensorflow.compat.v1.where": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.resnet_model_fn": ["tensorflow.contrib.opt.LARSOptimizer", "tensorflow.nn.in_top_k", "tensorflow.group", "tensorflow.one_hot", "tensorflow.cast", "tensorflow.estimator.EstimatorSpec", "mlperf_compliance.tf_mlperf_log.sum_metric", "tensorflow.compat.v1.trainable_variables", "tensorflow.compat.v1.metrics.mean", "tensorflow.add_n", "tensorflow.compat.v1.losses.softmax_cross_entropy", "tensorflow.compat.v1.summary.scalar", "tensorflow.shape", "mlperf_compliance.mlperf_log.resnet_print", "tensorflow.nn.l2_loss", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.compat.v1.summary.image", "tensorflow.nn.softmax", "tensorflow.compat.v1.train.MomentumOptimizer", "tensorflow.compat.v1.get_collection", "tensorflow.estimator.export.PredictOutput", "tensorflow.identity", "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy", "tensorflow.compat.v1.metrics.accuracy", "mlperf_compliance.tf_mlperf_log.log_deferred", "horovod.tensorflow.DistributedOptimizer", "tensorflow.argmax"], "mlperf_compliance.tf_mlperf_log.sum_metric": [], "tensorflow.estimator.export.PredictOutput": [], "tensorflow.compat.v1.losses.softmax_cross_entropy": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.resnet_model_fn.exclude_batch_norm": [], "tensorflow.nn.l2_loss": [], "tensorflow.compat.v1.train.get_or_create_global_step": [], "mlperf_compliance.tf_mlperf_log.log_deferred": [], "tensorflow.contrib.opt.LARSOptimizer": [], "tensorflow.compat.v1.train.MomentumOptimizer": [], "horovod.tensorflow.DistributedOptimizer": [], "tensorflow.compat.v1.metrics.accuracy": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.per_device_batch_size": ["<builtin>.ValueError", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.resnet_main": ["<builtin>.range", "horovod.tensorflow.size", "tensorflow.estimator.Estimator", "mlperf_utils.logs.logger.BenchmarkLogger", "os.path.join", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "mlperf_compliance.mlperf_log.resnet_print", "horovod.tensorflow.rank", "tensorflow.estimator.LoggingTensorHook", "<builtin>.int", "mlperf_utils.misc.model_helpers.past_stop_threshold", "tensorflow.distribute.OneDeviceStrategy", "<builtin>.float", "tensorflow.distribute.MirroredStrategy", "horovod.tensorflow.BroadcastGlobalVariablesHook", "tensorflow.estimator.RunConfig", "mlperf_utils.logs.hooks_helper.get_train_hooks"], "tensorflow.distribute.OneDeviceStrategy": [], "tensorflow.distribute.MirroredStrategy": [], "horovod.tensorflow.BroadcastGlobalVariablesHook": [], "mlperf_utils.logs.hooks_helper.get_train_hooks": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.resnet_main.formatter": ["<builtin>.str"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.resnet_main.input_fn_train": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.per_device_batch_size"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.resnet_main.input_fn_eval": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.per_device_batch_size"], "mlperf_utils.misc.model_helpers.past_stop_threshold": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.ResnetArgParser.__init__": ["mlperf_utils.arg_parsers.parsers.ExportParser", "mlperf_utils.arg_parsers.parsers.PerformanceParser", "mlperf_utils.arg_parsers.parsers.BaseParser", "argparse.ArgumentParser.add_argument", "<builtin>.super", "mlperf_utils.arg_parsers.parsers.BenchmarkParser", "mlperf_utils.arg_parsers.parsers.ImageModelParser"], "mlperf_utils.arg_parsers.parsers.BaseParser": [], "mlperf_utils.arg_parsers.parsers.PerformanceParser": [], "mlperf_utils.arg_parsers.parsers.ImageModelParser": [], "mlperf_utils.arg_parsers.parsers.ExportParser": [], "mlperf_utils.arg_parsers.parsers.BenchmarkParser": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_resnet.resnet_run_loop.ResnetArgParser.parse_args": ["mlperf_utils.arg_parsers.parsers.parse_dtype_info", "<builtin>.super"], "mlperf_utils.arg_parsers.parsers.parse_dtype_info": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.tags": ["<builtin>.set"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance._transformer_tags": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.tf_mlperf_log": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.tf_mlperf_log._example"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.tf_mlperf_log.log_deferred": ["tensorflow.cond", "tensorflow.compat.v1.assign_add", "tensorflow.Variable", "tensorflow.compat.v1.Print", "tensorflow.equal", "tensorflow.zeros", "tensorflow.timestamp", "tensorflow.math.mod"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.tf_mlperf_log.log_deferred.<lambda1>": ["tensorflow.timestamp", "tensorflow.compat.v1.Print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.tf_mlperf_log.log_deferred.<lambda2>": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.tf_mlperf_log.sum_metric": ["tensorflow.identity", "tensorflow.compat.v1.Variable", "tensorflow.zeros", "tensorflow.compat.v1.assign_add"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.tf_mlperf_log._example": ["<builtin>.dict", "<builtin>.range", "<builtin>.print", "tensorflow.compat.v1.Session", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.tf_mlperf_log.log_deferred", "uuid.uuid4", "tensorflow.Variable", "<builtin>.str", "tensorflow.zeros", "tensorflow.compat.v1.assign_add"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance._gnmt_tags": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance._resnet_tags": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance._ssd_tags": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log": ["logging.FileHandler", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log.ncf_print", "os.getenv", "<builtin>.set", "re.compile", "logging.getLogger", "logging.StreamHandler"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log.get_caller": ["inspect.stack", "inspect.getframeinfo", "re.sub"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log._mlperf_print": ["<builtin>.ValueError", "<builtin>.print", "json.dumps", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log.get_caller", "uuid.uuid4", "time.time", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log.gnmt_print": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log.maskrcnn_print": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log.minigo_print": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log.ncf_print": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log.resnet_print": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log.ssd_print": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log.transformer_print": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.mlperf_log._mlperf_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance._maskrcnn_tags": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper._get_shape": ["<builtin>.str"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper._in_out_shape": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper._get_shape"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper.log_max_pool": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper._in_out_shape", "mlperf_compliance.mlperf_log.resnet_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper.log_begin_block": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper._get_shape", "mlperf_compliance.mlperf_log.resnet_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper.log_end_block": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper._get_shape", "mlperf_compliance.mlperf_log.resnet_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper.log_projection": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper._in_out_shape", "mlperf_compliance.mlperf_log.resnet_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper.log_conv2d": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper._in_out_shape", "mlperf_compliance.mlperf_log.resnet_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper.log_batch_norm": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.resnet_log_helper._get_shape", "mlperf_compliance.mlperf_log.resnet_print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.test_tag_set": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.test_tag_set.check_format", "re.compile", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.test_tag_set.check_collisions"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.test_tag_set.extract_tags": ["<builtin>.dir", "<builtin>.isinstance", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.test_tag_set.check_collisions": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.test_tag_set.extract_tags", "collections.defaultdict", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance.test_tag_set.check_format": ["<builtin>.print", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.training.mlperf_compliance._ncf_tags": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.datasets": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.datasets.Dataset.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.datasets.Dataset.tf_record_pattern": ["os.path.join"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.datasets.Dataset.reader": ["tensorflow.compat.v1.TFRecordReader"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.datasets.Dataset": ["abc.abstractmethod"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.datasets.Dataset.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.datasets.Dataset.num_examples_per_epoch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.datasets.Dataset.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.datasets.ImagenetData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.datasets.ImagenetData.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.datasets.ImagenetData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.datasets.ImagenetData.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference_weight_sharing": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference_weight_sharing.eval_classifier_optimized_graph.run", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference_weight_sharing.eval_classifier_optimized_graph.__init__"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference_weight_sharing.eval_classifier_optimized_graph.__init__": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference_weight_sharing.eval_classifier_optimized_graph.validate_args"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference_weight_sharing.eval_classifier_optimized_graph.validate_args": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference_weight_sharing.eval_classifier_optimized_graph.write_results_output": ["<builtin>.zip", "<builtin>.open", "numpy.argmax"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference_weight_sharing.eval_classifier_optimized_graph.run": ["<builtin>.range", "tensorflow.cast", "threading.Thread", "tensorflow.Graph", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "tensorflow.compat.v1.gfile.FastGFile", "tensorflow.nn.in_top_k", "tensorflow.reduce_sum", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.GraphDef", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference_weight_sharing.eval_classifier_optimized_graph.write_results_output", "tensorflow.import_graph_def", "time.time", "tensorflow.constant", "tensorflow.random.uniform"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference_weight_sharing.eval_classifier_optimized_graph.run.run_model": ["<builtin>.print", "numpy.random.uniform", "time.time"], "threading.Thread": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.__init__", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.run"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.__init__": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.validate_args"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.validate_args": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.write_results_output": ["<builtin>.zip", "<builtin>.open", "numpy.argmax"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.run": ["tensorflow.cast", "tensorflow.Graph", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "tensorflow.compat.v1.gfile.FastGFile", "tensorflow.nn.in_top_k", "datasets.ImagenetData", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.GraphDef", "tensorflow.reduce_sum", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.write_results_output", "tensorflow.import_graph_def", "time.time", "tensorflow.constant", "<builtin>.open", "tensorflow.random.uniform"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.preprocessing.parse_example_proto": ["tensorflow.cast", "tensorflow.io.FixedLenFeature", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.preprocessing.eval_image": ["tensorflow.cond", "tensorflow.broadcast_to", "tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.image.central_crop", "tensorflow.less", "tensorflow.squeeze", "tensorflow.image.crop_to_bounding_box", "tensorflow.image.convert_image_dtype", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.preprocessing.eval_image.<lambda1>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.preprocessing.eval_image.<lambda2>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "tensorflow.broadcast_to": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.preprocessing.RecordInputImagePreprocessor.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.preprocessing.RecordInputImagePreprocessor.parse_and_preprocess": ["tensorflow.image.decode_jpeg", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.preprocessing.eval_image", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.preprocessing.parse_example_proto"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.inference.preprocessing.RecordInputImagePreprocessor.minibatch": ["tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.data.TFRecordDataset.list_files", "<builtin>.min", "tensorflow.python.data.experimental.map_and_batch", "tensorflow.python.data.experimental.parallel_interleave", "tensorflow.reshape", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.platform.gfile.Glob"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing_benchmark": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing_benchmark.parse_example_proto": ["tensorflow.cast", "tensorflow.io.FixedLenFeature", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing_benchmark.eval_image": ["tensorflow.cond", "tensorflow.broadcast_to", "tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.image.central_crop", "tensorflow.less", "tensorflow.squeeze", "tensorflow.image.crop_to_bounding_box", "tensorflow.image.convert_image_dtype", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing_benchmark.eval_image.<lambda1>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing_benchmark.eval_image.<lambda2>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing_benchmark.RecordInputImagePreprocessor.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing_benchmark.RecordInputImagePreprocessor.parse_and_preprocess": ["tensorflow.image.decode_jpeg", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing_benchmark.parse_example_proto", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing_benchmark.eval_image"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing_benchmark.RecordInputImagePreprocessor.minibatch": ["tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.data.TFRecordDataset.list_files", "<builtin>.min", "tensorflow.python.data.experimental.map_and_batch", "tensorflow.python.data.experimental.parallel_interleave", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.platform.gfile.Glob"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.benchmark": ["<builtin>.range", "tensorflow.Graph", "sys.exit", "datasets.ImagenetData", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.compat.v1.global_variables_initializer", "tensorflow.compat.v1.GraphDef", "tensorflow.compat.v1.Session", "tensorflow.import_graph_def", "time.time", "<builtin>.open", "tensorflow.random.uniform", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.Dataset.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.Dataset.tf_record_pattern": ["os.path.join"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.Dataset.reader": ["tensorflow.compat.v1.TFRecordReader"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.Dataset.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.Dataset": ["abc.abstractmethod"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.Dataset.num_examples_per_epoch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.Dataset.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.Dataset.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.Dataset.queue_runner_required": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.Dataset.use_synthetic_gpu_images": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.ImagenetData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.ImagenetData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.datasets.ImagenetData.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.parse_example_proto": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.io.FixedLenFeature", "tensorflow.transpose", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.decode_jpeg": ["tensorflow.image.decode_jpeg", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.eval_image": ["tensorflow.cond", "tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.slice", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.less", "tensorflow.compat.v1.summary.image", "tensorflow.image.crop_to_bounding_box", "tensorflow.image.sample_distorted_bounding_box", "cnn_util.tensorflow_version"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.eval_image.<lambda1>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.eval_image.<lambda2>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.distort_image": ["tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.slice", "tensorflow.image.random_flip_left_right", "tensorflow.image.resize", "tensorflow.shape", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.distort_color", "tensorflow.compat.v1.summary.image", "tensorflow.image.sample_distorted_bounding_box", "tensorflow.image.convert_image_dtype", "tensorflow.image.draw_bounding_boxes", "cnn_util.tensorflow_version"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.distort_color": ["tensorflow.compat.v1.name_scope", "tensorflow.clip_by_value", "tensorflow.image.random_saturation", "tensorflow.image.random_brightness", "tensorflow.image.random_contrast", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.ImagePreprocessor.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.ImagePreprocessor.preprocess": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.distort_image", "tensorflow.image.decode_jpeg", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.eval_image"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.ImagePreprocessor.minibatch": ["<builtin>.range", "tensorflow.cast", "random.randint", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.ImagePreprocessor.preprocess", "tensorflow.compat.v1.name_scope", "six.moves.xrange", "tensorflow.python.ops.data_flow_ops.RecordInput", "tensorflow.parallel_stack", "tensorflow.split", "tensorflow.concat", "tensorflow.reshape", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.preprocessing.parse_example_proto"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.cnn_util": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.cnn_util.tensorflow_version_tuple": ["<builtin>.int", "tensorflow.__version__.split"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.cnn_util.tensorflow_version": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.cnn_util.tensorflow_version_tuple"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.generate_calibration_data": ["tensorflow.nn.in_top_k", "tensorflow.reduce_sum", "datasets.ImagenetData", "<builtin>.print", "tensorflow.cast", "tensorflow.io.TFRecordWriter", "collections.namedtuple", "tensorflow.constant", "<builtin>.sorted", "<builtin>.range", "<builtin>.len", "tensorflow.compat.v1.ConfigProto", "argparse.ArgumentParser", "preprocessing.ImagePreprocessor", "numpy.where", "operator.attrgetter", "tensorflow.compat.v1.Session", "sys.exit", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.generate_calibration_data.load_graph"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet50v1_5.int8.generate_calibration_data.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.benchmark": ["sys.stdout.flush", "<builtin>.range", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.benchmark.load_graph", "sys.exit", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "time.time", "tensorflow.compat.v1.Session", "argparse.ArgumentParser", "tensorflow.random.truncated_normal"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.benchmark.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "tensorflow.random.truncated_normal": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.parse_example_proto": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.io.FixedLenFeature", "tensorflow.transpose", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.resize_method_0"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.lookup": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.resize_method_0": ["<builtin>.len", "tensorflow.python.layers.utils.smart_cond"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.resize_method_0.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.lookup"], "tensorflow.python.layers.utils.smart_cond": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.resize_method_1": ["<builtin>.len", "tensorflow.python.layers.utils.smart_cond"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.resize_method_1.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.resize_method_2": ["<builtin>.len", "tensorflow.python.layers.utils.smart_cond"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.resize_method_2.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.resize_method_2.<lambda2>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.decode_jpeg": ["tensorflow.image.decode_jpeg", "tensorflow.image.convert_image_dtype", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.preprocess_for_eval": ["tensorflow.expand_dims", "tensorflow.compat.v1.image.resize_bilinear", "tensorflow.compat.v1.name_scope", "tensorflow.image.central_crop", "tensorflow.squeeze", "tensorflow.image.convert_image_dtype", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.apply_with_random_selector": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.preprocess_for_train.<lambda1>", "tensorflow.python.ops.control_flow_ops.merge", "tensorflow.python.ops.control_flow_ops.switch", "tensorflow.equal", "tensorflow.random.uniform", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.preprocess_for_train.<lambda2>"], "tensorflow.python.ops.control_flow_ops.switch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.preprocess_for_train.<lambda2>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.distort_color"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.preprocess_for_train.<lambda1>": ["tensorflow.image.resize"], "tensorflow.python.ops.control_flow_ops.merge": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.distort_color": ["tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.clip_by_value", "tensorflow.image.random_saturation", "tensorflow.image.random_brightness", "tensorflow.image.random_contrast", "tensorflow.python.layers.utils.smart_cond", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.distorted_bounding_box_crop": ["tensorflow.image.sample_distorted_bounding_box", "tensorflow.shape", "tensorflow.slice", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.preprocess_for_train": ["tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.image.random_flip_left_right", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.distorted_bounding_box_crop", "tensorflow.compat.v1.summary.image", "tensorflow.image.convert_image_dtype", "tensorflow.constant", "tensorflow.image.draw_bounding_boxes", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.apply_with_random_selector", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.distort_color.distort_fn_0": ["tensorflow.image.random_saturation", "tensorflow.image.random_contrast", "tensorflow.image.random_brightness", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.distort_color.distort_fn_1": ["tensorflow.image.random_saturation", "tensorflow.image.random_contrast", "tensorflow.image.random_brightness", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.RecordInputImagePreprocessor.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.RecordInputImagePreprocessor.center_crop": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.RecordInputImagePreprocessor.image_preprocess": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.preprocess_for_eval", "tensorflow.image.decode_jpeg", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.RecordInputImagePreprocessor.center_crop", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.preprocess_for_train", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.RecordInputImagePreprocessor.parse_and_preprocess": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.RecordInputImagePreprocessor.image_preprocess", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.parse_example_proto"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.RecordInputImagePreprocessor.minibatch": ["<builtin>.range", "tensorflow.cast", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_preprocessing.RecordInputImagePreprocessor.parse_and_preprocess", "tensorflow.python.data.experimental.ops.batching.map_and_batch", "tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.data.TFRecordDataset.list_files", "tensorflow.data.Dataset.zip", "six.moves.xrange", "tensorflow.python.data.experimental.ops.interleave_ops.parallel_interleave", "tensorflow.data.Dataset.range", "tensorflow.python.ops.data_flow_ops.RecordInput", "tensorflow.parallel_stack", "tensorflow.split", "tensorflow.concat", "tensorflow.reshape", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.platform.gfile.Glob"], "tensorflow.python.data.experimental.ops.interleave_ops.parallel_interleave": [], "tensorflow.data.Dataset.range": [], "tensorflow.data.Dataset.zip": [], "tensorflow.python.data.experimental.ops.batching.map_and_batch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.eval_image_classifier": ["tensorflow.app.flags.DEFINE_integer", "tensorflow.app.flags.DEFINE_string", "tensorflow.app.run", "tensorflow.app.flags.DEFINE_float"], "tensorflow.app.flags.DEFINE_integer": [], "tensorflow.app.flags.DEFINE_string": [], "tensorflow.app.flags.DEFINE_float": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.eval_image_classifier._LoggerHook.begin": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.eval_image_classifier._LoggerHook.before_run": ["time.time"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.eval_image_classifier._LoggerHook.after_run": ["<builtin>.print", "time.time", "datetime.datetime.now"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.eval_image_classifier._LoggerHook.end": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.eval_image_classifier.main": ["tensorflow.contrib.slim.metrics.streaming_recall_at_k", "<builtin>.print", "tensorflow.logging.set_verbosity", "tensorflow.gfile.IsDirectory", "preprocessing.preprocessing_factory.get_preprocessing", "tensorflow.ConfigProto", "tensorflow.train.ExponentialMovingAverage", "tensorflow.train.latest_checkpoint", "tensorflow.logging.info", "tensorflow.contrib.slim.get_variables_to_restore", "tensorflow.contrib.slim.metrics.streaming_accuracy", "tensorflow.contrib.slim.dataset_data_provider.DatasetDataProvider", "tensorflow.constant", "math.ceil", "<builtin>.float", "tensorflow.contrib.slim.get_or_create_global_step", "tensorflow.summary.scalar", "nets.nets_factory.get_network_fn", "tensorflow.add_to_collection", "tensorflow.contrib.slim.evaluation.evaluate_once", "datasets.dataset_factory.get_dataset", "tensorflow.Print", "tensorflow.random.uniform", "<builtin>.list", "tensorflow.Graph", "tensorflow.train.batch", "tensorflow.contrib.slim.metrics.aggregate_metric_map", "tensorflow.contrib.slim.get_model_variables", "tensorflow.argmax"], "tensorflow.contrib.slim.get_or_create_global_step": [], "datasets.dataset_factory.get_dataset": [], "nets.nets_factory.get_network_fn": [], "tensorflow.contrib.slim.dataset_data_provider.DatasetDataProvider": [], "preprocessing.preprocessing_factory.get_preprocessing": [], "tensorflow.train.batch": [], "tensorflow.train.ExponentialMovingAverage": [], "tensorflow.contrib.slim.get_model_variables": [], "tensorflow.contrib.slim.get_variables_to_restore": [], "tensorflow.contrib.slim.metrics.streaming_accuracy": [], "tensorflow.contrib.slim.metrics.streaming_recall_at_k": [], "tensorflow.contrib.slim.metrics.aggregate_metric_map": [], "tensorflow.summary.scalar": [], "tensorflow.Print": [], "tensorflow.add_to_collection": [], "tensorflow.gfile.IsDirectory": [], "tensorflow.train.latest_checkpoint": [], "tensorflow.contrib.slim.evaluation.evaluate_once": [], "tensorflow.app.run": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.create_dataset": ["<builtin>.ValueError", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Dataset.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Dataset.tf_record_pattern": ["os.path.join"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Dataset.reader": ["tensorflow.TFRecordReader"], "tensorflow.TFRecordReader": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Dataset.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Dataset": ["abc.abstractmethod"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Dataset.num_examples_per_epoch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Dataset.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Dataset.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Dataset.queue_runner_required": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Dataset.use_synthetic_gpu_images": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.ImagenetData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.ImagenetData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.ImagenetData.get_image_preprocessor": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Dataset.use_synthetic_gpu_images"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Cifar10Data.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Cifar10Data.read_data_files": ["six.moves.cPickle.load", "numpy.concatenate", "os.path.join", "<builtin>.ValueError", "six.moves.xrange", "tensorflow.python.platform.gfile.Open"], "tensorflow.python.platform.gfile.Open": [], "six.moves.cPickle.load": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Cifar10Data.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Cifar10Data.get_image_preprocessor": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy_datasets.Dataset.use_synthetic_gpu_images"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.cnn_util": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.cnn_util.tensorflow_version_tuple": ["<builtin>.int", "tensorflow.__version__.split"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.cnn_util.tensorflow_version": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.cnn_util.tensorflow_version_tuple"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy": ["tensorflow.cast", "tensorflow.nn.in_top_k", "tensorflow.reduce_sum", "sys.exit", "tensorflow.compat.v1.ConfigProto", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy.load_graph", "<builtin>.print", "tensorflow.compat.v1.get_default_graph", "accuracy_datasets.ImagenetData", "time.time", "tensorflow.constant", "tensorflow.compat.v1.Session", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.accuracy.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "accuracy_datasets.ImagenetData": [], "tensorflow.compat.v1.get_default_graph": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.benchmark": ["sys.stdout.flush", "<builtin>.range", "sys.exit", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "time.time", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.benchmark.load_graph", "tensorflow.compat.v1.Session", "argparse.ArgumentParser", "tensorflow.random.truncated_normal"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.benchmark.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.create_dataset": ["<builtin>.ValueError", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Dataset.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Dataset.tf_record_pattern": ["os.path.join"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Dataset.reader": ["tensorflow.compat.v1.TFRecordReader"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Dataset.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Dataset": ["abc.abstractmethod"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Dataset.num_examples_per_epoch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Dataset.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Dataset.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Dataset.queue_runner_required": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Dataset.use_synthetic_gpu_images": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.ImagenetData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.ImagenetData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.ImagenetData.get_image_preprocessor": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Dataset.use_synthetic_gpu_images"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Cifar10Data.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Cifar10Data.read_data_files": ["six.moves.cPickle.load", "numpy.concatenate", "os.path.join", "<builtin>.ValueError", "six.moves.xrange", "tensorflow.python.platform.gfile.Open"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Cifar10Data.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Cifar10Data.get_image_preprocessor": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.datasets.Dataset.use_synthetic_gpu_images"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.parse_example_proto": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.io.FixedLenFeature", "tensorflow.transpose", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.resize_method_0"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.lookup": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.resize_method_0": ["<builtin>.len", "tensorflow.python.layers.utils.smart_cond"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.resize_method_0.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.resize_method_1": ["<builtin>.len", "tensorflow.python.layers.utils.smart_cond"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.resize_method_1.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.resize_method_2": ["<builtin>.len", "tensorflow.python.layers.utils.smart_cond"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.resize_method_2.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.resize_method_2.<lambda2>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.decode_jpeg": ["tensorflow.image.decode_jpeg", "tensorflow.image.convert_image_dtype", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.preprocess_for_eval": ["tensorflow.expand_dims", "tensorflow.compat.v1.image.resize_bilinear", "tensorflow.compat.v1.name_scope", "tensorflow.image.central_crop", "tensorflow.squeeze", "tensorflow.image.convert_image_dtype", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.apply_with_random_selector": ["<builtin>.range", "tensorflow.python.ops.control_flow_ops.merge", "tensorflow.python.ops.control_flow_ops.switch", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.preprocess_for_train.<lambda2>", "tensorflow.equal", "tensorflow.random.uniform", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.preprocess_for_train.<lambda1>"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.preprocess_for_train.<lambda1>": ["tensorflow.image.resize"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.preprocess_for_train.<lambda2>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.distort_color"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.distort_color": ["tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.clip_by_value", "tensorflow.image.random_saturation", "tensorflow.image.random_brightness", "tensorflow.image.random_contrast", "tensorflow.python.layers.utils.smart_cond", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.distorted_bounding_box_crop": ["tensorflow.image.sample_distorted_bounding_box", "tensorflow.shape", "tensorflow.slice", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.preprocess_for_train": ["tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.image.random_flip_left_right", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.distorted_bounding_box_crop", "tensorflow.compat.v1.summary.image", "tensorflow.image.convert_image_dtype", "tensorflow.constant", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.apply_with_random_selector", "tensorflow.image.draw_bounding_boxes", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.distort_color.distort_fn_0": ["tensorflow.image.random_saturation", "tensorflow.image.random_contrast", "tensorflow.image.random_brightness", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.distort_color.distort_fn_1": ["tensorflow.image.random_saturation", "tensorflow.image.random_contrast", "tensorflow.image.random_brightness", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.RecordInputImagePreprocessor.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.RecordInputImagePreprocessor.center_crop": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.RecordInputImagePreprocessor.image_preprocess": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.preprocess_for_eval", "tensorflow.image.decode_jpeg", "<builtin>.int", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.RecordInputImagePreprocessor.center_crop", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.preprocess_for_train"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.RecordInputImagePreprocessor.parse_and_preprocess": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.RecordInputImagePreprocessor.image_preprocess", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.parse_example_proto"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.RecordInputImagePreprocessor.minibatch": ["<builtin>.range", "tensorflow.cast", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.preprocessing.RecordInputImagePreprocessor.parse_and_preprocess", "tensorflow.python.data.experimental.ops.batching.map_and_batch", "tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.data.TFRecordDataset.list_files", "tensorflow.data.Dataset.zip", "six.moves.xrange", "tensorflow.python.data.experimental.ops.interleave_ops.parallel_interleave", "tensorflow.data.Dataset.range", "tensorflow.python.ops.data_flow_ops.RecordInput", "tensorflow.parallel_stack", "tensorflow.split", "tensorflow.concat", "tensorflow.reshape", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.platform.gfile.Glob"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.cnn_util": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.cnn_util.tensorflow_version_tuple": ["<builtin>.int", "tensorflow.__version__.split"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.cnn_util.tensorflow_version": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.cnn_util.tensorflow_version_tuple"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.accuracy": ["tensorflow.cast", "tensorflow.nn.in_top_k", "tensorflow.reduce_sum", "sys.exit", "datasets.ImagenetData", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.compat.v1.get_default_graph", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.accuracy.load_graph", "time.time", "tensorflow.constant", "tensorflow.compat.v1.Session", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.accuracy.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.calibration": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.calibration.load_graph", "tensorflow.nn.in_top_k", "tensorflow.reduce_sum", "sys.exit", "datasets.ImagenetData", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.compat.v1.get_default_graph", "time.time", "tensorflow.constant", "tensorflow.compat.v1.Session", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.mobilenet_v1.inference.int8.calibration.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.parse_example_proto": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.io.FixedLenFeature", "tensorflow.transpose", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.decode_jpeg": ["tensorflow.image.decode_jpeg", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.eval_image": ["tensorflow.cond", "tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.slice", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.less", "tensorflow.compat.v1.summary.image", "tensorflow.image.crop_to_bounding_box", "tensorflow.image.sample_distorted_bounding_box", "cnn_util.tensorflow_version"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.eval_image.<lambda1>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.eval_image.<lambda2>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.distort_image": ["tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.slice", "tensorflow.image.random_flip_left_right", "tensorflow.image.resize", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.distort_color", "tensorflow.shape", "tensorflow.compat.v1.summary.image", "tensorflow.image.sample_distorted_bounding_box", "tensorflow.image.convert_image_dtype", "tensorflow.image.draw_bounding_boxes", "cnn_util.tensorflow_version"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.distort_color": ["tensorflow.compat.v1.name_scope", "tensorflow.clip_by_value", "tensorflow.image.random_saturation", "tensorflow.image.random_brightness", "tensorflow.image.random_contrast", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.ImagePreprocessor.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.ImagePreprocessor.preprocess": ["densenet_preprocessing.preprocess_image", "tensorflow.image.decode_jpeg", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.distort_image"], "densenet_preprocessing.preprocess_image": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.ImagePreprocessor.minibatch": ["<builtin>.range", "tensorflow.cast", "random.randint", "tensorflow.compat.v1.name_scope", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.ImagePreprocessor.preprocess", "six.moves.xrange", "tensorflow.python.ops.data_flow_ops.RecordInput", "tensorflow.parallel_stack", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.image_preprocessing.parse_example_proto", "tensorflow.split", "tensorflow.concat", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.benchmark": ["sys.stdout.flush", "<builtin>.range", "tensorflow.Graph", "sys.exit", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig", "time.time", "tensorflow.compat.v1.Session", "argparse.ArgumentParser", "tensorflow.random.truncated_normal", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.benchmark.load_graph"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.benchmark.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.Dataset.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.Dataset.tf_record_pattern": ["os.path.join"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.Dataset.reader": ["tensorflow.TFRecordReader"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.Dataset": ["abc.abstractmethod"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.Dataset.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.Dataset.num_examples_per_epoch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.Dataset.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.FlowersData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.FlowersData.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.FlowersData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.ImagenetData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.ImagenetData.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.dataset.ImagenetData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.cnn_util": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.cnn_util.tensorflow_version_tuple": ["<builtin>.int", "tensorflow.__version__.split"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.cnn_util.tensorflow_version": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.cnn_util.tensorflow_version_tuple"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.accuracy": ["tensorflow.Graph", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.accuracy.load_graph", "dataset.num_examples_per_epoch", "sys.exit", "tensorflow.compat.v1.ConfigProto", "tensorflow.argmax", "<builtin>.print", "tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig", "image_preprocessing.ImagePreprocessor", "tensorflow.squeeze", "numpy.count_nonzero", "time.time", "tensorflow.reshape", "tensorflow.compat.v1.Session", "argparse.ArgumentParser", "dataset.ImagenetData"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.accuracy.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "dataset.ImagenetData": [], "image_preprocessing.ImagePreprocessor": [], "dataset.num_examples_per_epoch": [], "numpy.count_nonzero": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._crop": ["tensorflow.cast", "tensorflow.logical_and", "tensorflow.slice", "tensorflow.rank", "tensorflow.shape", "tensorflow.stack", "tensorflow.Assert", "tensorflow.greater_equal", "tensorflow.control_dependencies", "tensorflow.reshape", "tensorflow.equal"], "tensorflow.rank": [], "tensorflow.greater_equal": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._random_crop": ["<builtin>.range", "tensorflow.logical_and", "<builtin>.len", "tensorflow.random.uniform", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._crop", "tensorflow.rank", "tensorflow.shape", "tensorflow.Assert", "tensorflow.greater_equal", "tensorflow.control_dependencies", "tensorflow.reshape", "tensorflow.equal"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._central_crop": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._crop", "tensorflow.shape"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._mean_image_subtraction": ["<builtin>.range", "<builtin>.len", "<builtin>.ValueError", "tensorflow.split", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._smallest_size_at_least": ["tensorflow.cast", "tensorflow.cond", "tensorflow.greater", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._smallest_size_at_least.<lambda1>": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._smallest_size_at_least.<lambda2>": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._aspect_preserving_resize": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._smallest_size_at_least", "tensorflow.expand_dims", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.convert_to_tensor", "tensorflow.squeeze"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing.preprocess_for_train": ["tensorflow.cast", "tensorflow.image.random_flip_left_right", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._random_crop", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._mean_image_subtraction", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._aspect_preserving_resize", "tensorflow.random.uniform"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing.preprocess_for_eval": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._aspect_preserving_resize", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._mean_image_subtraction", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing._central_crop"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing.preprocess_image": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing.preprocess_for_eval", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.densenet169.inference.fp32.densenet_preprocessing.preprocess_for_train"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.datasets": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.datasets.Dataset.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.datasets.Dataset.tf_record_pattern": ["os.path.join"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.datasets.Dataset.reader": ["tensorflow.compat.v1.TFRecordReader"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.datasets.Dataset": ["abc.abstractmethod"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.datasets.Dataset.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.datasets.Dataset.num_examples_per_epoch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.datasets.Dataset.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.datasets.ImagenetData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.datasets.ImagenetData.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.datasets.ImagenetData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.datasets.ImagenetData.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.eval_image_classifier_inference": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.__init__", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.run"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.__init__": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.validate_args"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.validate_args": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.eval_image_classifier_inference.eval_classifier_optimized_graph.run": ["tensorflow.cast", "tensorflow.Graph", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "tensorflow.compat.v1.gfile.FastGFile", "tensorflow.nn.in_top_k", "datasets.ImagenetData", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.GraphDef", "tensorflow.reduce_sum", "tensorflow.import_graph_def", "time.time", "tensorflow.constant", "tensorflow.random.uniform"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._crop": ["tensorflow.cast", "tensorflow.logical_and", "tensorflow.slice", "tensorflow.rank", "tensorflow.shape", "tensorflow.stack", "tensorflow.Assert", "tensorflow.greater_equal", "tensorflow.control_dependencies", "tensorflow.reshape", "tensorflow.equal"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._random_crop": ["<builtin>.range", "tensorflow.logical_and", "<builtin>.len", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._crop", "tensorflow.random.uniform", "<builtin>.ValueError", "tensorflow.rank", "tensorflow.shape", "tensorflow.Assert", "tensorflow.greater_equal", "tensorflow.control_dependencies", "tensorflow.reshape", "tensorflow.equal"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._central_crop": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._crop", "tensorflow.shape"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._mean_image_subtraction": ["<builtin>.range", "<builtin>.len", "<builtin>.ValueError", "tensorflow.split", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._smallest_size_at_least": ["tensorflow.cast", "tensorflow.cond", "tensorflow.math.rint", "tensorflow.convert_to_tensor", "tensorflow.greater"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._smallest_size_at_least.<lambda1>": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._smallest_size_at_least.<lambda2>": [], "tensorflow.math.rint": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._aspect_preserving_resize": ["tensorflow.expand_dims", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.convert_to_tensor", "tensorflow.squeeze", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._smallest_size_at_least"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing.preprocess_for_train": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._random_crop", "tensorflow.image.random_flip_left_right", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._mean_image_subtraction", "tensorflow.random.uniform", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._aspect_preserving_resize"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing.preprocess_for_eval": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._mean_image_subtraction", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._aspect_preserving_resize", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing._central_crop"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing.preprocess_image": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing.preprocess_for_train", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.vgg_preprocessing.preprocess_for_eval"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.preprocessing.parse_example_proto": ["tensorflow.cast", "tensorflow.io.FixedLenFeature", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.preprocessing.eval_image": ["tensorflow.cond", "tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.image.central_crop", "tensorflow.less", "tensorflow.squeeze", "tensorflow.image.crop_to_bounding_box", "tensorflow.image.convert_image_dtype", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.preprocessing.eval_image.<lambda1>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.preprocessing.eval_image.<lambda2>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.preprocessing.RecordInputImagePreprocessor.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.preprocessing.RecordInputImagePreprocessor.parse_and_preprocess": ["tensorflow.image.decode_jpeg", "vgg_preprocessing.preprocess_image", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.preprocessing.parse_example_proto"], "vgg_preprocessing.preprocess_image": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.inference.preprocessing.RecordInputImagePreprocessor.minibatch": ["tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.data.TFRecordDataset.list_files", "tensorflow.python.data.experimental.map_and_batch", "tensorflow.python.data.experimental.parallel_interleave", "tensorflow.reshape", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.platform.gfile.Glob"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.Dataset.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.Dataset.tf_record_pattern": ["os.path.join"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.Dataset.reader": ["tensorflow.compat.v1.TFRecordReader"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.Dataset": ["abc.abstractmethod"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.Dataset.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.Dataset.num_examples_per_epoch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.Dataset.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.FlowersData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.FlowersData.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.FlowersData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.ImagenetData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.ImagenetData.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.datasets.ImagenetData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._crop": ["tensorflow.cast", "tensorflow.logical_and", "tensorflow.slice", "tensorflow.rank", "tensorflow.shape", "tensorflow.stack", "tensorflow.Assert", "tensorflow.greater_equal", "tensorflow.control_dependencies", "tensorflow.reshape", "tensorflow.equal"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._random_crop": ["<builtin>.range", "tensorflow.logical_and", "<builtin>.len", "tensorflow.random.uniform", "<builtin>.ValueError", "tensorflow.rank", "tensorflow.shape", "tensorflow.Assert", "tensorflow.greater_equal", "tensorflow.control_dependencies", "tensorflow.reshape", "tensorflow.equal", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._crop"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._central_crop": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._crop", "tensorflow.shape"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._mean_image_subtraction": ["<builtin>.range", "<builtin>.len", "<builtin>.ValueError", "tensorflow.split", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._smallest_size_at_least": ["tensorflow.cast", "tensorflow.cond", "tensorflow.math.rint", "tensorflow.convert_to_tensor", "tensorflow.greater"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._smallest_size_at_least.<lambda1>": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._smallest_size_at_least.<lambda2>": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._aspect_preserving_resize": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._smallest_size_at_least", "tensorflow.expand_dims", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.convert_to_tensor", "tensorflow.squeeze"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing.preprocess_for_train": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._aspect_preserving_resize", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._mean_image_subtraction", "tensorflow.image.random_flip_left_right", "tensorflow.random.uniform", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._random_crop"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing.preprocess_for_eval": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._central_crop", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._mean_image_subtraction", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing._aspect_preserving_resize"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing.preprocess_image": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing.preprocess_for_eval", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.vgg_preprocessing.preprocess_for_train"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.parse_example_proto": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.io.FixedLenFeature", "tensorflow.transpose", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.decode_jpeg": ["tensorflow.image.decode_jpeg", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.eval_image": ["tensorflow.cond", "tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.slice", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.less", "tensorflow.compat.v1.summary.image", "tensorflow.image.crop_to_bounding_box", "tensorflow.image.sample_distorted_bounding_box", "cnn_util.tensorflow_version"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.eval_image.<lambda1>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.eval_image.<lambda2>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.distort_image": ["tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.slice", "tensorflow.image.random_flip_left_right", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.compat.v1.summary.image", "tensorflow.image.sample_distorted_bounding_box", "tensorflow.image.convert_image_dtype", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.distort_color", "tensorflow.image.draw_bounding_boxes", "cnn_util.tensorflow_version"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.distort_color": ["tensorflow.compat.v1.name_scope", "tensorflow.clip_by_value", "tensorflow.image.random_saturation", "tensorflow.image.random_brightness", "tensorflow.image.random_contrast", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.ImagePreprocessor.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.ImagePreprocessor.preprocess": ["tensorflow.image.decode_jpeg", "vgg_preprocessing.preprocess_image", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.distort_image"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.ImagePreprocessor.minibatch": ["<builtin>.range", "tensorflow.cast", "random.randint", "tensorflow.compat.v1.name_scope", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.parse_example_proto", "six.moves.xrange", "tensorflow.python.ops.data_flow_ops.RecordInput", "tensorflow.parallel_stack", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.preprocessing.ImagePreprocessor.preprocess", "tensorflow.split", "tensorflow.concat", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.cnn_util": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.cnn_util.tensorflow_version_tuple": ["<builtin>.int", "tensorflow.__version__.split"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.cnn_util.tensorflow_version": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.cnn_util.tensorflow_version_tuple"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.calibration": ["tensorflow.cast", "tensorflow.nn.in_top_k", "tensorflow.reduce_sum", "sys.exit", "datasets.ImagenetData", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.calibration.load_graph", "preprocessing.ImagePreprocessor", "numpy.count_nonzero", "tensorflow.constant", "tensorflow.compat.v1.Session", "argparse.ArgumentParser", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.resnet101.int8.calibration.load_graph": ["tensorflow.Graph", "tensorflow.io.write_graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "tensorflow.io.write_graph": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.benchmark": ["sys.stdout.flush", "<builtin>.range", "tensorflow.Graph", "sys.exit", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.global_variables_initializer", "<builtin>.print", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.benchmark.load_graph", "time.time", "tensorflow.compat.v1.Session", "argparse.ArgumentParser", "tensorflow.random.truncated_normal"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.benchmark.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.create_dataset": ["<builtin>.ValueError", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Dataset.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Dataset.tf_record_pattern": ["os.path.join"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Dataset.reader": ["tensorflow.compat.v1.TFRecordReader"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Dataset.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Dataset": ["abc.abstractmethod"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Dataset.num_examples_per_epoch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Dataset.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Dataset.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Dataset.queue_runner_required": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Dataset.use_synthetic_gpu_images": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.ImagenetData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.ImagenetData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.ImagenetData.get_image_preprocessor": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Dataset.use_synthetic_gpu_images"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Cifar10Data.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Cifar10Data.read_data_files": ["six.moves.cPickle.load", "numpy.concatenate", "os.path.join", "<builtin>.ValueError", "six.moves.xrange", "tensorflow.python.platform.gfile.Open"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Cifar10Data.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Cifar10Data.get_image_preprocessor": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.datasets.Dataset.use_synthetic_gpu_images"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.parse_example_proto": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.io.FixedLenFeature", "tensorflow.transpose", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.resize_method_0"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.lookup": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.resize_method_0": ["<builtin>.len", "tensorflow.python.layers.utils.smart_cond"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.resize_method_0.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.resize_method_1": ["<builtin>.len", "tensorflow.python.layers.utils.smart_cond"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.resize_method_1.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.resize_method_2": ["<builtin>.len", "tensorflow.python.layers.utils.smart_cond"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.resize_method_2.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.resize_method_2.<lambda2>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.decode_jpeg": ["tensorflow.image.decode_jpeg", "tensorflow.image.convert_image_dtype", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.preprocess_for_eval": ["tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.image.resize", "tensorflow.image.central_crop", "tensorflow.squeeze", "tensorflow.image.convert_image_dtype", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.apply_with_random_selector": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.preprocess_for_train.<lambda2>", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.preprocess_for_train.<lambda1>", "tensorflow.python.ops.control_flow_ops.merge", "tensorflow.python.ops.control_flow_ops.switch", "tensorflow.equal", "tensorflow.random.uniform"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.preprocess_for_train.<lambda1>": ["tensorflow.image.resize"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.preprocess_for_train.<lambda2>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.distort_color"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.distort_color": ["tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.clip_by_value", "tensorflow.image.random_saturation", "tensorflow.image.random_brightness", "tensorflow.image.random_contrast", "tensorflow.python.layers.utils.smart_cond", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.distorted_bounding_box_crop": ["tensorflow.image.sample_distorted_bounding_box", "tensorflow.shape", "tensorflow.slice", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.preprocess_for_train": ["tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.distorted_bounding_box_crop", "tensorflow.image.random_flip_left_right", "tensorflow.compat.v1.summary.image", "tensorflow.image.convert_image_dtype", "tensorflow.constant", "tensorflow.image.draw_bounding_boxes", "tensorflow.multiply", "tensorflow.subtract", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.apply_with_random_selector"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.distort_color.distort_fn_0": ["tensorflow.image.random_saturation", "tensorflow.image.random_contrast", "tensorflow.image.random_brightness", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.distort_color.distort_fn_1": ["tensorflow.image.random_saturation", "tensorflow.image.random_contrast", "tensorflow.image.random_brightness", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.RecordInputImagePreprocessor.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.RecordInputImagePreprocessor.image_preprocess": ["tensorflow.image.decode_jpeg", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.preprocess_for_train", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.preprocess_for_eval"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.RecordInputImagePreprocessor.parse_and_preprocess": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.parse_example_proto", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.RecordInputImagePreprocessor.image_preprocess"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.RecordInputImagePreprocessor.minibatch": ["<builtin>.range", "tensorflow.cast", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.preprocessing.RecordInputImagePreprocessor.parse_and_preprocess", "tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.data.TFRecordDataset.list_files", "tensorflow.data.Dataset.zip", "tensorflow.python.data.experimental.map_and_batch", "six.moves.xrange", "tensorflow.data.Dataset.range", "tensorflow.python.ops.data_flow_ops.RecordInput", "tensorflow.parallel_stack", "tensorflow.python.data.experimental.parallel_interleave", "tensorflow.split", "tensorflow.concat", "tensorflow.reshape", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.platform.gfile.Glob"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.cnn_util": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.cnn_util.tensorflow_version_tuple": ["<builtin>.int", "tensorflow.__version__.split"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.cnn_util.tensorflow_version": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.cnn_util.tensorflow_version_tuple"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.accuracy": ["tensorflow.cast", "tensorflow.Graph", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.accuracy.load_graph", "tensorflow.nn.in_top_k", "tensorflow.reduce_sum", "sys.exit", "datasets.ImagenetData", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "time.time", "tensorflow.constant", "tensorflow.compat.v1.Session", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv4.inference.accuracy.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.Dataset.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.Dataset.tf_record_pattern": ["os.path.join"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.Dataset.reader": ["tensorflow.compat.v1.TFRecordReader"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.Dataset.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.Dataset": ["abc.abstractmethod"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.Dataset.num_examples_per_epoch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.Dataset.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.Dataset.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.Dataset.queue_runner_required": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.Dataset.use_synthetic_gpu_images": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.ImagenetData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.ImagenetData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.datasets.ImagenetData.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.eval_image_classifier_inference": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.eval_image_classifier_inference.eval_classifier_optimized_graph.__init__", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.eval_image_classifier_inference.eval_classifier_optimized_graph.run"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.eval_image_classifier_inference.eval_classifier_optimized_graph.__init__": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.eval_image_classifier_inference.eval_classifier_optimized_graph.validate_args"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.eval_image_classifier_inference.eval_classifier_optimized_graph.validate_args": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.eval_image_classifier_inference.eval_classifier_optimized_graph.run": ["tensorflow.cast", "tensorflow.Graph", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "tensorflow.compat.v1.gfile.FastGFile", "tensorflow.nn.in_top_k", "datasets.ImagenetData", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.GraphDef", "tensorflow.reduce_sum", "tensorflow.import_graph_def", "time.time", "tensorflow.constant", "tensorflow.random.uniform"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.preprocessing.parse_example_proto": ["tensorflow.cast", "tensorflow.io.FixedLenFeature", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.preprocessing.eval_image": ["tensorflow.cond", "tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.image.central_crop", "tensorflow.less", "tensorflow.squeeze", "tensorflow.image.crop_to_bounding_box", "tensorflow.image.convert_image_dtype", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.preprocessing.eval_image.<lambda1>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.preprocessing.eval_image.<lambda2>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.preprocessing.RecordInputImagePreprocessor.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.preprocessing.RecordInputImagePreprocessor.parse_and_preprocess": ["tensorflow.image.decode_jpeg", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.preprocessing.parse_example_proto", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.preprocessing.eval_image"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.fp32.preprocessing.RecordInputImagePreprocessor.minibatch": ["tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.data.TFRecordDataset.list_files", "<builtin>.min", "tensorflow.python.data.experimental.map_and_batch", "tensorflow.python.data.experimental.parallel_interleave", "tensorflow.reshape", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.platform.gfile.Glob"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing_benchmark": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing_benchmark.parse_example_proto": ["tensorflow.cast", "tensorflow.io.FixedLenFeature", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing_benchmark.eval_image": ["tensorflow.cond", "tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.image.resize", "tensorflow.shape", "tensorflow.image.central_crop", "tensorflow.less", "tensorflow.squeeze", "tensorflow.image.crop_to_bounding_box", "tensorflow.image.convert_image_dtype", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing_benchmark.eval_image.<lambda1>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing_benchmark.eval_image.<lambda2>": ["tensorflow.image.resize", "tensorflow.convert_to_tensor"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing_benchmark.RecordInputImagePreprocessor.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing_benchmark.RecordInputImagePreprocessor.parse_and_preprocess": ["tensorflow.image.decode_jpeg", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing_benchmark.eval_image", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing_benchmark.parse_example_proto"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing_benchmark.RecordInputImagePreprocessor.minibatch": ["tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.data.TFRecordDataset.list_files", "<builtin>.min", "tensorflow.python.data.experimental.map_and_batch", "tensorflow.python.data.experimental.parallel_interleave", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.platform.gfile.Glob"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.benchmark": ["<builtin>.range", "tensorflow.Graph", "sys.exit", "datasets.ImagenetData", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.compat.v1.global_variables_initializer", "tensorflow.compat.v1.GraphDef", "tensorflow.compat.v1.Session", "tensorflow.import_graph_def", "time.time", "<builtin>.open", "tensorflow.random.uniform", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.Dataset.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.Dataset.tf_record_pattern": ["os.path.join"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.Dataset.reader": ["tensorflow.compat.v1.TFRecordReader"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.Dataset.num_classes": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.Dataset": ["abc.abstractmethod"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.Dataset.num_examples_per_epoch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.Dataset.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.Dataset.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.Dataset.queue_runner_required": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.Dataset.use_synthetic_gpu_images": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.ImagenetData.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.ImagenetData.num_examples_per_epoch": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.datasets.ImagenetData.get_image_preprocessor": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.parse_example_proto": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.io.FixedLenFeature", "tensorflow.transpose", "tensorflow.concat"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.resize_method_0"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.lookup": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.resize_method_0": ["<builtin>.len", "tensorflow.python.layers.utils.smart_cond"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.resize_method_0.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.resize_method_1": ["<builtin>.len", "tensorflow.python.layers.utils.smart_cond"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.resize_method_1.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.resize_method_2": ["<builtin>.len", "tensorflow.python.layers.utils.smart_cond"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.resize_method_2.<lambda1>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.resize_method_2.<lambda2>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.get_image_resize_method.lookup"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.decode_jpeg": ["tensorflow.image.decode_jpeg", "tensorflow.image.convert_image_dtype", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.preprocess_for_eval": ["tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.image.resize", "tensorflow.image.central_crop", "tensorflow.squeeze", "tensorflow.image.convert_image_dtype", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.apply_with_random_selector": ["<builtin>.range", "tensorflow.python.ops.control_flow_ops.merge", "tensorflow.python.ops.control_flow_ops.switch", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.preprocess_for_train.<lambda2>", "tensorflow.equal", "tensorflow.random.uniform", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.preprocess_for_train.<lambda1>"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.preprocess_for_train.<lambda1>": ["tensorflow.image.resize"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.preprocess_for_train.<lambda2>": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.distort_color"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.distort_color": ["tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.clip_by_value", "tensorflow.image.random_saturation", "tensorflow.image.random_brightness", "tensorflow.image.random_contrast", "tensorflow.python.layers.utils.smart_cond", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.distorted_bounding_box_crop": ["tensorflow.image.sample_distorted_bounding_box", "tensorflow.shape", "tensorflow.slice", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.preprocess_for_train": ["tensorflow.expand_dims", "tensorflow.compat.v1.name_scope", "tensorflow.image.random_flip_left_right", "tensorflow.compat.v1.summary.image", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.distorted_bounding_box_crop", "tensorflow.image.convert_image_dtype", "tensorflow.constant", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.apply_with_random_selector", "tensorflow.image.draw_bounding_boxes", "tensorflow.multiply", "tensorflow.subtract"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.distort_color.distort_fn_0": ["tensorflow.image.random_saturation", "tensorflow.image.random_contrast", "tensorflow.image.random_brightness", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.distort_color.distort_fn_1": ["tensorflow.image.random_saturation", "tensorflow.image.random_contrast", "tensorflow.image.random_brightness", "tensorflow.image.random_hue"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.RecordInputImagePreprocessor.__init__": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.RecordInputImagePreprocessor.image_preprocess": ["tensorflow.image.decode_jpeg", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.preprocess_for_train", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.preprocess_for_eval"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.RecordInputImagePreprocessor.parse_and_preprocess": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.RecordInputImagePreprocessor.image_preprocess", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.parse_example_proto"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.RecordInputImagePreprocessor.minibatch": ["<builtin>.range", "tensorflow.cast", "tensorflow.data.experimental.parallel_interleave", "tensorflow.compat.v1.name_scope", "<builtin>.ValueError", "tensorflow.data.TFRecordDataset.list_files", "tensorflow.data.Dataset.zip", "six.moves.xrange", "tensorflow.compat.v1.data.experimental.map_and_batch", "tensorflow.data.Dataset.range", "tensorflow.python.ops.data_flow_ops.RecordInput", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.preprocessing.RecordInputImagePreprocessor.parse_and_preprocess", "tensorflow.parallel_stack", "tensorflow.split", "tensorflow.concat", "tensorflow.reshape", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.platform.gfile.Glob"], "tensorflow.data.experimental.parallel_interleave": [], "tensorflow.compat.v1.data.experimental.map_and_batch": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.cnn_util": [], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.cnn_util.tensorflow_version_tuple": ["<builtin>.int", "tensorflow.__version__.split"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.cnn_util.tensorflow_version": ["...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.cnn_util.tensorflow_version_tuple"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.accuracy": ["tensorflow.cast", "tensorflow.Graph", "tensorflow.nn.in_top_k", "tensorflow.reduce_sum", "sys.exit", "datasets.ImagenetData", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "time.time", "tensorflow.constant", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.accuracy.load_graph", "tensorflow.compat.v1.Session", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.accuracy.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.calibration": ["tensorflow.cast", "tensorflow.nn.in_top_k", "tensorflow.reduce_sum", "sys.exit", "datasets.ImagenetData", "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.calibration.load_graph", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.constant", "tensorflow.compat.v1.Session", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_recognition.tensorflow.inceptionv3.int8.calibration.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "<builtin>.open", "os.path.splitext", "google.protobuf.text_format.Merge"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.presets": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.presets.ClassificationPresetTrain.__init__": ["torchvision.transforms.autoaugment.RandAugment", "torchvision.transforms.autoaugment.AutoAugmentPolicy", "torchvision.transforms.autoaugment.TrivialAugmentWide", "torchvision.transforms.autoaugment.AutoAugment"], "torchvision.transforms.autoaugment.RandAugment": [], "torchvision.transforms.autoaugment.TrivialAugmentWide": [], "torchvision.transforms.autoaugment.AutoAugmentPolicy": [], "torchvision.transforms.autoaugment.AutoAugment": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.presets.ClassificationPresetTrain.__call__": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.presets.ClassificationPresetEval.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.presets.ClassificationPresetEval.__call__": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.hub_help": ["...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.hub_help.main", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.hub_help.main": ["torch.hub.load_state_dict_from_url"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.hub_help.main.<lambda1>": [], "torch.hub.load_state_dict_from_url": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension": ["torch.hub.list", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.main", "<builtin>.sorted", "<builtin>.callable"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.<lambda1>": [], "torch.hub.list": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.main": ["...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.main_worker", "warnings.warn", "torch.cuda.is_available", "torch.multiprocessing.spawn", "<builtin>.print", "torch.cuda.device_count", "torch.manual_seed", "<builtin>.int", "random.seed"], "warnings.warn": [], "torch.multiprocessing.spawn": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.main_worker": ["torch.cuda.is_available", "torch.nn.parallel.DistributedDataParallel", "torchvision.transforms.ToTensor", "<builtin>.print", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.train", "torch.optim.SGD", "torch.hub.load", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.adjust_learning_rate", "intel_extension_for_pytorch.optimize", "intel_extension_for_pytorch.cpu.runtime.CPUPool", "torch.set_flush_denormal", "torch.load", "torchvision.transforms.CenterCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.RandomResizedCrop", "torch.utils.data.distributed.DistributedSampler", "torchvision.transforms.Compose", "torch.cpu.amp.autocast", "torchvision.transforms.Resize", "<builtin>.range", "torch.utils.data.DataLoader", "intel_extension_for_pytorch.cpu.runtime.MultiStreamModule", "os.path.join", "torch.fx.experimental.optimization.fuse", "torch.nn.DataParallel", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.validate", "torchvision.transforms.Normalize", "intel_extension_for_pytorch.quantization.QuantConf", "<builtin>.int", "torch.nn.CrossEntropyLoss", "os.path.isfile", "torch.jit.freeze", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.save_checkpoint", "torch.distributed.init_process_group", "torchvision.datasets.ImageFolder", "torch.jit.trace", "torch.cuda.set_device", "torch.randn", "intel_extension_for_pytorch.quantization.convert", "torch.no_grad", "<builtin>.exit", "<builtin>.max"], "torch.set_flush_denormal": [], "torch.hub.load": [], "torch.cuda.set_device": [], "torch.nn.parallel.DistributedDataParallel": [], "torch.nn.DataParallel": [], "torch.nn.CrossEntropyLoss": [], "torchvision.transforms.Normalize": [], "torchvision.transforms.RandomResizedCrop": [], "torchvision.transforms.RandomHorizontalFlip": [], "torchvision.transforms.ToTensor": [], "torchvision.transforms.Compose": [], "torchvision.datasets.ImageFolder": [], "torch.utils.data.distributed.DistributedSampler": [], "torchvision.transforms.Resize": [], "torchvision.transforms.CenterCrop": [], "torch.fx.experimental.optimization.fuse": [], "torch.randn": [], "intel_extension_for_pytorch.cpu.runtime.CPUPool": [], "intel_extension_for_pytorch.cpu.runtime.MultiStreamModule": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.validate": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.accuracy", "<builtin>.len", "threading.Thread", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.ProgressMeter.__init__", "torch.arange", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.AverageMeter.update", "<builtin>.print", "torch.cat", "<builtin>.enumerate", "torch.fx.experimental.optimization.fuse", "torch.randn", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.AverageMeter.__init__", "time.time", "torch.no_grad", "<builtin>.exit", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.ProgressMeter.display", "torch.cpu.amp.autocast"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.adjust_learning_rate": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.train": ["...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.accuracy", "<builtin>.len", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.ProgressMeter.__init__", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.AverageMeter.update", "<builtin>.print", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.AverageMeter.__init__", "time.time", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.ProgressMeter.display", "torch.cpu.amp.autocast"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.save_checkpoint": ["torch.save", "shutil.copyfile"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.AverageMeter.__init__": ["...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.AverageMeter.reset"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.ProgressMeter.__init__": ["...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.ProgressMeter._get_batch_fmtstr"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.AverageMeter.update": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.accuracy": ["torch.no_grad", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.ProgressMeter.display": ["<builtin>.str", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.run_weights_sharing_model": ["<builtin>.print", "torch.randn", "time.time", "torch.no_grad", "torch.cpu.amp.autocast"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.AverageMeter.reset": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.AverageMeter.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main_runtime_extension.ProgressMeter._get_batch_fmtstr": ["<builtin>.str", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.dataset": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.dataset._get_cache_path": ["os.path.join", "os.path.expanduser", "hashlib.sha1"], "hashlib.sha1": [], "os.path.expanduser": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.dataset.get_transform_params": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.dataset.get_imagenet_test_data_loader": ["utils.mkdir", "torch.utils.data.DataLoader", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.dataset.get_transform_params", "torch.load", "torch.utils.data.SequentialSampler", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.dataset._get_cache_path", "os.path.join", "<builtin>.print", "os.path.exists", "torchvision.datasets.ImageFolder", "presets.ClassificationPresetEval", "utils.save_on_master", "os.path.dirname"], "presets.ClassificationPresetEval": [], "utils.mkdir": [], "utils.save_on_master": [], "torch.utils.data.SequentialSampler": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.SmoothedValue.__init__": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.SmoothedValue.update": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.SmoothedValue.synchronize_between_processes": ["torch.distributed.barrier", "torch.distributed.all_reduce", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.is_dist_avail_and_initialized", "torch.tensor", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.is_dist_avail_and_initialized": ["torch.distributed.is_initialized", "torch.distributed.is_available"], "torch.distributed.all_reduce": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.SmoothedValue.median": ["torch.tensor", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.SmoothedValue.avg": ["torch.tensor", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.SmoothedValue.global_avg": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.SmoothedValue.max": ["...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.SmoothedValue.max"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.SmoothedValue.value": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.SmoothedValue.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.MetricLogger.__init__": ["collections.defaultdict"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.MetricLogger.update": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.MetricLogger.__getattr__": ["<builtin>.AttributeError", "<builtin>.type"], "<builtin>.AttributeError": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.MetricLogger.__str__": ["<builtin>.str"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.MetricLogger.synchronize_between_processes": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.MetricLogger.add_meter": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.MetricLogger.log_every": ["<builtin>.len", "torch.cuda.is_available", "torch.cuda.max_memory_allocated", "<builtin>.print", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.update", "datetime.timedelta", "time.time", "<builtin>.str", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.update": [], "datetime.timedelta": [], "torch.cuda.max_memory_allocated": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.ExponentialMovingAverage.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.ExponentialMovingAverage.__init__.ema_avg": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.ExponentialMovingAverage.update_parameters": ["<builtin>.zip", "torch.optim.swa_utils.AveragedModel.avg_fn"], "torch.optim.swa_utils.AveragedModel.avg_fn": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.accuracy": ["torch.no_grad", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.mkdir": ["os.makedirs"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.setup_for_distributed": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.setup_for_distributed.print": ["builtins.print"], "builtins.print": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.get_world_size": ["torch.distributed.get_world_size", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.is_dist_avail_and_initialized"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.get_rank": ["torch.distributed.get_rank", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.is_dist_avail_and_initialized"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.is_main_process": ["...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.get_rank"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.save_on_master": ["...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.is_main_process", "torch.save"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.init_distributed_mode": ["<builtin>.print", "torch.distributed.init_process_group", "torch.cuda.device_count", "torch.cuda.set_device", "<builtin>.hasattr", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.setup_for_distributed", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.average_checkpoints": ["<builtin>.len", "torch.load", "collections.OrderedDict", "<builtin>.KeyError", "<builtin>.open", "<builtin>.isinstance", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.average_checkpoints.<lambda1>": ["torch.serialization.default_restore_location"], "torch.serialization.default_restore_location": [], "<builtin>.KeyError": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.store_model_weights": ["torch.load", "copy.deepcopy", "os.path.join", "hashlib.sha256", "os.path.abspath", "os.replace", "<builtin>.open", "<builtin>.str", "<builtin>.iter", "torch.save", "os.path.dirname"], "hashlib.sha256": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.utils.store_model_weights.<lambda1>": [], "os.replace": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference": ["dataset.get_imagenet_test_data_loader", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.inference", "argparse.ArgumentParser", "<builtin>.sorted", "<builtin>.callable"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.AverageMeter.__init__": ["...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.AverageMeter.reset"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.AverageMeter.reset": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.AverageMeter.update": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.AverageMeter.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.ProgressMeter.__init__": ["...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.ProgressMeter._get_batch_fmtstr"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.ProgressMeter._get_batch_fmtstr": ["<builtin>.str", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.ProgressMeter.display": ["<builtin>.str", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.inference": ["<builtin>.print", "intel_extension_for_pytorch.optimize", "torch.profiler.profile", "torch.utils.mkldnn.to_mkldnn", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.AverageMeter.update", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.ProgressMeter.display", "torch.profiler.record_function", "torch.cpu.amp.autocast", "<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.AverageMeter.__init__", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.ProgressMeter.__init__", "time.time", "torch.nn.CrossEntropyLoss", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.accuracy", "torch.jit.freeze", "torch.jit.trace", "<builtin>.enumerate", "torch.randn", "torch.no_grad"], "torch.profiler.record_function": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.inference.accuracy": ["torch.no_grad", "<builtin>.max"], "dataset.get_imagenet_test_data_loader": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main": ["torch.hub.list", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.main", "argparse.ArgumentParser", "<builtin>.sorted", "<builtin>.callable"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.<lambda1>": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.main": ["warnings.warn", "torch.cuda.is_available", "torch.multiprocessing.spawn", "<builtin>.print", "torch.cuda.device_count", "torch.manual_seed", "<builtin>.int", "random.seed", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.main_worker"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.main_worker": ["torch.cuda.is_available", "torch.nn.parallel.DistributedDataParallel", "torchvision.transforms.ToTensor", "<builtin>.print", "torch.optim.SGD", "torch.hub.load", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.adjust_learning_rate", "intel_extension_for_pytorch.optimize", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.validate", "torch.set_flush_denormal", "torch.load", "torchvision.transforms.CenterCrop", "torchvision.transforms.RandomHorizontalFlip", "os.environ.get", "<builtin>.str", "torchvision.transforms.RandomResizedCrop", "torch.utils.data.distributed.DistributedSampler", "torchvision.transforms.Compose", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.save_checkpoint", "torch.cpu.amp.autocast", "torchvision.transforms.Resize", "<builtin>.range", "torch.utils.data.DataLoader", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.train", "os.path.join", "torch.fx.experimental.optimization.fuse", "torch.nn.DataParallel", "torchvision.transforms.Normalize", "intel_extension_for_pytorch.quantization.QuantConf", "<builtin>.int", "torch.nn.CrossEntropyLoss", "os.path.isfile", "torch.jit.freeze", "torch.distributed.init_process_group", "torchvision.datasets.ImageFolder", "torch.jit.trace", "torch.cuda.set_device", "torch.randn", "intel_extension_for_pytorch.quantization.convert", "torch.no_grad", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.validate": ["<builtin>.range", "<builtin>.len", "threading.Thread", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.AverageMeter.update", "torch.arange", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.accuracy", "<builtin>.print", "<builtin>.enumerate", "torch.fx.experimental.optimization.fuse", "torch.randn", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.ProgressMeter.__init__", "time.time", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.AverageMeter.__init__", "torch.no_grad", "<builtin>.exit", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.ProgressMeter.display", "torch.cpu.amp.autocast"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.adjust_learning_rate": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.train": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.AverageMeter.update", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.accuracy", "<builtin>.print", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.ProgressMeter.__init__", "time.time", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.AverageMeter.__init__", "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.ProgressMeter.display", "torch.cpu.amp.autocast"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.save_checkpoint": ["torch.save", "shutil.copyfile"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.AverageMeter.__init__": ["...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.AverageMeter.reset"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.ProgressMeter.__init__": ["...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.ProgressMeter._get_batch_fmtstr"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.AverageMeter.update": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.accuracy": ["torch.no_grad", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.ProgressMeter.display": ["<builtin>.str", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.run_weights_sharing_model": ["<builtin>.print", "torch.randn", "time.time", "torch.no_grad", "torch.cpu.amp.autocast"], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.AverageMeter.reset": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.AverageMeter.__str__": [], "...repos_filtered.IntelAI.models.models.image_recognition.pytorch.common.main.ProgressMeter._get_batch_fmtstr": ["<builtin>.str", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.eval_util": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.eval_util.write_metrics": ["tensorflow.compat.v1.summary.FileWriterCache.get", "tensorflow.compat.v1.Summary.Value", "logging.info", "<builtin>.sorted", "tensorflow.compat.v1.Summary"], "logging.info": [], "tensorflow.compat.v1.summary.FileWriterCache.get": [], "tensorflow.compat.v1.Summary.Value": [], "tensorflow.compat.v1.Summary": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.eval_util.visualize_detection_results": ["numpy.squeeze", "tensorflow.compat.v1.summary.FileWriterCache.get", "numpy.int32", "object_detection.core.standard_fields.InputDataFields", "tensorflow.compat.v1.Summary", "<builtin>.ValueError", "os.path.join", "object_detection.utils.visualization_utils.visualize_boxes_and_labels_on_image_array", "logging.info", "object_detection.utils.visualization_utils.save_image_array_as_png", "<builtin>.set", "numpy.tile", "object_detection.utils.label_map_util.create_category_index"], "object_detection.utils.label_map_util.create_category_index": [], "numpy.tile": [], "object_detection.utils.visualization_utils.visualize_boxes_and_labels_on_image_array": [], "object_detection.core.standard_fields.InputDataFields": [], "object_detection.utils.visualization_utils.save_image_array_as_png": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.eval_util._run_checkpoint_once": ["tensorflow.compat.v1.train.QueueRunner", "tensorflow.compat.v1.tables_initializer", "<builtin>.print", "tensorflow.compat.v1.local_variables_initializer", "tensorflow.compat.v1.train.Saver", "tensorflow.train.latest_checkpoint", "<builtin>.ValueError", "tensorflow.compat.v1.global_variables_initializer", "tensorflow.compat.v1.get_default_graph", "<builtin>.any", "logging.info", "tensorflow.compat.v1.train.get_global_step", "collections.defaultdict", "<builtin>.range", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.train.global_step", "time.time", "numpy.mean", "<builtin>.iter", "<builtin>.int", "tensorflow.io.write_graph", "tensorflow.compat.v1.Session"], "tensorflow.compat.v1.tables_initializer": [], "tensorflow.compat.v1.train.QueueRunner": [], "tensorflow.compat.v1.train.global_step": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.eval_util.repeated_checkpoint_run": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.eval_util._run_checkpoint_once", "time.strftime", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.eval_util.write_metrics", "logging.info", "time.time", "time.sleep", "tensorflow.train.latest_checkpoint", "time.gmtime"], "time.gmtime": [], "time.sleep": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.eval_util.result_dict_for_single_example": ["tensorflow.cast", "object_detection.core.keypoint_ops.scale", "tensorflow.slice", "object_detection.utils.ops.reframe_box_masks_to_image_masks", "tensorflow.shape", "object_detection.core.box_list.BoxList", "tensorflow.ones_like", "object_detection.core.box_list_ops.to_absolute_coordinates", "tensorflow.greater"], "object_detection.core.box_list.BoxList": [], "object_detection.core.box_list_ops.to_absolute_coordinates": [], "object_detection.utils.ops.reframe_box_masks_to_image_masks": [], "object_detection.core.keypoint_ops.scale": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.eval_util.get_eval_metric_ops_for_evaluators": ["<builtin>.ValueError", "object_detection.metrics.coco_evaluation.CocoDetectionEvaluator", "object_detection.metrics.coco_evaluation.CocoMaskEvaluator", "<builtin>.set", "<builtin>.list"], "object_detection.metrics.coco_evaluation.CocoDetectionEvaluator": [], "object_detection.metrics.coco_evaluation.CocoMaskEvaluator": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.dataset_util": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.dataset_util.int64_feature": ["tensorflow.train.Feature", "tensorflow.train.Int64List"], "tensorflow.train.Int64List": [], "tensorflow.train.Feature": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.dataset_util.int64_list_feature": ["tensorflow.train.Feature", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.dataset_util.bytes_feature": ["tensorflow.train.Feature", "tensorflow.train.BytesList"], "tensorflow.train.BytesList": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.dataset_util.bytes_list_feature": ["tensorflow.train.Feature", "tensorflow.train.BytesList"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.dataset_util.float_list_feature": ["tensorflow.train.Feature", "tensorflow.train.FloatList"], "tensorflow.train.FloatList": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.dataset_util.read_examples_list": ["tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.dataset_util.recursive_parse_xml_to_dict": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.dataset_util.recursive_parse_xml_to_dict"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.dataset_util.make_initializable_iterator": ["tensorflow.compat.v1.data.make_initializable_iterator", "tensorflow.compat.v1.add_to_collection"], "tensorflow.compat.v1.data.make_initializable_iterator": [], "tensorflow.compat.v1.add_to_collection": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.dataset_util.read_dataset": ["tensorflow.io.matching_files", "tensorflow.data.experimental.parallel_interleave", "tensorflow.compat.v1.logging.warning", "tensorflow.concat", "tensorflow.data.Dataset.from_tensor_slices"], "tensorflow.io.matching_files": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.eval": ["tensorflow.app.flags.DEFINE_boolean", "tensorflow.app.flags.DEFINE_string", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.app.run", "tensorflow.app.flags.DEFINE_integer"], "tensorflow.app.flags.DEFINE_boolean": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.eval.main": ["functools.partial", "evaluator.evaluate", "os.path.join", "object_detection.utils.label_map_util.load_labelmap", "logging.info", "object_detection.utils.config_util.get_configs_from_multiple_files", "tensorflow.io.gfile.copy", "tensorflow.io.gfile.makedirs", "os.environ.get", "object_detection.utils.label_map_util.convert_label_map_to_categories", "<builtin>.str", "object_detection.utils.config_util.get_configs_from_pipeline_file", "<builtin>.max"], "object_detection.utils.config_util.get_configs_from_pipeline_file": [], "tensorflow.io.gfile.copy": [], "object_detection.utils.config_util.get_configs_from_multiple_files": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.eval.main.get_next": ["tensorflow.compat.v1.data.make_initializable_iterator", "object_detection.builders.dataset_builder.build"], "object_detection.builders.dataset_builder.build": [], "object_detection.utils.label_map_util.load_labelmap": [], "object_detection.utils.label_map_util.convert_label_map_to_categories": [], "evaluator.evaluate": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.evaluator": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.evaluator._extract_predictions_and_losses": ["tensorflow.cast", "tensorflow.expand_dims", "object_detection.core.prefetcher.prefetch", "eval_util.result_dict_for_single_example"], "object_detection.core.prefetcher.prefetch": [], "eval_util.result_dict_for_single_example": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.evaluator.get_evaluators": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.evaluator.evaluate": ["eval_util.repeated_checkpoint_run", "tensorflow.compat.v1.train.get_or_create_global_step", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.evaluator.get_evaluators", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.evaluator._extract_predictions_and_losses", "tensorflow.compat.v1.global_variables", "tensorflow.compat.v1.train.Saver", "logging.fatal", "tensorflow.train.ExponentialMovingAverage"], "logging.fatal": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.evaluator.evaluate._process_batch": ["os.makedirs", "eval_util.visualize_detection_results", "time.strftime", "tensorflow.python.client.timeline.Timeline", "os.path.exists", "logging.info", "tensorflow.compat.v1.train.get_global_step", "tensorflow.compat.v1.train.global_step", "time.time", "<builtin>.open", "tensorflow.compat.v1.RunMetadata", "tensorflow.compat.v1.RunOptions"], "eval_util.visualize_detection_results": [], "tensorflow.compat.v1.global_variables": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.evaluator.evaluate._restore_latest_checkpoint": ["tensorflow.train.latest_checkpoint"], "eval_util.repeated_checkpoint_run": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.__init__", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.run", "matplotlib.use"], "matplotlib.use": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.log", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.parse_args"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.parse_args": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.validate_args", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.finish_import"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.log": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.validate_args": ["os.path.isdir", "os.path.join", "<builtin>.ValueError", "os.path.exists", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.log"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.finish_import": ["IPython.get_ipython", "sys.path.append", "importlib.import_module"], "sys.path.append": [], "IPython.get_ipython": [], "importlib.import_module": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.run": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.run_inference", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.get_image_paths", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.visualize", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.log", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.read_graph"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.read_graph": ["tensorflow.io.gfile.GFile", "tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.get_image_paths": ["os.path.join", "os.walk"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.run_inference": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.load_image_into_numpy_array", "time.strftime", "tensorflow.python.client.timeline.Timeline", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.compat.v1.get_default_graph", "<builtin>.enumerate", "<builtin>.str", "time.time", "PIL.Image.open", "<builtin>.open", "tensorflow.compat.v1.Session", "<builtin>.int", "tensorflow.compat.v1.RunMetadata", "tensorflow.compat.v1.RunOptions"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.visualize": ["matplotlib.pyplot.figure", "matplotlib.pyplot.imshow"], "matplotlib.pyplot.imshow": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.load_label_map": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.fp32.run_rfcn_inference.RFCNRunner.load_image_into_numpy_array": ["numpy.stack", "numpy.array"], "PIL.Image.open": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.__init__", "matplotlib.use", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.run"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.parse_args", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.log"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.parse_args": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.validate_args", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.finish_import"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.log": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.validate_args": ["os.path.isdir", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.log", "os.path.join", "<builtin>.ValueError", "os.path.exists"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.finish_import": ["IPython.get_ipython", "sys.path.append", "importlib.import_module"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.run": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.get_image_paths", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.log", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.visualize", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.run_inference", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.read_graph"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.read_graph": ["tensorflow.io.gfile.GFile", "tensorflow.Graph", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.get_image_paths": ["os.path.join", "os.walk"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.run_inference": ["time.strftime", "tensorflow.python.client.timeline.Timeline", "tensorflow.compat.v1.ConfigProto", "<builtin>.print", "tensorflow.compat.v1.get_default_graph", "<builtin>.enumerate", "<builtin>.str", "time.time", "PIL.Image.open", "<builtin>.open", "tensorflow.compat.v1.Session", "<builtin>.int", "tensorflow.compat.v1.RunMetadata", "tensorflow.compat.v1.RunOptions", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.load_image_into_numpy_array"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.visualize": ["matplotlib.pyplot.figure", "matplotlib.pyplot.imshow"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.load_label_map": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.rfcn.inference.int8.run_rfcn_inference.RFCNRunner.load_image_into_numpy_array": ["numpy.stack", "numpy.array"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.eval_util": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.eval_util.write_metrics": ["tensorflow.summary.FileWriterCache.get", "tensorflow.Summary", "tensorflow.Summary.Value", "logging.info", "<builtin>.sorted"], "tensorflow.summary.FileWriterCache.get": [], "tensorflow.Summary.Value": [], "tensorflow.Summary": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.eval_util.visualize_detection_results": ["numpy.squeeze", "numpy.int32", "tensorflow.summary.FileWriterCache.get", "object_detection.core.standard_fields.InputDataFields", "tensorflow.Summary", "<builtin>.ValueError", "os.path.join", "object_detection.utils.visualization_utils.visualize_boxes_and_labels_on_image_array", "logging.info", "object_detection.utils.visualization_utils.save_image_array_as_png", "<builtin>.set", "numpy.tile", "object_detection.utils.label_map_util.create_category_index"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.eval_util._run_checkpoint_once": ["tensorflow.Session", "tensorflow.train.Saver", "<builtin>.print", "tensorflow.ConfigProto", "tensorflow.train.latest_checkpoint", "tensorflow.get_default_graph", "tensorflow.train.write_graph", "<builtin>.ValueError", "<builtin>.any", "logging.info", "collections.defaultdict", "tensorflow.tables_initializer", "<builtin>.range", "tensorflow.train.global_step", "tensorflow.local_variables_initializer", "tensorflow.contrib.slim.queues.QueueRunners", "time.time", "numpy.mean", "<builtin>.iter", "<builtin>.int", "tensorflow.train.get_global_step", "tensorflow.global_variables_initializer"], "tensorflow.global_variables_initializer": [], "tensorflow.local_variables_initializer": [], "tensorflow.tables_initializer": [], "tensorflow.train.Saver": [], "tensorflow.train.write_graph": [], "tensorflow.contrib.slim.queues.QueueRunners": [], "tensorflow.train.get_global_step": [], "tensorflow.train.global_step": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.eval_util.repeated_checkpoint_run": ["time.strftime", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.eval_util._run_checkpoint_once", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.eval_util.write_metrics", "logging.info", "time.time", "time.sleep", "tensorflow.train.latest_checkpoint", "time.gmtime"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.eval_util.result_dict_for_single_example": ["tensorflow.cast", "object_detection.core.keypoint_ops.scale", "tensorflow.slice", "object_detection.utils.ops.reframe_box_masks_to_image_masks", "tensorflow.shape", "object_detection.core.box_list.BoxList", "tensorflow.ones_like", "tensorflow.to_int64", "object_detection.core.box_list_ops.to_absolute_coordinates", "tensorflow.to_int32", "tensorflow.greater"], "tensorflow.to_int64": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.eval_util.get_eval_metric_ops_for_evaluators": ["<builtin>.ValueError", "object_detection.metrics.coco_evaluation.CocoDetectionEvaluator", "object_detection.metrics.coco_evaluation.CocoMaskEvaluator", "<builtin>.set", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.dataset_util": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.dataset_util.int64_feature": ["tensorflow.train.Feature", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.dataset_util.int64_list_feature": ["tensorflow.train.Feature", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.dataset_util.bytes_feature": ["tensorflow.train.Feature", "tensorflow.train.BytesList"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.dataset_util.bytes_list_feature": ["tensorflow.train.Feature", "tensorflow.train.BytesList"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.dataset_util.float_list_feature": ["tensorflow.train.Feature", "tensorflow.train.FloatList"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.dataset_util.read_examples_list": ["tensorflow.gfile.GFile"], "tensorflow.gfile.GFile": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.dataset_util.recursive_parse_xml_to_dict": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.dataset_util.recursive_parse_xml_to_dict"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.dataset_util.make_initializable_iterator": ["tensorflow.add_to_collection"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.dataset_util.read_dataset": ["tensorflow.contrib.data.parallel_interleave", "tensorflow.logging.warning", "tensorflow.matching_files", "tensorflow.concat", "tensorflow.data.Dataset.from_tensor_slices"], "tensorflow.matching_files": [], "tensorflow.contrib.data.parallel_interleave": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.eval": ["tensorflow.app.flags.DEFINE_boolean", "tensorflow.app.flags.DEFINE_string", "tensorflow.logging.set_verbosity", "tensorflow.app.run", "tensorflow.app.flags.DEFINE_integer"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.eval.main": ["functools.partial", "evaluator.evaluate", "tensorflow.gfile.Copy", "os.path.join", "object_detection.utils.label_map_util.load_labelmap", "object_detection.utils.config_util.get_configs_from_multiple_files", "object_detection.utils.label_map_util.convert_label_map_to_categories", "object_detection.utils.config_util.get_configs_from_pipeline_file", "<builtin>.max", "tensorflow.gfile.MakeDirs"], "tensorflow.gfile.MakeDirs": [], "tensorflow.gfile.Copy": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.eval.main.get_next": ["object_detection.builders.dataset_builder.build", "dataset_util.make_initializable_iterator"], "dataset_util.make_initializable_iterator": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.evaluator": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.evaluator._extract_predictions_and_losses": ["tensorflow.expand_dims", "object_detection.core.prefetcher.prefetch", "tensorflow.to_float", "eval_util.result_dict_for_single_example"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.evaluator.get_evaluators": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.evaluator.evaluate": ["eval_util.repeated_checkpoint_run", "tensorflow.train.Saver", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.evaluator.get_evaluators", "tensorflow.global_variables", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.evaluator._extract_predictions_and_losses", "logging.fatal", "tensorflow.train.ExponentialMovingAverage", "tensorflow.train.get_or_create_global_step"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.evaluator.evaluate._process_batch": ["tensorflow.train.get_global_step", "eval_util.visualize_detection_results", "tensorflow.train.global_step", "logging.info"], "tensorflow.global_variables": [], "tensorflow.train.get_or_create_global_step": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.fp32.evaluator.evaluate._restore_latest_checkpoint": ["tensorflow.train.latest_checkpoint"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.int8.run_frozen_graph_rcnn": ["matplotlib.pyplot.imshow", "tensorflow.Graph", "importlib.import_module", "tensorflow.gfile.GFile", "os.path.join", "<builtin>.print", "IPython.get_ipython", "os.walk", "matplotlib.pyplot.figure", "tensorflow.GraphDef", "tensorflow.import_graph_def", "matplotlib.use", "argparse.ArgumentParser", "sys.path.append", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.int8.run_frozen_graph_rcnn.run_inference_for_single_image"], "tensorflow.GraphDef": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.int8.run_frozen_graph_rcnn.load_image_into_numpy_array": ["numpy.stack", "numpy.array"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.int8.run_frozen_graph_rcnn.run_inference_for_single_image": ["sys.stdout.flush", "tensorflow.Session", "tensorflow.get_default_graph", "time.strftime", "tensorflow.python.client.timeline.Timeline", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.int8.run_frozen_graph_rcnn.load_image_into_numpy_array", "<builtin>.print", "tensorflow.RunMetadata", "<builtin>.enumerate", "tensorflow.RunOptions", "tensorflow.ConfigProto", "PIL.Image.open", "os.environ.get", "time.time", "<builtin>.open", "<builtin>.str", "<builtin>.int", "sys.exit"], "tensorflow.RunOptions": [], "tensorflow.RunMetadata": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.faster_rcnn.inference.int8": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.COCOWrapper.__init__": ["<builtin>.ValueError", "pycocotools.coco.COCO.__init__", "pycocotools.coco.COCO.createIndex"], "pycocotools.coco.COCO.__init__": [], "pycocotools.coco.COCO.createIndex": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.COCOWrapper.LoadAnnotations": ["pycocotools.coco.COCO", "pycocotools.mask.toBbox", "pycocotools.coco.COCO.getImgIds", "copy.deepcopy", "<builtin>.ValueError", "<builtin>.enumerate", "pycocotools.mask.area", "<builtin>.set", "time.time", "<builtin>.isinstance", "tensorflow.compat.v1.logging.info"], "pycocotools.coco.COCO.getImgIds": [], "pycocotools.mask.area": [], "pycocotools.mask.toBbox": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.COCOEvalWrapper.__init__": ["pycocotools.cocoeval.COCOeval.__init__"], "pycocotools.cocoeval.COCOeval.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.COCOEvalWrapper.GetCategory": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.COCOEvalWrapper.GetAgnosticMode": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.COCOEvalWrapper.GetCategoryIdList": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.COCOEvalWrapper.ComputeMetrics": ["pycocotools.cocoeval.COCOeval.evaluate", "pycocotools.cocoeval.COCOeval.summarize", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.COCOEvalWrapper.GetCategory", "pycocotools.cocoeval.COCOeval.accumulate", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.COCOEvalWrapper.GetAgnosticMode", "<builtin>.hasattr", "collections.OrderedDict", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.COCOEvalWrapper.GetCategoryIdList", "<builtin>.enumerate"], "pycocotools.cocoeval.COCOeval.evaluate": [], "pycocotools.cocoeval.COCOeval.accumulate": [], "pycocotools.cocoeval.COCOeval.summarize": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools._ConvertBoxToCOCOFormat": ["<builtin>.float"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools._RleCompress": ["pycocotools.mask.encode", "numpy.asfortranarray"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.ExportSingleImageGroundtruthToCoco": ["<builtin>.range", "<builtin>.len", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools._ConvertBoxToCOCOFormat", "<builtin>.float", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools._RleCompress", "<builtin>.int", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.ExportSingleImageDetectionBoxesToCoco": ["<builtin>.ValueError", "<builtin>.len", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_tools.ExportSingleImageDetectionMasksToCoco": ["<builtin>.ValueError", "<builtin>.len", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_detection_evaluator": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_detection_evaluator.CocoDetectionEvaluator.__init__": ["<builtin>.set"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_detection_evaluator.CocoDetectionEvaluator.add_single_ground_truth_image_info": ["<builtin>.print", "inference.coco_tools.ExportSingleImageGroundtruthToCoco"], "inference.coco_tools.ExportSingleImageGroundtruthToCoco": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_detection_evaluator.CocoDetectionEvaluator.add_single_detected_image_info": ["inference.coco_tools.ExportSingleImageDetectionBoxesToCoco", "<builtin>.print"], "inference.coco_tools.ExportSingleImageDetectionBoxesToCoco": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_detection_evaluator.CocoDetectionEvaluator.evaluate": ["<builtin>.iter", "inference.coco_tools.COCOWrapper", "inference.coco_tools.COCOEvalWrapper", "inference.coco_label_map.category_map.items"], "inference.coco_label_map.category_map.items": [], "inference.coco_tools.COCOWrapper": [], "inference.coco_tools.COCOEvalWrapper": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.coco_label_map": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.run", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.parse_and_preprocess": ["tensorflow.expand_dims", "tensorflow.compat.v1.VarLenFeature", "tensorflow.transpose", "tensorflow.compat.v1.parse_single_example", "tensorflow.compat.v1.FixedLenFeature", "tensorflow.concat", "tensorflow.image.decode_image"], "tensorflow.compat.v1.VarLenFeature": [], "tensorflow.image.decode_image": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.__init__": ["tensorflow.compat.v1.ConfigProto", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.load_graph", "inference.coco_label_map.category_map.items"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.load_graph": ["tensorflow.Graph", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "tensorflow.compat.v1.gfile.FastGFile", "<builtin>.print", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.build_data_sess": ["tensorflow.compat.v1.Session", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.get_input", "tensorflow.Graph"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.get_input": ["tensorflow.data.TFRecordDataset.list_files", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.data.experimental.parallel_interleave", "tensorflow.python.data.experimental.map_and_batch"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.run_benchmark": ["<builtin>.range", "<builtin>.print", "<builtin>.str", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.build_data_sess", "time.time", "tensorflow.compat.v1.Session", "tensorflow.random.truncated_normal"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.accuracy_check": ["<builtin>.type", "<builtin>.print", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.build_data_sess", "inference.coco_detection_evaluator.CocoDetectionEvaluator", "tensorflow.compat.v1.Session", "<builtin>.int", "numpy.asarray"], "inference.coco_detection_evaluator.CocoDetectionEvaluator": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.run": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.run_benchmark", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.infer_detections.model_infer.accuracy_check"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.__init__", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.run"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.parse_and_preprocess": ["tensorflow.expand_dims", "tensorflow.compat.v1.VarLenFeature", "tensorflow.transpose", "tensorflow.compat.v1.parse_single_example", "tensorflow.compat.v1.FixedLenFeature", "tensorflow.concat", "tensorflow.image.decode_image"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.__init__": ["tensorflow.compat.v1.ConfigProto", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.load_graph", "inference.coco_label_map.category_map.items"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.load_graph": ["tensorflow.Graph", "tensorflow.compat.v1.gfile.FastGFile", "<builtin>.print", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.build_data_sess": ["tensorflow.Graph", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.get_input", "tensorflow.compat.v1.gfile.FastGFile", "os.path.join", "os.path.realpath", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "tensorflow.compat.v1.Session", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.get_input": ["tensorflow.data.TFRecordDataset.list_files", "tensorflow.compat.v1.data.make_one_shot_iterator", "tensorflow.python.data.experimental.parallel_interleave", "tensorflow.python.data.experimental.map_and_batch"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.run_benchmark": ["<builtin>.range", "<builtin>.print", "<builtin>.str", "time.time", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.build_data_sess", "tensorflow.compat.v1.Session", "tensorflow.random.truncated_normal"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.accuracy_check": ["<builtin>.type", "<builtin>.print", "inference.coco_detection_evaluator.CocoDetectionEvaluator", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.build_data_sess", "tensorflow.compat.v1.Session", "<builtin>.int", "numpy.asarray"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.run": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.accuracy_check", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-mobilenet.inference.int8.infer_detections.model_infer.run_benchmark"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.training": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.training.bfloat16": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.training.fp32": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.coco_constants": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.run", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.MyEncoder.default": ["<builtin>.int", "json.JSONEncoder.default", "<builtin>.isinstance", "<builtin>.float"], "json.JSONEncoder.default": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.__init__": ["tensorflow.compat.v1.ConfigProto", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.load_graph", "argparse.ArgumentParser", "tensorflow.compat.v1.get_default_graph"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.load_graph": ["tensorflow.Graph", "<builtin>.print", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.run_benchmark": ["<builtin>.range", "<builtin>.print", "<builtin>.str", "<builtin>.Exception", "time.time", "tensorflow.compat.v1.Session", "tensorflow.random.truncated_normal"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.__get_input": ["preprocessing.COCOPreprocessor", "datasets.create_dataset"], "preprocessing.COCOPreprocessor": [], "datasets.create_dataset": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.accuracy_check_300": ["<builtin>.range", "<builtin>.print", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.__get_input", "benchmark_cnn.make_params", "models.ssd_model.SSD300Model", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.get_collection"], "benchmark_cnn.make_params": [], "models.ssd_model.SSD300Model": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.preprocess": ["numpy.array"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.load_batch": ["<builtin>.len", "numpy.array", "os.path.join", "<builtin>.Exception", "PIL.Image.open", "numpy.stack", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.preprocess"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.ssd_parse_proto": ["tensorflow.image.decode_jpeg", "tensorflow.io.FixedLenFeature", "tensorflow.io.parse_single_example"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.load_batch_tfrecord": ["cv2.resize", "numpy.concatenate", "<builtin>.Exception", "<builtin>.int", "numpy.stack", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.preprocess"], "cv2.resize": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.cocoval": ["pycocotools.coco.COCO", "pycocotools.cocoeval.COCOeval"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.run_inference_for_eval": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.load_batch_tfrecord", "os.path.join", "<builtin>.print", "tensorflow.compat.v1.data.TFRecordDataset", "tensorflow.compat.v1.Session", "<builtin>.int"], "tensorflow.compat.v1.data.TFRecordDataset": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.accuracy_check_1200": ["os.path.join", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.run_inference_for_eval", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.cocoval", "json.dumps", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.run": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.accuracy_check_300", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.run_benchmark", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.infer_detections.ssd_resnet34_infer.accuracy_check_1200"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.coco_constants": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.__init__", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.run"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.MyEncoder.default": ["<builtin>.int", "json.JSONEncoder.default", "<builtin>.isinstance", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.__init__": ["tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.get_default_graph", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.load_graph"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.load_graph": ["tensorflow.Graph", "<builtin>.print", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.run_benchmark": ["<builtin>.range", "<builtin>.print", "<builtin>.str", "<builtin>.Exception", "time.time", "tensorflow.compat.v1.Session", "tensorflow.random.truncated_normal"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.__get_input": ["preprocessing.COCOPreprocessor", "datasets.create_dataset"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.accuracy_check_300": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.__get_input", "<builtin>.print", "benchmark_cnn.make_params", "models.ssd_model.SSD300Model", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.get_collection"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.preprocess": ["numpy.array"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.load_batch": ["<builtin>.len", "numpy.array", "os.path.join", "<builtin>.Exception", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.preprocess", "PIL.Image.open", "numpy.stack"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.ssd_parse_proto": ["tensorflow.image.decode_jpeg", "tensorflow.io.FixedLenFeature", "tensorflow.io.parse_single_example"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.load_batch_tfrecord": ["cv2.resize", "numpy.concatenate", "<builtin>.Exception", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.preprocess", "<builtin>.int", "numpy.stack"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.cocoval": ["pycocotools.coco.COCO", "pycocotools.cocoeval.COCOeval"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.run_inference_for_eval": ["<builtin>.range", "os.path.join", "<builtin>.print", "tensorflow.compat.v1.data.TFRecordDataset", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.load_batch_tfrecord", "tensorflow.compat.v1.Session", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.accuracy_check_1200": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.cocoval", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.run_inference_for_eval", "os.path.join", "json.dumps", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.run": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.run_benchmark", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.accuracy_check_300", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.fp32.infer_detections.ssd_resnet34_infer.accuracy_check_1200"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.coco_constants": [], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.run", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.MyEncoder.default": ["<builtin>.int", "json.JSONEncoder.default", "<builtin>.isinstance", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.__init__": ["tensorflow.compat.v1.ConfigProto", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.load_graph", "argparse.ArgumentParser", "tensorflow.compat.v1.get_default_graph"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.load_graph": ["tensorflow.Graph", "<builtin>.print", "tensorflow.compat.v1.GraphDef", "tensorflow.import_graph_def", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.run_benchmark": ["<builtin>.range", "<builtin>.print", "<builtin>.str", "<builtin>.Exception", "time.time", "tensorflow.compat.v1.Session", "tensorflow.random.truncated_normal"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.__get_input": ["preprocessing.COCOPreprocessor", "datasets.create_dataset"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.accuracy_check_300": ["<builtin>.range", "<builtin>.print", "benchmark_cnn.make_params", "models.ssd_model.SSD300Model", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.get_collection", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.__get_input"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.preprocess": ["numpy.array"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.load_batch": ["<builtin>.len", "numpy.array", "os.path.join", "<builtin>.Exception", "PIL.Image.open", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.preprocess", "numpy.stack"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.ssd_parse_proto": ["tensorflow.image.decode_jpeg", "tensorflow.io.FixedLenFeature", "tensorflow.io.parse_single_example"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.load_batch_tfrecord": ["cv2.resize", "numpy.concatenate", "<builtin>.Exception", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.preprocess", "<builtin>.int", "numpy.stack"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.cocoval": ["pycocotools.coco.COCO", "pycocotools.cocoeval.COCOeval"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.run_inference_for_eval": ["<builtin>.range", "os.path.join", "<builtin>.print", "tensorflow.compat.v1.data.TFRecordDataset", "tensorflow.compat.v1.Session", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.load_batch_tfrecord"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.accuracy_check_1200": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.cocoval", "os.path.join", "json.dumps", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.run_inference_for_eval", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.run": ["...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.accuracy_check_1200", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.accuracy_check_300", "...repos_filtered.IntelAI.models.models.object_detection.tensorflow.ssd-resnet34.inference.int8.infer_detections.ssd_resnet34_infer.run_benchmark"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms._flip_coco_person_keypoints": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.Compose.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.Compose.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.RandomHorizontalFlip.forward": ["torchvision.transforms.functional.get_image_size", "torch.rand", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms._flip_coco_person_keypoints", "torchvision.transforms.functional.hflip"], "torch.rand": [], "torchvision.transforms.functional.hflip": [], "torchvision.transforms.functional.get_image_size": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.ToTensor.forward": ["torchvision.transforms.functional.convert_image_dtype", "torchvision.transforms.functional.pil_to_tensor"], "torchvision.transforms.functional.pil_to_tensor": [], "torchvision.transforms.functional.convert_image_dtype": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.PILToTensor.forward": ["torchvision.transforms.functional.pil_to_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.ConvertImageDtype.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.ConvertImageDtype.forward": ["torchvision.transforms.functional.convert_image_dtype"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.RandomIoUCrop.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.RandomIoUCrop.forward": ["<builtin>.range", "torchvision.ops.boxes.box_iou", "<builtin>.len", "torch.rand", "torchvision.transforms.functional.crop", "<builtin>.ValueError", "torchvision.transforms.functional.get_image_size", "torch.tensor", "torch.randint", "<builtin>.int", "<builtin>.isinstance"], "torchvision.ops.boxes.box_iou": [], "torchvision.transforms.functional.crop": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.RandomZoomOut.__init__": ["<builtin>.ValueError", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.RandomZoomOut": ["torch.jit.unused"], "torch.jit.unused": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.RandomZoomOut._get_fill_value": ["<builtin>.int", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.RandomZoomOut.forward": ["torch.jit.is_scripting", "torch.rand", "<builtin>.ValueError", "torchvision.transforms.functional.get_image_size", "torchvision.transforms.functional._is_pil_image", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.RandomZoomOut._get_fill_value", "torch.tensor", "torchvision.transforms.functional.pad", "<builtin>.int", "<builtin>.isinstance"], "torch.jit.is_scripting": [], "torchvision.transforms.functional._is_pil_image": [], "torchvision.transforms.functional.pad": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.RandomPhotometricDistort.__init__": ["torchvision.transforms.transforms.ColorJitter", "<builtin>.super"], "torchvision.transforms.transforms.ColorJitter": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.transforms.RandomPhotometricDistort.forward": ["torch.rand", "<builtin>.ValueError", "torchvision.transforms.functional._is_pil_image", "torchvision.transforms.functional.convert_image_dtype", "torchvision.transforms.functional.get_image_num_channels", "torch.randperm", "torchvision.transforms.functional.pil_to_tensor", "<builtin>.isinstance", "torchvision.transforms.functional.to_pil_image"], "torchvision.transforms.functional.get_image_num_channels": [], "torch.randperm": [], "torchvision.transforms.functional.to_pil_image": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.presets": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.presets.DetectionPresetTrain.__init__": ["transforms.RandomIoUCrop", "transforms.RandomPhotometricDistort", "<builtin>.list", "transforms.RandomHorizontalFlip", "<builtin>.ValueError", "transforms.Compose", "transforms.RandomZoomOut", "transforms.PILToTensor", "transforms.ConvertImageDtype"], "transforms.RandomHorizontalFlip": [], "transforms.PILToTensor": [], "transforms.ConvertImageDtype": [], "transforms.Compose": [], "transforms.RandomPhotometricDistort": [], "transforms.RandomZoomOut": [], "transforms.RandomIoUCrop": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.presets.DetectionPresetTrain.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.presets.DetectionPresetEval.__init__": ["transforms.ToTensor"], "transforms.ToTensor": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.presets.DetectionPresetEval.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn.FasterRCNN.__init__": ["<builtin>.dict", "torchvision.models.detection.rpn.RPNHead", "<builtin>.len", "torchvision.models.detection.rpn.RegionProposalNetwork", "<builtin>.type", "torchvision.models.detection.anchor_utils.AnchorGenerator", "<builtin>.ValueError", "torchvision.ops.MultiScaleRoIAlign", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn.FastRCNNPredictor.__init__", "<builtin>.super", "<builtin>.hasattr", "roi_heads.RoIHeads", "torchvision.models.detection.transform.GeneralizedRCNNTransform", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn.TwoMLPHead.__init__", "<builtin>.isinstance"], "torchvision.models.detection.anchor_utils.AnchorGenerator": [], "torchvision.models.detection.rpn.RPNHead": [], "torchvision.models.detection.rpn.RegionProposalNetwork": [], "torchvision.ops.MultiScaleRoIAlign": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn.TwoMLPHead.__init__": ["torch.nn.Linear", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn.FastRCNNPredictor.__init__": ["torch.nn.Linear", "<builtin>.super"], "roi_heads.RoIHeads": [], "torchvision.models.detection.transform.GeneralizedRCNNTransform": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn.TwoMLPHead.forward": ["torch.nn.functional.relu"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn.FastRCNNPredictor.forward": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn.fasterrcnn_resnet50_fpn": ["torchvision.models.detection.generalized_rcnn.GeneralizedRCNN.load_state_dict", "torchvision.models.detection._utils.overwrite_eps", "torchvision.models.detection.backbone_utils._validate_trainable_layers", "torchvision._internally_replaced_utils.load_state_dict_from_url", "torchvision.models.detection.backbone_utils.resnet_fpn_backbone", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn.FasterRCNN.__init__", "torch.nn.Module.load_state_dict", "faster_rcnn.FasterRCNN.load_state_dict"], "torchvision.models.detection.backbone_utils._validate_trainable_layers": [], "torchvision.models.detection.backbone_utils.resnet_fpn_backbone": [], "torchvision._internally_replaced_utils.load_state_dict_from_url": [], "torchvision.models.detection.generalized_rcnn.GeneralizedRCNN.load_state_dict": [], "faster_rcnn.FasterRCNN.load_state_dict": [], "torchvision.models.detection._utils.overwrite_eps": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn._fasterrcnn_mobilenet_v3_large_fpn": ["torchvision.models.detection.backbone_utils.mobilenet_backbone", "<builtin>.len", "torchvision.models.detection.generalized_rcnn.GeneralizedRCNN.load_state_dict", "torchvision.models.detection.anchor_utils.AnchorGenerator", "<builtin>.ValueError", "torchvision.models.detection.backbone_utils._validate_trainable_layers", "torchvision._internally_replaced_utils.load_state_dict_from_url", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn.FasterRCNN.__init__"], "torchvision.models.detection.backbone_utils.mobilenet_backbone": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn.fasterrcnn_mobilenet_v3_large_320_fpn": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn._fasterrcnn_mobilenet_v3_large_fpn"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn.fasterrcnn_mobilenet_v3_large_fpn": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.faster_rcnn._fasterrcnn_mobilenet_v3_large_fpn"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.__init__": ["pycocotools.cocoeval.COCOeval", "<builtin>.isinstance", "copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.update": ["contextlib.redirect_stdout", "pycocotools.coco.COCO", "<builtin>.list", "pycocotools.coco.COCO.loadRes", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.evaluate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare", "numpy.unique", "io.StringIO"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_segmentation", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_keypoint", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_detection"], "contextlib.redirect_stdout": [], "pycocotools.coco.COCO.loadRes": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.evaluate": ["contextlib.redirect_stdout", "<builtin>.len", "numpy.asarray", "io.StringIO"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.synchronize_between_processes": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.create_common_coco_eval", "numpy.concatenate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.create_common_coco_eval": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.merge", "<builtin>.list", "copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.accumulate": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.summarize": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_detection": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.convert_to_xywh", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_segmentation": ["<builtin>.len", "pycocotools.mask.encode", "numpy.array", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_keypoint": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.convert_to_xywh", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.convert_to_xywh": ["torch.stack"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_eval.merge": ["utils.all_gather", "numpy.unique", "numpy.array", "numpy.concatenate"], "utils.all_gather": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.synchronize_between_processes": ["torch.distributed.barrier", "torch.distributed.all_reduce", "torch.tensor", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.is_dist_avail_and_initialized", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.is_dist_avail_and_initialized": ["torch.distributed.is_initialized", "torch.distributed.is_available"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.median": ["torch.tensor", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.avg": ["torch.tensor", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.global_avg": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.max": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.value": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.__str__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.all_gather": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.get_world_size", "torch.distributed.all_gather_object"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.get_world_size": ["torch.distributed.get_world_size", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.is_dist_avail_and_initialized"], "torch.distributed.all_gather_object": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.reduce_dict": ["torch.stack", "torch.distributed.all_reduce", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.get_world_size", "torch.inference_mode", "<builtin>.sorted"], "torch.inference_mode": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.__init__": ["collections.defaultdict"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.update": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.__getattr__": ["<builtin>.AttributeError", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.__str__": ["<builtin>.str"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.synchronize_between_processes": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.add_meter": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.log_every": ["<builtin>.len", "torch.cuda.is_available", "torch.cuda.max_memory_allocated", "<builtin>.print", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.update", "datetime.timedelta", "time.time", "<builtin>.str", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.collate_fn": ["<builtin>.zip", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.mkdir": ["os.makedirs"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.setup_for_distributed": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.setup_for_distributed.print": ["builtins.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.get_rank": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.is_dist_avail_and_initialized", "torch.distributed.get_rank"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.is_main_process": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.get_rank"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.save_on_master": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.is_main_process", "torch.save"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.init_distributed_mode": ["torch.distributed.barrier", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.setup_for_distributed", "<builtin>.print", "torch.distributed.init_process_group", "torch.cuda.device_count", "torch.cuda.set_device", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.mask_rcnn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.mask_rcnn.MaskRCNN.__init__": ["<builtin>.type", "<builtin>.ValueError", "torchvision.ops.MultiScaleRoIAlign", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.mask_rcnn.MaskRCNNHeads.__init__", "<builtin>.super", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.mask_rcnn.MaskRCNNPredictor.__init__", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.mask_rcnn.MaskRCNNHeads.__init__": ["torch.nn.Conv2d", "<builtin>.super", "<builtin>.enumerate", "collections.OrderedDict", "torch.nn.ReLU", "torch.nn.Sequential.named_parameters", "torch.nn.init.kaiming_normal_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.mask_rcnn.MaskRCNNPredictor.__init__": ["torch.nn.Sequential.named_parameters", "torch.nn.init.kaiming_normal_", "<builtin>.super", "collections.OrderedDict"], "torch.nn.Conv2d": [], "torch.nn.Sequential.named_parameters": [], "torch.nn.init.kaiming_normal_": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.mask_rcnn.maskrcnn_resnet50_fpn": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.mask_rcnn.MaskRCNN.__init__", "torchvision.models.detection._utils.overwrite_eps", "torchvision.models.detection.backbone_utils._validate_trainable_layers", "torchvision._internally_replaced_utils.load_state_dict_from_url", "torchvision.models.detection.backbone_utils.resnet_fpn_backbone", "faster_rcnn.FasterRCNN.load_state_dict"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.inference": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.inference.inference", "<builtin>.sorted", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.inference.get_coco_data_loader", "<builtin>.callable"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.reset"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.reset": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.update": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.__str__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.inference.inference": ["<builtin>.print", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.update", "intel_extension_for_pytorch.optimize", "torch.profiler.profile", "torch.utils.mkldnn.to_mkldnn", "torch.profiler.record_function", "torch.cpu.amp.autocast", "<builtin>.len", "coco_eval.CocoEvaluator", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.__init__", "coco_utils.get_coco_api_from_dataset", "time.time", "<builtin>.list", "torch.jit.freeze", "torch.jit.trace", "<builtin>.enumerate", "torch.randn", "torch.no_grad", "<builtin>.exit"], "coco_utils.get_coco_api_from_dataset": [], "coco_eval.CocoEvaluator": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.inference.get_coco_data_loader": ["torch.utils.data.DataLoader", "coco_utils.get_coco", "presets.DetectionPresetEval"], "presets.DetectionPresetEval": [], "coco_utils.get_coco": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.FilterAndRemapCocoCategories.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.FilterAndRemapCocoCategories.__call__": ["copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.convert_coco_poly_to_mask": ["torch.zeros", "<builtin>.len", "torch.stack", "pycocotools.mask.decode", "pycocotools.mask.frPyObjects", "torch.as_tensor"], "torch.as_tensor": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.ConvertCocoPolysToMask.__call__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.convert_coco_poly_to_mask", "torch.tensor", "torch.as_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations": ["torch.utils.data.Subset", "<builtin>.enumerate", "torchvision.datasets.CocoDetection.coco.getAnnIds", "torchvision.datasets.CocoDetection.coco.loadAnns", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._has_valid_annotation", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._has_only_empty_bbox": ["<builtin>.any", "<builtin>.all"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._count_visible_keypoints": ["<builtin>.sum"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._has_valid_annotation": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._count_visible_keypoints", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._has_only_empty_bbox"], "torchvision.datasets.CocoDetection.coco.getAnnIds": [], "torchvision.datasets.CocoDetection.coco.loadAnns": [], "torch.utils.data.Subset": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.convert_to_coco_api": ["pycocotools.coco.COCO", "<builtin>.range", "<builtin>.len", "<builtin>.sum", "<builtin>.set", "pycocotools.mask.encode", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.get_coco_api_from_dataset": ["<builtin>.range", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.convert_to_coco_api"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.CocoDetection.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.CocoDetection.__getitem__": ["<builtin>.dict", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.get_coco": ["os.path.join", "transforms.Compose", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.CocoDetection.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.get_coco_kp": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.coco_utils.get_coco"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads": ["torch.jit._script_if_tracing", "torch.jit.unused"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.fastrcnn_loss": ["torch.nn.functional.cross_entropy", "torch.cat", "torch.nn.functional.smooth_l1_loss", "torch.where"], "torch.nn.functional.cross_entropy": [], "torch.where": [], "torch.nn.functional.smooth_l1_loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.maskrcnn_inference": ["torch.cat", "torch.arange"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.project_masks_on_boxes": ["torch.cat", "torchvision.ops.roi_align"], "torchvision.ops.roi_align": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.maskrcnn_loss": ["torch.arange", "<builtin>.zip", "torch.cat", "torch.nn.functional.binary_cross_entropy_with_logits", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.project_masks_on_boxes"], "torch.nn.functional.binary_cross_entropy_with_logits": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.keypoints_to_heatmap": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_heatmaps_to_keypoints": ["torch.nn.functional.interpolate", "torch.stack", "torch.arange", "torch.tensor", "torch.ones", "<builtin>.int", "torch.scalar_tensor"], "torch.scalar_tensor": [], "torch.nn.functional.interpolate": [], "torch.jit._script_if_tracing": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_heatmaps_to_keypoints_loop": ["torch.zeros", "<builtin>.range", "torch.cat", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_heatmaps_to_keypoints"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.heatmaps_to_keypoints": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_heatmaps_to_keypoints_loop", "torch.zeros", "<builtin>.len", "<builtin>.range", "torch.nn.functional.interpolate", "torch.arange", "torch.div", "torchvision._is_tracing", "<builtin>.int", "torch.scalar_tensor"], "torchvision._is_tracing": [], "torch.div": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.keypointrcnn_loss": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.keypoints_to_heatmap", "torch.nn.functional.cross_entropy", "<builtin>.zip", "torch.cat", "torch.where"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.keypointrcnn_inference": ["<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.heatmaps_to_keypoints"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_expand_boxes": ["torch.stack"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.expand_boxes": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_expand_boxes", "torch.zeros_like", "torchvision._is_tracing"], "torch.zeros_like": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.expand_masks_tracing_scale": ["torch.tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.expand_masks": ["torch._C._get_tracing_state", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.expand_masks_tracing_scale", "<builtin>.float", "torch.nn.functional.pad"], "torch._C._get_tracing_state": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.paste_mask_in_image": ["torch.zeros", "torch.nn.functional.interpolate", "<builtin>.min", "<builtin>.int", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_paste_mask_in_image": ["torch.zeros", "torch.nn.functional.interpolate", "torch.cat", "torch.ones", "torch.min", "<builtin>.int", "torch.max"], "torch.max": [], "torch.min": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_paste_masks_in_image_loop": ["torch.zeros", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_paste_mask_in_image", "<builtin>.range", "torch.cat"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.paste_masks_in_image": ["<builtin>.len", "torch.stack", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.paste_mask_in_image", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.expand_masks", "torchvision._is_tracing", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.expand_boxes", "torch.scalar_tensor", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_paste_masks_in_image_loop"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.__init__": ["torchvision.models.detection._utils.Matcher", "<builtin>.super", "torchvision.models.detection._utils.BoxCoder", "torchvision.models.detection._utils.BalancedPositiveNegativeSampler"], "torchvision.models.detection._utils.Matcher": [], "torchvision.models.detection._utils.BalancedPositiveNegativeSampler": [], "torchvision.models.detection._utils.BoxCoder": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.has_mask": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.has_keypoint": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.assign_targets_to_proposals": ["torch.zeros", "<builtin>.zip", "torchvision.ops.boxes.box_iou"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.subsample": ["<builtin>.zip", "torch.where", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.add_gt_proposals": ["torch.cat", "<builtin>.zip"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.check_targets": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.has_mask", "<builtin>.all"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.select_training_samples": ["<builtin>.range", "torch.zeros", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.subsample", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.assign_targets_to_proposals", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.check_targets", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.add_gt_proposals"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.postprocess_detections": ["torch.arange", "<builtin>.zip", "torchvision.ops.boxes.clip_boxes_to_image", "torchvision.ops.boxes.remove_small_boxes", "torch.where", "torchvision.ops.boxes.batched_nms", "torch.nn.functional.softmax"], "torch.nn.functional.softmax": [], "torchvision.ops.boxes.clip_boxes_to_image": [], "torchvision.ops.boxes.remove_small_boxes": [], "torchvision.ops.boxes.batched_nms": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.forward": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.maskrcnn_loss", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.maskrcnn_inference", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.has_mask", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.postprocess_detections", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.select_training_samples", "<builtin>.zip", "<builtin>.Exception", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.fastrcnn_loss", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.has_keypoint", "torch.where", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.keypointrcnn_inference", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.roi_heads.keypointrcnn_loss"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.setup": ["setuptools.find_packages", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.setup.get_extensions", "setuptools.setup"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.setup.get_extensions": ["torch.cuda.is_available", "os.path.join", "os.getenv", "os.path.abspath", "glob.glob", "torch.utils.cpp_extension.CUDAExtension", "torch.utils.cpp_extension.CppExtension", "os.path.dirname"], "torch.utils.cpp_extension.CUDAExtension": [], "torch.utils.cpp_extension.CppExtension": [], "setuptools.find_packages": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.test_net": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.test_net.main"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.test_net.main": ["maskrcnn_benchmark.utils.collect_env.collect_env_info", "<builtin>.zip", "maskrcnn_benchmark.data.make_data_loader", "maskrcnn_benchmark.utils.logger.setup_logger", "maskrcnn_benchmark.config.cfg.merge_from_list", "maskrcnn_benchmark.utils.comm.get_rank", "maskrcnn_benchmark.engine.inference.inference", "maskrcnn_benchmark.utils.comm.synchronize", "maskrcnn_benchmark.utils.checkpoint.DetectronCheckpointer", "maskrcnn_benchmark.modeling.detector.build_detection_model", "<builtin>.len", "os.path.join", "<builtin>.int", "argparse.ArgumentParser", "maskrcnn_benchmark.config.cfg.freeze", "maskrcnn_benchmark.config.cfg.merge_from_file", "torch.distributed.init_process_group", "torch.cuda.set_device", "<builtin>.enumerate", "maskrcnn_benchmark.utils.miscellaneous.mkdir"], "maskrcnn_benchmark.utils.comm.synchronize": [], "maskrcnn_benchmark.config.cfg.merge_from_file": [], "maskrcnn_benchmark.config.cfg.merge_from_list": [], "maskrcnn_benchmark.config.cfg.freeze": [], "maskrcnn_benchmark.utils.comm.get_rank": [], "maskrcnn_benchmark.utils.logger.setup_logger": [], "maskrcnn_benchmark.utils.collect_env.collect_env_info": [], "maskrcnn_benchmark.modeling.detector.build_detection_model": [], "maskrcnn_benchmark.utils.checkpoint.DetectronCheckpointer": [], "maskrcnn_benchmark.utils.miscellaneous.mkdir": [], "maskrcnn_benchmark.data.make_data_loader": [], "maskrcnn_benchmark.engine.inference.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.train_net": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.train_net.main"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.train_net.train": ["maskrcnn_benchmark.modeling.detector.build_detection_model", "torch.nn.parallel.DistributedDataParallel", "torch.device", "maskrcnn_benchmark.data.make_data_loader", "maskrcnn_benchmark.utils.checkpoint.DetectronCheckpointer", "maskrcnn_benchmark.solver.make_optimizer", "maskrcnn_benchmark.solver.make_lr_scheduler", "maskrcnn_benchmark.engine.trainer.do_train", "maskrcnn_benchmark.utils.comm.get_rank"], "maskrcnn_benchmark.solver.make_optimizer": [], "maskrcnn_benchmark.solver.make_lr_scheduler": [], "maskrcnn_benchmark.engine.trainer.do_train": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.train_net.run_test": ["<builtin>.len", "maskrcnn_benchmark.engine.inference.inference", "torch.cuda.empty_cache", "os.path.join", "<builtin>.zip", "maskrcnn_benchmark.data.make_data_loader", "maskrcnn_benchmark.utils.comm.synchronize", "<builtin>.enumerate", "maskrcnn_benchmark.utils.miscellaneous.mkdir"], "torch.cuda.empty_cache": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.train_net.main": ["maskrcnn_benchmark.utils.collect_env.collect_env_info", "<builtin>.print", "maskrcnn_benchmark.utils.miscellaneous.save_config", "<builtin>.open", "maskrcnn_benchmark.utils.logger.setup_logger", "maskrcnn_benchmark.config.cfg.merge_from_list", "maskrcnn_benchmark.utils.comm.get_rank", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.train_net.run_test", "torch.distributed.get_rank", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.train_net.train", "os.environ.get", "torch.distributed.get_world_size", "os.path.join", "torch.distributed.is_available", "<builtin>.int", "argparse.ArgumentParser", "maskrcnn_benchmark.config.cfg.freeze", "maskrcnn_benchmark.config.cfg.merge_from_file", "torch.distributed.is_initialized", "torch.distributed.init_process_group", "maskrcnn_benchmark.utils.miscellaneous.mkdir"], "maskrcnn_benchmark.utils.miscellaneous.save_config": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.instances2dict_with_polygons": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.instances2dict_with_polygons.main", "os.path.join", "os.path.normpath", "sys.path.append", "os.path.dirname"], "os.path.normpath": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.instances2dict_with_polygons.instances2dict_with_polygons": ["sys.stdout.flush", "<builtin>.len", "<builtin>.print", "os.path.abspath", "<builtin>.isinstance", "maskrcnn_benchmark.utils.cv2_util.findContours"], "maskrcnn_benchmark.utils.cv2_util.findContours": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.instances2dict_with_polygons.main": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.instances2dict_with_polygons.instances2dict_with_polygons"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.convert_cityscapes_to_coco": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.convert_cityscapes_to_coco.convert_coco_stuff_mat", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.convert_cityscapes_to_coco.parse_args", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.convert_cityscapes_to_coco.convert_cityscapes_instance_only"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.convert_cityscapes_to_coco.parse_args": ["<builtin>.len", "argparse.ArgumentParser", "sys.exit"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.convert_cityscapes_to_coco.poly_to_box": ["<builtin>.min", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.convert_cityscapes_to_coco.xyxy_to_xywh": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.convert_cityscapes_to_coco.convert_coco_stuff_mat": ["<builtin>.len", "os.path.join", "<builtin>.print", "<builtin>.enumerate", "json.dumps", "<builtin>.open", "h5py.File"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.convert_cityscapes_to_coco.getLabelID": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.convert_cityscapes_to_coco.convert_cityscapes_instance_only": ["<builtin>.len", "os.path.join", "<builtin>.zip", "<builtin>.print", "os.walk", "<builtin>.min", "cityscapesscripts.evaluation.instances2dict_with_polygons.instances2dict_with_polygons", "json.dumps", "<builtin>.open", "json.load", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.convert_cityscapes_to_coco.poly_to_box", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.tools.cityscapes.convert_cityscapes_to_coco.xyxy_to_xywh"], "cityscapesscripts.evaluation.instances2dict_with_polygons.instances2dict_with_polygons": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc._NewEmptyTensorOp.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc._NewEmptyTensorOp.backward": ["torch.autograd.Function.apply"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc.Conv2d.forward": ["<builtin>.zip", "<builtin>.super", "torch.autograd.Function.apply"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc.ConvTranspose2d.forward": ["<builtin>.zip", "<builtin>.super", "torch.autograd.Function.apply"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc.BatchNorm2d.forward": ["<builtin>.super", "torch.autograd.Function.apply"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc.interpolate": ["torch.autograd.Function.apply", "torch.nn.functional.interpolate", "<builtin>.tuple", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc.interpolate._output_size"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc.interpolate._check_size_scale_factor": ["<builtin>.ValueError", "<builtin>.len", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc.interpolate._output_size": ["<builtin>.range", "torch.nn.modules.utils._ntuple", "<builtin>.int", "math.floor", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc.interpolate._check_size_scale_factor"], "torch.nn.modules.utils._ntuple": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc.DFConv2d.__init__": ["<builtin>.len", "torch.nn.Conv2d.__init__", "torch.nn.init.kaiming_uniform_", "<builtin>.super", "<builtin>.isinstance", "maskrcnn_benchmark.layers.DeformConv", "maskrcnn_benchmark.layers.ModulatedDeformConv", "torch.nn.init.constant_"], "torch.nn.Conv2d.__init__": [], "torch.nn.init.kaiming_uniform_": [], "torch.nn.init.constant_": [], "maskrcnn_benchmark.layers.DeformConv": [], "maskrcnn_benchmark.layers.ModulatedDeformConv": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.misc.DFConv2d.forward": ["<builtin>.zip", "torch.nn.Conv2d.__init__", "torch.autograd.Function.apply"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_align": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_align._ROIAlign.forward": ["torch.nn.modules.utils._pair", "maskrcnn_benchmark._C.roi_align_forward"], "torch.nn.modules.utils._pair": [], "maskrcnn_benchmark._C.roi_align_forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_align._ROIAlign": ["torch.autograd.function.once_differentiable"], "torch.autograd.function.once_differentiable": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_align._ROIAlign.backward": ["maskrcnn_benchmark._C.roi_align_backward"], "maskrcnn_benchmark._C.roi_align_backward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_align.ROIAlign.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_align.ROIAlign.forward": ["torch.autograd.Function.apply"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_align.ROIAlign.__repr__": ["<builtin>.str"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.nms": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_pool": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_pool._ROIPool.forward": ["maskrcnn_benchmark._C.roi_pool_forward", "torch.nn.modules.utils._pair"], "maskrcnn_benchmark._C.roi_pool_forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_pool._ROIPool": ["torch.autograd.function.once_differentiable"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_pool._ROIPool.backward": ["maskrcnn_benchmark._C.roi_pool_backward"], "maskrcnn_benchmark._C.roi_pool_backward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_pool.ROIPool.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_pool.ROIPool.forward": ["torch.autograd.Function.apply"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.roi_pool.ROIPool.__repr__": ["<builtin>.str"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.sigmoid_focal_loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.sigmoid_focal_loss._SigmoidFocalLoss.forward": ["maskrcnn_benchmark._C.sigmoid_focalloss_forward"], "maskrcnn_benchmark._C.sigmoid_focalloss_forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.sigmoid_focal_loss._SigmoidFocalLoss": ["torch.autograd.function.once_differentiable"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.sigmoid_focal_loss._SigmoidFocalLoss.backward": ["maskrcnn_benchmark._C.sigmoid_focalloss_backward"], "maskrcnn_benchmark._C.sigmoid_focalloss_backward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.sigmoid_focal_loss.sigmoid_focal_loss_cpu": ["torch.log", "torch.sigmoid", "torch.arange"], "torch.sigmoid": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.sigmoid_focal_loss.SigmoidFocalLoss.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.sigmoid_focal_loss.SigmoidFocalLoss.forward": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.sigmoid_focal_loss.sigmoid_focal_loss_cpu", "torch.autograd.Function.apply"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.sigmoid_focal_loss.SigmoidFocalLoss.__repr__": ["<builtin>.str"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.batch_norm": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.batch_norm.FrozenBatchNorm2d.__init__": ["torch.zeros", "torch.nn.Module.register_buffer", "torch.ones", "<builtin>.super"], "torch.nn.Module.register_buffer": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.batch_norm.FrozenBatchNorm2d.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers._utils": ["<builtin>.ImportError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers._utils._load_C_extensions"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers._utils._load_C_extensions": ["torch.utils.cpp_extension.load", "glob.glob", "torch.cuda.is_available"], "torch.utils.cpp_extension.load": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.smooth_l1_loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.smooth_l1_loss.smooth_l1_loss": ["torch.abs", "torch.where"], "torch.abs": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_pool_func": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_pool_func.DeformRoIPoolingFunction.forward": ["maskrcnn_benchmark._C.deform_psroi_pooling_forward"], "maskrcnn_benchmark._C.deform_psroi_pooling_forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_pool_func.DeformRoIPoolingFunction": ["torch.autograd.function.once_differentiable"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_pool_func.DeformRoIPoolingFunction.backward": ["maskrcnn_benchmark._C.deform_psroi_pooling_backward", "torch.zeros_like"], "maskrcnn_benchmark._C.deform_psroi_pooling_backward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_func": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_func.DeformConvFunction.forward": ["<builtin>.ValueError", "<builtin>.min", "torch.nn.modules.utils._pair", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_func.DeformConvFunction._output_size", "maskrcnn_benchmark._C.deform_conv_forward"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_func.DeformConvFunction._output_size": ["<builtin>.range", "<builtin>.ValueError", "<builtin>.all", "<builtin>.map"], "maskrcnn_benchmark._C.deform_conv_forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_func.DeformConvFunction": ["torch.autograd.function.once_differentiable"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_func.DeformConvFunction.backward": ["<builtin>.min", "maskrcnn_benchmark._C.deform_conv_backward_parameters", "torch.zeros_like", "maskrcnn_benchmark._C.deform_conv_backward_input"], "maskrcnn_benchmark._C.deform_conv_backward_input": [], "maskrcnn_benchmark._C.deform_conv_backward_parameters": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_func.DeformConvFunction._output_size.<lambda1>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_func.ModulatedDeformConvFunction.forward": ["maskrcnn_benchmark._C.modulated_deform_conv_forward", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_func.ModulatedDeformConvFunction._infer_shape"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_func.ModulatedDeformConvFunction._infer_shape": [], "maskrcnn_benchmark._C.modulated_deform_conv_forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_func.ModulatedDeformConvFunction": ["torch.autograd.function.once_differentiable"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_func.ModulatedDeformConvFunction.backward": ["torch.zeros_like", "maskrcnn_benchmark._C.modulated_deform_conv_backward"], "maskrcnn_benchmark._C.modulated_deform_conv_backward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_pool_module": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_pool_module.DeformRoIPooling.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_pool_module.DeformRoIPooling.forward": ["deform_pool_func.deform_roi_pooling"], "deform_pool_func.deform_roi_pooling": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_pool_module.DeformRoIPoolingPack.__init__": ["torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Sequential", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_pool_module.DeformRoIPoolingPack.forward": ["deform_pool_func.deform_roi_pooling"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_pool_module.ModulatedDeformRoIPoolingPack.__init__": ["torch.nn.Linear", "<builtin>.super", "torch.nn.Sigmoid", "torch.nn.ReLU", "torch.nn.Sequential"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_pool_module.ModulatedDeformRoIPoolingPack.forward": ["deform_pool_func.deform_roi_pooling"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.DeformConv.__init__": ["torch.nn.modules.utils._pair", "<builtin>.super", "torch.nn.Parameter", "torch.Tensor", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.DeformConv.reset_parameters"], "torch.nn.Parameter": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.DeformConv.reset_parameters": ["math.sqrt"], "math.sqrt": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.DeformConv.forward": ["deform_conv_func.deform_conv"], "deform_conv_func.deform_conv": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.DeformConv.__repr__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.ModulatedDeformConv.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.ModulatedDeformConv.reset_parameters", "torch.nn.modules.utils._pair", "<builtin>.super", "torch.nn.Parameter", "torch.nn.Module.register_parameter", "torch.Tensor"], "torch.nn.Module.register_parameter": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.ModulatedDeformConv.reset_parameters": ["math.sqrt"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.ModulatedDeformConv.forward": ["deform_conv_func.modulated_deform_conv"], "deform_conv_func.modulated_deform_conv": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.ModulatedDeformConv.__repr__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.ModulatedDeformConvPack.__init__": ["torch.nn.Conv2d", "torch.nn.modules.utils._pair", "<builtin>.super", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.ModulatedDeformConvPack.init_offset"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.ModulatedDeformConvPack.init_offset": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.layers.dcn.deform_conv_module.ModulatedDeformConvPack.forward": ["torch.cat", "deform_conv_func.modulated_deform_conv", "torch.chunk", "torch.sigmoid"], "torch.chunk": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__init__": ["torch.empty", "<builtin>.len", "<builtin>.tuple", "torch.stack", "pycocotools.mask.decode", "<builtin>.type", "torch.tensor", "<builtin>.RuntimeError", "maskrcnn_benchmark.layers.misc.interpolate", "pycocotools.mask.frPyObjects", "<builtin>.isinstance"], "torch.empty": [], "maskrcnn_benchmark.layers.misc.interpolate": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.transpose": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.crop": ["<builtin>.type", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__init__", "<builtin>.min", "<builtin>.round", "<builtin>.float", "<builtin>.str", "<builtin>.isinstance", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.resize": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__init__", "maskrcnn_benchmark.layers.misc.interpolate", "<builtin>.map", "<builtin>.iter", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.convert_to_polygon": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList._findContours", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__init__": ["<builtin>.len", "<builtin>.tuple", "<builtin>.type", "<builtin>.RuntimeError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonInstance.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__iter__", "<builtin>.str", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__iter__", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList._findContours": ["<builtin>.len", "maskrcnn_benchmark.utils.cv2_util.findContours", "cv2.UMat"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.to": [], "cv2.UMat": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__getitem__": ["<builtin>.RuntimeError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__iter__": ["<builtin>.iter"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__repr__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonInstance.__init__": ["<builtin>.len", "<builtin>.tuple", "<builtin>.type", "<builtin>.RuntimeError", "copy.copy", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__iter__", "torch.as_tensor", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__iter__", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__iter__": ["<builtin>.iter"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonInstance.transpose": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__iter__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__iter__", "<builtin>.NotImplementedError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonInstance.__init__"], "<builtin>.NotImplementedError": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonInstance.crop": ["<builtin>.type", "<builtin>.min", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonInstance.__init__", "<builtin>.map", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__iter__", "<builtin>.str", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__iter__", "<builtin>.isinstance", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonInstance.resize": ["<builtin>.tuple", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonInstance.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__iter__", "<builtin>.float", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__iter__", "<builtin>.iter", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonInstance.convert_to_binarymask": ["pycocotools.mask.frPyObjects", "pycocotools.mask.merge", "torch.from_numpy", "pycocotools.mask.decode"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonInstance.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonInstance.__repr__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.transpose": ["<builtin>.NotImplementedError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.crop": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.resize": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.to": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.convert_to_binarymask": ["torch.empty", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__init__", "torch.stack"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__getitem__": ["<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__repr__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__init__": ["<builtin>.len", "<builtin>.NotImplementedError", "<builtin>.tuple", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__init__", "<builtin>.str", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.transpose": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.transpose", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.transpose"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.crop": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.crop", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.crop", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.resize": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.resize", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.resize"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.to": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.convert": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.convert_to_polygon", "<builtin>.NotImplementedError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.convert_to_binarymask", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.get_mask_tensor": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.convert_to_binarymask"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__getitem__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.PolygonList.__getitem__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.BinaryMaskList.__getitem__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__iter__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__next__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__getitem__", "<builtin>.StopIteration", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__len__"], "<builtin>.StopIteration": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask.__repr__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.boxlist_ops": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.boxlist_ops._box_nms": ["torch.ops.torch_ipex.nms"], "torch.ops.torch_ipex.nms": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.boxlist_ops.boxlist_nms": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.boxlist_ops._box_nms"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.boxlist_ops.remove_small_boxes": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.boxlist_ops.boxlist_iou": ["<builtin>.len", "<builtin>.RuntimeError", "torch.min", "torch.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.boxlist_ops._cat": ["torch.cat", "<builtin>.len", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.boxlist_ops.cat_boxlist": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.boxlist_ops._cat", "<builtin>.all", "bounding_box.BoxList", "<builtin>.set", "<builtin>.isinstance"], "bounding_box.BoxList": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint._create_flip_indices", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint.kp_connections"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint.Keypoints.__init__": ["torch.as_tensor", "<builtin>.isinstance", "torch.device"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint.Keypoints.crop": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint.Keypoints.resize": ["<builtin>.zip", "<builtin>.tuple", "<builtin>.float", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint.Keypoints.transpose": ["<builtin>.NotImplementedError", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint.Keypoints.to": ["<builtin>.hasattr", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint.Keypoints.__getitem__": ["<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint.Keypoints.add_field": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint.Keypoints.get_field": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint.Keypoints.__repr__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint._create_flip_indices": ["torch.tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint.kp_connections": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.keypoint.keypoints_to_heat_map": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.resize", "<builtin>.print", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.transpose"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.__init__": ["<builtin>.ValueError", "torch.as_tensor", "<builtin>.isinstance", "torch.device"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.add_field": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.get_field": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.has_field": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.fields": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList._copy_extra_fields": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.convert": ["<builtin>.ValueError", "torch.cat", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList._copy_extra_fields", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList._split_into_xyxy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList._split_into_xyxy": ["<builtin>.RuntimeError"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.resize": ["<builtin>.tuple", "<builtin>.zip", "torch.cat", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.__init__", "<builtin>.float", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.convert", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList._split_into_xyxy", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.add_field"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.transpose": ["<builtin>.NotImplementedError", "torch.cat", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.convert", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList._split_into_xyxy", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.add_field"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.crop": ["torch.cat", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.convert", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList._split_into_xyxy", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.add_field"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.to": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.to", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.add_field", "<builtin>.hasattr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.__getitem__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.add_field"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.__len__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.clip_to_image": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.area": ["<builtin>.RuntimeError"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.copy_with_fields": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.get_field", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.has_field", "<builtin>.KeyError", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.add_field"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.bounding_box.BoxList.__repr__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.image_list": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.image_list.ImageList.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.image_list.ImageList.to": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.image_list.ImageList.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.image_list.to_image_list": ["<builtin>.tuple", "<builtin>.len", "<builtin>.type", "<builtin>.zip", "<builtin>.TypeError", "math.ceil", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.structures.image_list.ImageList.__init__", "<builtin>.int", "<builtin>.isinstance", "<builtin>.list", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.config": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.config.paths_catalog": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.config.paths_catalog.DatasetCatalog": ["os.environ.get"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.config.paths_catalog.DatasetCatalog.get": ["os.path.join", "<builtin>.dict", "<builtin>.RuntimeError", "copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.config.paths_catalog.ModelCatalog.get": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.config.paths_catalog.ModelCatalog.get_c2_imagenet_pretrained", "<builtin>.RuntimeError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.config.paths_catalog.ModelCatalog.get_c2_detectron_12_2017_baselines"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.config.paths_catalog.ModelCatalog.get_c2_detectron_12_2017_baselines": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.config.paths_catalog.ModelCatalog.get_c2_imagenet_pretrained": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.config.defaults": ["<builtin>.range", "<builtin>.tuple", "os.path.join", "yacs.config.CfgNode", "os.path.dirname"], "yacs.config.CfgNode": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.metric_logger": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.metric_logger.SmoothedValue.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.metric_logger.SmoothedValue.update": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.metric_logger.SmoothedValue.median": ["torch.tensor", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.metric_logger.SmoothedValue.avg": ["torch.tensor", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.metric_logger.SmoothedValue.global_avg": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.metric_logger.MetricLogger.__init__": ["collections.defaultdict"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.metric_logger.MetricLogger.update": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.metric_logger.MetricLogger.__getattr__": ["<builtin>.AttributeError", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.metric_logger.MetricLogger.__str__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.env": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.env.setup_environment"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.env.setup_environment": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.env.setup_custom_environment", "os.environ.get"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.env.setup_custom_environment": ["maskrcnn_benchmark.utils.imports.import_file", "<builtin>.hasattr", "<builtin>.callable"], "maskrcnn_benchmark.utils.imports.import_file": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer.__init__": ["logging.getLogger"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer.save": ["os.path.join", "torch.save", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer.tag_last_checkpoint"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer.tag_last_checkpoint": ["os.path.join", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer.load": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer._load_model", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer.get_checkpoint_file", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer._load_file", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer.has_checkpoint"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer.has_checkpoint": ["os.path.join", "os.path.exists"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer.get_checkpoint_file": ["os.path.join", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer._load_file": ["torch.load", "torch.device"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.Checkpointer._load_model": ["maskrcnn_benchmark.utils.model_serialization.load_state_dict"], "maskrcnn_benchmark.utils.model_serialization.load_state_dict": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.DetectronCheckpointer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.checkpoint.DetectronCheckpointer._load_file": ["<builtin>.dict", "<builtin>.len", "maskrcnn_benchmark.utils.imports.import_file", "<builtin>.super", "maskrcnn_benchmark.utils.model_zoo.cache_url", "maskrcnn_benchmark.utils.c2_model_loading.load_c2_format"], "maskrcnn_benchmark.utils.model_zoo.cache_url": [], "maskrcnn_benchmark.utils.c2_model_loading.load_c2_format": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.comm": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.comm.get_world_size": ["torch.distributed.is_initialized", "torch.distributed.get_world_size", "torch.distributed.is_available"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.comm.get_rank": ["torch.distributed.is_initialized", "torch.distributed.is_available", "torch.distributed.get_rank"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.comm.is_main_process": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.comm.get_rank"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.comm.synchronize": ["torch.distributed.is_initialized", "torch.distributed.get_world_size", "torch.distributed.is_available", "torch.distributed.barrier"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.comm.all_gather": ["<builtin>.range", "torch.cat", "<builtin>.zip", "pickle.dumps", "torch.LongTensor", "<builtin>.max", "torch.ByteStorage.from_buffer", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.comm.get_world_size", "<builtin>.int", "pickle.loads", "torch.distributed.all_gather", "torch.ByteTensor"], "pickle.dumps": [], "torch.ByteStorage.from_buffer": [], "torch.ByteTensor": [], "torch.LongTensor": [], "pickle.loads": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.comm.reduce_dict": ["torch.stack", "torch.distributed.get_rank", "<builtin>.zip", "torch.distributed.reduce", "torch.no_grad", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.comm.get_world_size", "<builtin>.sorted"], "torch.distributed.reduce": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading": ["maskrcnn_benchmark.utils.registry.Registry"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading._rename_basic_resnet_weights": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading._rename_fpn_weights": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading._rename_weights_for_resnet": ["<builtin>.len", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading._rename_basic_resnet_weights", "collections.OrderedDict", "<builtin>.max", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading._rename_fpn_weights", "logging.getLogger", "torch.from_numpy", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading._load_c2_pickled_weights": ["<builtin>.open", "pickle.load"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading._rename_conv_weights_for_deformable_conv_layers": ["logging.getLogger", "re.match", "<builtin>.enumerate", "<builtin>.sorted"], "maskrcnn_benchmark.utils.registry.Registry": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading.load_resnet_c2_format": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading._load_c2_pickled_weights", "<builtin>.dict", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading._rename_weights_for_resnet", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading._rename_conv_weights_for_deformable_conv_layers"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.c2_model_loading.load_c2_format": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.registry": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.registry._register_generic": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.registry.Registry.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.registry.Registry.register": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.registry._register_generic"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.registry.Registry.register.register_fn": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.registry._register_generic"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.model_zoo": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.model_zoo.cache_url": ["os.makedirs", "os.path.expanduser", "<builtin>.len", "torch.hub.urlparse", "os.path.join", "sys.stderr.write", "os.path.exists", "torch.hub.HASH_REGEX.search", "torch.utils.model_zoo.HASH_REGEX.search", "torch.hub._download_url_to_file", "maskrcnn_benchmark.utils.comm.synchronize", "os.getenv", "torch.utils.model_zoo._download_url_to_file", "maskrcnn_benchmark.utils.comm.is_main_process", "os.path.basename", "torch.utils.model_zoo.urlparse"], "torch.hub.urlparse": [], "torch.utils.model_zoo.urlparse": [], "maskrcnn_benchmark.utils.comm.is_main_process": [], "sys.stderr.write": [], "torch.hub.HASH_REGEX.search": [], "torch.utils.model_zoo.HASH_REGEX.search": [], "torch.utils.model_zoo._download_url_to_file": [], "torch.hub._download_url_to_file": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.collect_env": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.collect_env.get_pil_version": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.collect_env.collect_env_info": ["torch.utils.collect_env.get_pretty_env_info", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.collect_env.get_pil_version"], "torch.utils.collect_env.get_pretty_env_info": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.timer": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.timer.Timer.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.timer.Timer.reset"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.timer.Timer.reset": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.timer.Timer.average_time": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.timer.Timer.tic": ["time.time"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.timer.Timer.toc": ["time.time", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.timer.Timer.add"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.timer.Timer.add": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.timer.Timer.avg_time_str": ["datetime.timedelta", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.timer.get_time_str": ["datetime.timedelta", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.logger": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.logger.setup_logger": ["logging.FileHandler", "logging.Formatter", "os.path.join", "logging.getLogger", "logging.StreamHandler"], "logging.Formatter": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.cv2_util": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.cv2_util.findContours": ["cv2.findContours", "cv2.__version__.startswith", "<builtin>.AssertionError"], "cv2.__version__.startswith": [], "cv2.findContours": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.imports": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.imports.import_file": ["importlib.util.spec_from_file_location", "importlib.util.module_from_spec"], "importlib.util.spec_from_file_location": [], "importlib.util.module_from_spec": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.model_serialization": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.model_serialization.align_and_update_state_dicts": ["<builtin>.len", "<builtin>.tuple", "<builtin>.enumerate", "<builtin>.max", "logging.getLogger", "torch.as_tensor", "<builtin>.list", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.model_serialization.strip_prefix_if_present": ["<builtin>.all", "<builtin>.sorted", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.model_serialization.load_state_dict": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.model_serialization.align_and_update_state_dicts", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.model_serialization.strip_prefix_if_present"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.miscellaneous": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.miscellaneous.mkdir": ["os.makedirs"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.miscellaneous.save_labels": ["json.dump", "os.path.join", "<builtin>.hasattr", "<builtin>.open", "logging.getLogger", "comm.is_main_process"], "comm.is_main_process": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.utils.miscellaneous.save_config": ["<builtin>.open", "comm.is_main_process"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.solver.build": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.solver.build.make_optimizer": ["torch.optim.SGD"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.solver.build.make_lr_scheduler": ["lr_scheduler.WarmupMultiStepLR"], "lr_scheduler.WarmupMultiStepLR": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.solver.lr_scheduler": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.solver.lr_scheduler.WarmupMultiStepLR.__init__": ["<builtin>.ValueError", "<builtin>.super", "<builtin>.list", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.solver.lr_scheduler.WarmupMultiStepLR.get_lr": ["bisect.bisect_right", "<builtin>.float"], "bisect.bisect_right": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.solver": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.poolers": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.poolers.LevelMapper.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.poolers.LevelMapper.__call__": ["torch.log2", "torch.sqrt", "torch.clamp", "utils.cat", "torch.floor"], "utils.cat": [], "torch.sqrt": [], "torch.floor": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.poolers.Pooler.__init__": ["torch.log2", "torch.nn.ModuleList", "intel_extension_for_pytorch.nn.modules._roi_align.RoIAlign", "torch.tensor", "<builtin>.super", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.poolers.LevelMapper.__init__"], "intel_extension_for_pytorch.nn.modules._roi_align.RoIAlign": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.poolers.Pooler.convert_to_roi_format": ["<builtin>.len", "torch.cat", "<builtin>.enumerate", "utils.cat", "torch.full"], "torch.full": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.poolers.Pooler.forward": ["torch.zeros", "<builtin>.len", "torch.nonzero", "<builtin>.zip", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.poolers.Pooler.convert_to_roi_format", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.poolers.LevelMapper.__init__"], "torch.nonzero": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.poolers.make_pooler": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.poolers.Pooler.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.matcher": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.matcher.Matcher.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.matcher.Matcher.__call__": ["<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.matcher.Matcher.set_low_quality_matches_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.matcher.Matcher.set_low_quality_matches_": ["torch.nonzero"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.registry": ["maskrcnn_benchmark.utils.registry.Registry"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.box_coder": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.box_coder.BoxCoder.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.box_coder.BoxCoder.encode": ["torch.log", "torch.stack"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.box_coder.BoxCoder.decode": ["torch.clamp", "torch.zeros_like", "torch.exp"], "torch.exp": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.utils": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.utils.cat": ["torch.cat", "<builtin>.len", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.make_layers": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.make_layers.get_group_gn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.make_layers.group_norm": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.make_layers.get_group_gn", "torch.nn.GroupNorm"], "torch.nn.GroupNorm": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.make_layers.make_conv3x3": ["<builtin>.len", "torch.nn.Conv2d", "torch.nn.init.normal_", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.make_layers.group_norm", "torch.nn.ReLU", "torch.nn.Sequential", "torch.nn.init.kaiming_normal_", "torch.nn.init.constant_"], "torch.nn.init.normal_": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.make_layers.make_fc": ["torch.nn.Linear", "torch.nn.init.kaiming_uniform_", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.make_layers.group_norm", "torch.nn.Sequential", "torch.nn.init.constant_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.make_layers.conv_with_kaiming_uniform": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.make_layers.conv_with_kaiming_uniform.make_conv": ["<builtin>.len", "torch.nn.Conv2d", "torch.nn.init.kaiming_uniform_", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.make_layers.group_norm", "torch.nn.ReLU", "torch.nn.Sequential", "torch.nn.init.constant_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.balanced_positive_negative_sampler": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.balanced_positive_negative_sampler.BalancedPositiveNegativeSampler.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.balanced_positive_negative_sampler.BalancedPositiveNegativeSampler.__call__": ["torch.nonzero", "<builtin>.min", "torch.randperm", "torch.zeros_like", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNHeadConvRegressor.__init__": ["torch.nn.Conv2d", "<builtin>.super", "torch.nn.init.normal_", "torch.nn.init.constant_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNHeadConvRegressor.forward": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNHeadFeatureSingleConv.__init__": ["torch.nn.Conv2d", "<builtin>.super", "torch.nn.init.normal_", "torch.nn.init.constant_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNHeadFeatureSingleConv.forward": ["<builtin>.isinstance", "torch.nn.functional.relu"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNHead.__init__": ["torch.nn.Conv2d", "<builtin>.super", "torch.nn.init.normal_", "torch.nn.init.constant_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNHead.forward": ["torch.nn.functional.relu"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNModule.__init__": ["<builtin>.super", "anchor_generator.make_anchor_generator", "maskrcnn_benchmark.modeling.box_coder.BoxCoder", "loss.make_rpn_loss_evaluator", "inference.make_rpn_postprocessor"], "anchor_generator.make_anchor_generator": [], "maskrcnn_benchmark.modeling.box_coder.BoxCoder": [], "inference.make_rpn_postprocessor": [], "loss.make_rpn_loss_evaluator": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNModule.forward": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNModule._forward_test", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNModule._forward_train"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNModule._forward_train": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNModule._forward_test": ["<builtin>.zip"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.build_rpn": ["maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.build_retinanet", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.rpn.RPNModule.__init__"], "maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.build_retinanet": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.loss.RPNLossComputation.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.loss.RPNLossComputation.match_targets_to_anchors": ["maskrcnn_benchmark.structures.boxlist_ops.boxlist_iou"], "maskrcnn_benchmark.structures.boxlist_ops.boxlist_iou": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.loss.RPNLossComputation.prepare_targets": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.loss.generate_rpn_labels", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.loss.RPNLossComputation.match_targets_to_anchors"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.loss.generate_rpn_labels": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.loss.RPNLossComputation.__call__": ["maskrcnn_benchmark.structures.boxlist_ops.cat_boxlist", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.loss.RPNLossComputation.prepare_targets", "torch.nonzero", "torch.cat", "utils.concat_box_prediction_layers", "torch.nn.functional.binary_cross_entropy_with_logits", "maskrcnn_benchmark.layers.smooth_l1_loss"], "maskrcnn_benchmark.structures.boxlist_ops.cat_boxlist": [], "utils.concat_box_prediction_layers": [], "maskrcnn_benchmark.layers.smooth_l1_loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.loss.make_rpn_loss_evaluator": ["maskrcnn_benchmark.modeling.matcher.Matcher", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.loss.RPNLossComputation.__init__", "balanced_positive_negative_sampler.BalancedPositiveNegativeSampler"], "maskrcnn_benchmark.modeling.matcher.Matcher": [], "balanced_positive_negative_sampler.BalancedPositiveNegativeSampler": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.BufferList.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.BufferList.extend", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.BufferList.extend": ["<builtin>.str", "<builtin>.len", "torch.nn.Module.register_buffer", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.BufferList.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.BufferList.__iter__": ["<builtin>.iter"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.AnchorGenerator.__init__": ["<builtin>.len", "<builtin>.zip", "<builtin>.RuntimeError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.generate_anchors", "<builtin>.super", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.BufferList.__init__", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.generate_anchors": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator._generate_anchors", "numpy.array"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.AnchorGenerator.num_anchors_per_location": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.AnchorGenerator.grid_anchors": ["<builtin>.zip", "torch.meshgrid", "torch.stack", "torch.arange"], "torch.meshgrid": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.AnchorGenerator.add_visibility_to": ["torch.ones"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.AnchorGenerator.forward": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.AnchorGenerator.add_visibility_to", "maskrcnn_benchmark.structures.bounding_box.BoxList", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.AnchorGenerator.grid_anchors", "<builtin>.enumerate"], "maskrcnn_benchmark.structures.bounding_box.BoxList": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.make_anchor_generator": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.AnchorGenerator.__init__", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.make_anchor_generator_retinanet": ["<builtin>.range", "<builtin>.len", "<builtin>.tuple", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator.AnchorGenerator.__init__", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator._generate_anchors": ["<builtin>.range", "numpy.array", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator._ratio_enum", "numpy.vstack", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator._scale_enum", "torch.from_numpy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator._ratio_enum": ["numpy.sqrt", "numpy.round", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator._whctrs", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator._mkanchors"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator._scale_enum": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator._whctrs", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator._mkanchors"], "numpy.vstack": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator._whctrs": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.anchor_generator._mkanchors": ["numpy.hstack"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.utils": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.utils.permute_and_flatten": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.utils.concat_box_prediction_layers": ["<builtin>.zip", "utils.cat", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.utils.permute_and_flatten"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.inference.RPNPostProcessor.__init__": ["maskrcnn_benchmark.modeling.box_coder.BoxCoder", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.inference.RPNPostProcessor.add_gt_proposals": ["maskrcnn_benchmark.structures.boxlist_ops.cat_boxlist", "<builtin>.zip", "<builtin>.len", "torch.ones"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.inference.RPNPostProcessor.forward_for_single_feature_map": ["utils.permute_and_flatten", "torch.arange", "torch.cat", "<builtin>.min", "<builtin>.zip", "torch.ops.torch_ipex.rpn_nms", "maskrcnn_benchmark.structures.bounding_box.BoxList"], "utils.permute_and_flatten": [], "torch.ops.torch_ipex.rpn_nms": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.inference.RPNPostProcessor.forward": ["maskrcnn_benchmark.structures.boxlist_ops.cat_boxlist", "<builtin>.len", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.inference.RPNPostProcessor.forward_for_single_feature_map", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.inference.RPNPostProcessor.add_gt_proposals", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.inference.RPNPostProcessor.select_over_all_levels", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.inference.RPNPostProcessor.select_over_all_levels": ["<builtin>.range", "<builtin>.len", "torch.cat", "<builtin>.min", "torch.zeros_like", "torch.topk"], "torch.topk": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.inference.make_rpn_postprocessor": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.inference.RPNPostProcessor.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.loss.RetinaNetLossComputation.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.loss.RetinaNetLossComputation.__call__": ["maskrcnn_benchmark.structures.boxlist_ops.cat_boxlist", "<builtin>.len", "torch.nonzero", "torch.cat", "maskrcnn_benchmark.modeling.rpn.loss.RPNLossComputation.prepare_targets", "utils.concat_box_prediction_layers", "maskrcnn_benchmark.layers.smooth_l1_loss", "<builtin>.max"], "maskrcnn_benchmark.modeling.rpn.loss.RPNLossComputation.prepare_targets": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.loss.generate_retinanet_labels": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.loss.make_retinanet_loss_evaluator": ["maskrcnn_benchmark.modeling.matcher.Matcher", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.loss.RetinaNetLossComputation.__init__", "maskrcnn_benchmark.layers.SigmoidFocalLoss"], "maskrcnn_benchmark.layers.SigmoidFocalLoss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.inference.RetinaNetPostProcessor.__init__": ["maskrcnn_benchmark.modeling.box_coder.BoxCoder", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.inference.RetinaNetPostProcessor.add_gt_proposals": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.inference.RetinaNetPostProcessor.forward_for_single_feature_map": ["utils.permute_and_flatten", "<builtin>.zip", "maskrcnn_benchmark.structures.boxlist_ops.remove_small_boxes", "maskrcnn_benchmark.structures.bounding_box.BoxList"], "maskrcnn_benchmark.structures.boxlist_ops.remove_small_boxes": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.inference.RetinaNetPostProcessor.select_over_all_levels": ["<builtin>.range", "maskrcnn_benchmark.structures.boxlist_ops.cat_boxlist", "<builtin>.len", "torch.nonzero", "torch.kthvalue", "maskrcnn_benchmark.structures.bounding_box.BoxList", "torch.full", "maskrcnn_benchmark.structures.boxlist_ops.boxlist_nms"], "maskrcnn_benchmark.structures.boxlist_ops.boxlist_nms": [], "torch.kthvalue": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.inference.make_retinanet_postprocessor": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.inference.RetinaNetPostProcessor.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.RetinaNetHead.__init__": ["<builtin>.range", "<builtin>.len", "torch.nn.Conv2d", "torch.nn.init.normal_", "<builtin>.super", "torch.nn.ReLU", "torch.nn.Sequential", "math.log", "<builtin>.isinstance", "torch.nn.Module.add_module", "torch.nn.init.constant_"], "torch.nn.Module.add_module": [], "math.log": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.RetinaNetHead.forward": ["torch.nn.Module.bbox_tower", "torch.nn.Module.cls_tower"], "torch.nn.Module.cls_tower": [], "torch.nn.Module.bbox_tower": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.RetinaNetModule.__init__": ["loss.make_retinanet_loss_evaluator", "<builtin>.super", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.RetinaNetHead.__init__", "inference.make_retinanet_postprocessor", "maskrcnn_benchmark.modeling.box_coder.BoxCoder", "anchor_generator.make_anchor_generator_retinanet"], "anchor_generator.make_anchor_generator_retinanet": [], "inference.make_retinanet_postprocessor": [], "loss.make_retinanet_loss_evaluator": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.RetinaNetModule.forward": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.RetinaNetModule._forward_test", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.RetinaNetModule._forward_train", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.RetinaNetHead.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.RetinaNetModule._forward_train": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.RetinaNetModule._forward_test": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.build_retinanet": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.rpn.retinanet.retinanet.RetinaNetModule.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.detector.generalized_rcnn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.detector.generalized_rcnn.GeneralizedRCNN.__init__": ["roi_heads.roi_heads.build_roi_heads", "rpn.rpn.build_rpn", "<builtin>.super", "backbone.build_backbone"], "backbone.build_backbone": [], "rpn.rpn.build_rpn": [], "roi_heads.roi_heads.build_roi_heads": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.detector.generalized_rcnn.GeneralizedRCNN.forward": ["<builtin>.ValueError", "maskrcnn_benchmark.structures.image_list.to_image_list"], "maskrcnn_benchmark.structures.image_list.to_image_list": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.detector": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.detector.detectors": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.detector.detectors.build_detection_model": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.roi_heads": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.roi_heads.CombinedROIHeads.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.roi_heads.CombinedROIHeads.forward": ["torch.nn.ModuleDict.mask", "torch.nn.ModuleDict.box", "torch.nn.ModuleDict.keypoint"], "torch.nn.ModuleDict.box": [], "torch.nn.ModuleDict.mask": [], "torch.nn.ModuleDict.keypoint": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.roi_heads.build_roi_heads": ["keypoint_head.keypoint_head.build_roi_keypoint_head", "box_head.box_head.build_roi_box_head", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.roi_heads.CombinedROIHeads.__init__", "mask_head.mask_head.build_roi_mask_head", "torch.nn.ModuleDict.append"], "box_head.box_head.build_roi_box_head": [], "torch.nn.ModuleDict.append": [], "mask_head.mask_head.build_roi_mask_head": [], "keypoint_head.keypoint_head.build_roi_keypoint_head": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.box_head": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.box_head.ROIBoxHead.__init__": ["inference.make_roi_box_post_processor", "loss.make_roi_box_loss_evaluator", "<builtin>.super", "roi_box_feature_extractors.make_roi_box_feature_extractor", "roi_box_predictors.make_roi_box_predictor"], "roi_box_feature_extractors.make_roi_box_feature_extractor": [], "roi_box_predictors.make_roi_box_predictor": [], "inference.make_roi_box_post_processor": [], "loss.make_roi_box_loss_evaluator": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.box_head.ROIBoxHead.forward": ["<builtin>.dict", "torch.no_grad"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.box_head.build_roi_box_head": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.box_head.ROIBoxHead.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.loss.FastRCNNLossComputation.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.loss.FastRCNNLossComputation.match_targets_to_proposals": ["maskrcnn_benchmark.structures.boxlist_ops.boxlist_iou"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.loss.FastRCNNLossComputation.prepare_targets": ["<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.loss.FastRCNNLossComputation.match_targets_to_proposals"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.loss.FastRCNNLossComputation.subsample": ["torch.nonzero", "<builtin>.zip", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.loss.FastRCNNLossComputation.prepare_targets", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.loss.FastRCNNLossComputation.__call__": ["torch.nn.functional.cross_entropy", "torch.nonzero", "<builtin>.RuntimeError", "torch.tensor", "<builtin>.hasattr", "maskrcnn_benchmark.layers.smooth_l1_loss", "maskrcnn_benchmark.modeling.utils.cat"], "maskrcnn_benchmark.modeling.utils.cat": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.loss.make_roi_box_loss_evaluator": ["maskrcnn_benchmark.modeling.matcher.Matcher", "maskrcnn_benchmark.modeling.box_coder.BoxCoder", "maskrcnn_benchmark.modeling.balanced_positive_negative_sampler.BalancedPositiveNegativeSampler", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.loss.FastRCNNLossComputation.__init__"], "maskrcnn_benchmark.modeling.balanced_positive_negative_sampler.BalancedPositiveNegativeSampler": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.inference.PostProcessor.__init__": ["maskrcnn_benchmark.modeling.box_coder.BoxCoder", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.inference.PostProcessor.forward": ["<builtin>.len", "torch.cat", "<builtin>.sum", "<builtin>.zip", "maskrcnn_benchmark.structures.bounding_box.BoxList", "torch.ops.torch_ipex.box_head_nms", "torch.nn.functional.softmax"], "torch.ops.torch_ipex.box_head_nms": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.inference.PostProcessor.prepare_boxlist": ["maskrcnn_benchmark.structures.bounding_box.BoxList"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.inference.PostProcessor.filter_results": ["<builtin>.range", "maskrcnn_benchmark.structures.boxlist_ops.cat_boxlist", "<builtin>.len", "torch.nonzero", "torch.kthvalue", "maskrcnn_benchmark.structures.bounding_box.BoxList", "torch.full"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.inference.make_roi_box_post_processor": ["maskrcnn_benchmark.modeling.box_coder.BoxCoder", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.inference.PostProcessor.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_predictors": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_predictors.FastRCNNPredictor.__init__": ["torch.nn.Linear", "torch.nn.init.normal_", "<builtin>.super", "torch.nn.AdaptiveAvgPool2d", "torch.nn.init.constant_"], "torch.nn.AdaptiveAvgPool2d": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_predictors.FastRCNNPredictor.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_predictors.FPNPredictor.__init__": ["torch.nn.Linear", "torch.nn.init.normal_", "<builtin>.super", "torch.nn.init.constant_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_predictors.FPNPredictor.forward": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_predictors.make_roi_box_predictor": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_feature_extractors": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_feature_extractors.ResNet50Conv5ROIFeatureExtractor.__init__": ["maskrcnn_benchmark.modeling.backbone.resnet.StageSpec", "maskrcnn_benchmark.modeling.backbone.resnet.ResNetHead", "<builtin>.super", "maskrcnn_benchmark.modeling.poolers.Pooler"], "maskrcnn_benchmark.modeling.poolers.Pooler": [], "maskrcnn_benchmark.modeling.backbone.resnet.StageSpec": [], "maskrcnn_benchmark.modeling.backbone.resnet.ResNetHead": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_feature_extractors.ResNet50Conv5ROIFeatureExtractor.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_feature_extractors.FPN2MLPFeatureExtractor.__init__": ["maskrcnn_benchmark.modeling.make_layers.make_fc", "<builtin>.super", "maskrcnn_benchmark.modeling.poolers.Pooler"], "maskrcnn_benchmark.modeling.make_layers.make_fc": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_feature_extractors.FPN2MLPFeatureExtractor.forward": ["torch.nn.functional.relu"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_feature_extractors.FPNXconv1fcFeatureExtractor.__init__": ["<builtin>.range", "torch.nn.Conv2d", "maskrcnn_benchmark.modeling.make_layers.group_norm", "torch.nn.init.normal_", "<builtin>.super", "torch.nn.ReLU", "torch.nn.Sequential", "maskrcnn_benchmark.modeling.make_layers.make_fc", "torch.nn.init.constant_", "<builtin>.isinstance", "torch.nn.Module.add_module", "maskrcnn_benchmark.modeling.poolers.Pooler"], "maskrcnn_benchmark.modeling.make_layers.group_norm": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_feature_extractors.FPNXconv1fcFeatureExtractor.forward": ["torch.nn.Module.xconvs", "torch.nn.functional.relu"], "torch.nn.Module.xconvs": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.box_head.roi_box_feature_extractors.make_roi_box_feature_extractor": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.mask_head": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.mask_head.keep_only_positive_boxes": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.mask_head.ROIMaskHead.__init__": ["roi_mask_feature_extractors.make_roi_mask_feature_extractor", "<builtin>.super", "loss.make_roi_mask_loss_evaluator", "roi_mask_predictors.make_roi_mask_predictor", "inference.make_roi_mask_post_processor"], "roi_mask_feature_extractors.make_roi_mask_feature_extractor": [], "roi_mask_predictors.make_roi_mask_predictor": [], "inference.make_roi_mask_post_processor": [], "loss.make_roi_mask_loss_evaluator": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.mask_head.ROIMaskHead.forward": ["<builtin>.dict", "torch.cat", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.mask_head.keep_only_positive_boxes"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.mask_head.build_roi_mask_head": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.mask_head.ROIMaskHead.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.roi_mask_feature_extractors": ["maskrcnn_benchmark.modeling.registry.ROI_MASK_FEATURE_EXTRACTORS.register"], "maskrcnn_benchmark.modeling.registry.ROI_MASK_FEATURE_EXTRACTORS.register": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.roi_mask_feature_extractors.MaskRCNNFPNFeatureExtractor.__init__": ["maskrcnn_benchmark.modeling.make_layers.make_conv3x3", "<builtin>.super", "<builtin>.enumerate", "torch.nn.Module.add_module", "maskrcnn_benchmark.modeling.poolers.Pooler"], "maskrcnn_benchmark.modeling.make_layers.make_conv3x3": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.roi_mask_feature_extractors.MaskRCNNFPNFeatureExtractor.forward": ["torch.nn.functional.relu", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.roi_mask_feature_extractors.make_roi_mask_feature_extractor": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.loss.project_masks_on_boxes": ["torch.empty", "<builtin>.len", "torch.stack", "torch.device", "<builtin>.zip"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.loss.MaskRCNNLossComputation.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.loss.MaskRCNNLossComputation.match_targets_to_proposals": ["maskrcnn_benchmark.structures.boxlist_ops.boxlist_iou"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.loss.MaskRCNNLossComputation.prepare_targets": ["torch.nonzero", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.loss.project_masks_on_boxes", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.loss.MaskRCNNLossComputation.match_targets_to_proposals"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.loss.MaskRCNNLossComputation.__call__": ["torch.nonzero", "maskrcnn_benchmark.modeling.utils.cat", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.loss.MaskRCNNLossComputation.prepare_targets", "torch.nn.functional.binary_cross_entropy_with_logits"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.loss.make_roi_mask_loss_evaluator": ["maskrcnn_benchmark.modeling.matcher.Matcher", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.loss.MaskRCNNLossComputation.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.MaskPostProcessor.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.MaskPostProcessor.forward": ["<builtin>.len", "torch.arange", "torch.cat", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.Masker.__init__", "<builtin>.zip", "maskrcnn_benchmark.structures.bounding_box.BoxList"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.Masker.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.MaskPostProcessorCOCOFormat.forward": ["numpy.array", "pycocotools.mask.encode", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.expand_boxes": ["torch.zeros_like"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.expand_masks": ["<builtin>.float"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.paste_mask_in_image": ["torch.zeros", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.expand_masks", "<builtin>.min", "maskrcnn_benchmark.layers.misc.interpolate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.expand_boxes", "<builtin>.int", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.Masker.forward_single_image": ["<builtin>.zip", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.paste_mask_in_image", "torch.stack"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.Masker.__call__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.Masker.forward_single_image", "<builtin>.zip", "<builtin>.len", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.make_roi_mask_post_processor": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.Masker.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.MaskPostProcessor.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.roi_mask_predictors": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.roi_mask_predictors.MaskRCNNC4Predictor.__init__": ["torch.nn.Conv2d", "<builtin>.super", "torch.nn.ConvTranspose2d", "torch.nn.Module.named_parameters", "torch.nn.init.kaiming_normal_", "torch.nn.init.constant_"], "torch.nn.ConvTranspose2d": [], "torch.nn.Module.named_parameters": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.roi_mask_predictors.MaskRCNNC4Predictor.forward": ["torch.nn.functional.relu"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.roi_mask_predictors.MaskRCNNConv1x1Predictor.__init__": ["torch.nn.Conv2d", "<builtin>.super", "torch.nn.Module.named_parameters", "torch.nn.init.kaiming_normal_", "torch.nn.init.constant_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.roi_mask_predictors.MaskRCNNConv1x1Predictor.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.mask_head.roi_mask_predictors.make_roi_mask_predictor": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.roi_keypoint_feature_extractors": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.roi_keypoint_feature_extractors.KeypointRCNNFeatureExtractor.__init__": ["torch.nn.Conv2d", "<builtin>.super", "<builtin>.enumerate", "torch.nn.init.kaiming_normal_", "torch.nn.init.constant_", "torch.nn.Module.add_module", "maskrcnn_benchmark.modeling.poolers.Pooler"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.roi_keypoint_feature_extractors.KeypointRCNNFeatureExtractor.forward": ["torch.nn.functional.relu", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.roi_keypoint_feature_extractors.make_roi_keypoint_feature_extractor": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.keypoint_head": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.keypoint_head.ROIKeypointHead.__init__": ["inference.make_roi_keypoint_post_processor", "roi_keypoint_predictors.make_roi_keypoint_predictor", "<builtin>.super", "loss.make_roi_keypoint_loss_evaluator", "roi_keypoint_feature_extractors.make_roi_keypoint_feature_extractor"], "roi_keypoint_feature_extractors.make_roi_keypoint_feature_extractor": [], "roi_keypoint_predictors.make_roi_keypoint_predictor": [], "inference.make_roi_keypoint_post_processor": [], "loss.make_roi_keypoint_loss_evaluator": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.keypoint_head.ROIKeypointHead.forward": ["<builtin>.dict", "torch.no_grad"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.keypoint_head.build_roi_keypoint_head": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.keypoint_head.ROIKeypointHead.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss.project_keypoints_to_heatmap": ["maskrcnn_benchmark.structures.keypoint.keypoints_to_heat_map"], "maskrcnn_benchmark.structures.keypoint.keypoints_to_heat_map": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss.cat_boxlist_with_keypoints": ["maskrcnn_benchmark.structures.boxlist_ops.cat_boxlist", "maskrcnn_benchmark.modeling.utils.cat", "<builtin>.all"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss._within_box": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss.KeypointRCNNLossComputation.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss.KeypointRCNNLossComputation.match_targets_to_proposals": ["maskrcnn_benchmark.structures.boxlist_ops.boxlist_iou"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss.KeypointRCNNLossComputation.prepare_targets": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss.KeypointRCNNLossComputation.match_targets_to_proposals", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss._within_box"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss.KeypointRCNNLossComputation.subsample": ["torch.nonzero", "<builtin>.zip", "<builtin>.enumerate", "<builtin>.list", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss.KeypointRCNNLossComputation.prepare_targets"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss.KeypointRCNNLossComputation.__call__": ["<builtin>.len", "torch.nonzero", "torch.nn.functional.cross_entropy", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss.project_keypoints_to_heatmap", "maskrcnn_benchmark.modeling.utils.cat"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss.make_roi_keypoint_loss_evaluator": ["maskrcnn_benchmark.modeling.matcher.Matcher", "maskrcnn_benchmark.modeling.balanced_positive_negative_sampler.BalancedPositiveNegativeSampler", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.loss.KeypointRCNNLossComputation.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.inference.KeypointPostProcessor.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.inference.KeypointPostProcessor.forward": ["<builtin>.len", "<builtin>.zip", "maskrcnn_benchmark.structures.bounding_box.BoxList", "maskrcnn_benchmark.structures.keypoint.PersonKeypoints", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.inference.Keypointer.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.inference.Keypointer.__init__": [], "maskrcnn_benchmark.structures.keypoint.PersonKeypoints": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.inference.heatmaps_to_keypoints": ["<builtin>.range", "numpy.arange", "numpy.zeros", "<builtin>.len", "cv2.resize", "numpy.transpose", "numpy.maximum", "numpy.ceil", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.inference.Keypointer.__call__": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.inference.heatmaps_to_keypoints", "torch.as_tensor", "torch.from_numpy", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.inference.make_roi_keypoint_post_processor": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.inference.Keypointer.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.inference.KeypointPostProcessor.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.roi_keypoint_predictors": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.roi_keypoint_predictors.KeypointRCNNPredictor.__init__": ["maskrcnn_benchmark.layers.ConvTranspose2d", "torch.nn.init.kaiming_normal_", "<builtin>.super", "torch.nn.init.constant_"], "maskrcnn_benchmark.layers.ConvTranspose2d": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.roi_keypoint_predictors.KeypointRCNNPredictor.forward": ["maskrcnn_benchmark.layers.interpolate"], "maskrcnn_benchmark.layers.interpolate": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.roi_heads.keypoint_head.roi_keypoint_predictors.make_roi_keypoint_predictor": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fpn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fpn.FPN.__init__": ["torch.nn.Module.add_module", "<builtin>.super", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fpn.FPN.forward": ["torch.nn.functional.interpolate", "<builtin>.tuple", "<builtin>.zip", "<builtin>.getattr", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fpn.LastLevelMaxPool.forward": ["torch.nn.functional.max_pool2d"], "torch.nn.functional.max_pool2d": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fpn.LastLevelP6P7.__init__": ["torch.nn.Conv2d", "<builtin>.super", "torch.nn.init.kaiming_uniform_", "torch.nn.init.constant_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fpn.LastLevelP6P7.forward": ["torch.nn.functional.relu"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.backbone": ["maskrcnn_benchmark.modeling.registry.BACKBONES.register"], "maskrcnn_benchmark.modeling.registry.BACKBONES.register": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.backbone.build_resnet_backbone": ["collections.OrderedDict", "torch.nn.Sequential", "resnet.ResNet"], "resnet.ResNet": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.backbone.build_resnet_fpn_backbone": ["maskrcnn_benchmark.modeling.make_layers.conv_with_kaiming_uniform", "fpn.FPN", "fpn.LastLevelMaxPool", "collections.OrderedDict", "resnet.ResNet", "torch.nn.Sequential"], "maskrcnn_benchmark.modeling.make_layers.conv_with_kaiming_uniform": [], "fpn.LastLevelMaxPool": [], "fpn.FPN": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.backbone.build_resnet_fpn_p3p7_backbone": ["maskrcnn_benchmark.modeling.make_layers.conv_with_kaiming_uniform", "fpn.FPN", "collections.OrderedDict", "resnet.ResNet", "fpn.LastLevelP6P7", "torch.nn.Sequential"], "fpn.LastLevelP6P7": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.backbone.build_backbone": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet": ["<builtin>.tuple", "maskrcnn_benchmark.utils.registry.Registry", "collections.namedtuple", "os.environ.get"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.ResNet.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet._make_stage", "<builtin>.super", "<builtin>.str", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.ResNet._freeze_backbone", "torch.nn.Module.add_module"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet._make_stage": ["<builtin>.range", "torch.nn.Sequential"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.ResNet._freeze_backbone": ["<builtin>.range", "<builtin>.str", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.ResNet.forward": ["<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.ResNetHead.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet._make_stage", "<builtin>.super", "<builtin>.str", "<builtin>.int", "torch.nn.Module.add_module"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.ResNetHead.forward": ["<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.Bottleneck.__init__": ["torch.nn.Conv2d", "torch.nn.init.kaiming_uniform_", "<builtin>.super", "torch.nn.Sequential", "maskrcnn_benchmark.layers.DFConv2d", "<builtin>.isinstance"], "maskrcnn_benchmark.layers.DFConv2d": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.Bottleneck.forward": ["torch.nn.functional.relu_"], "torch.nn.functional.relu_": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.BaseStem.__init__": ["torch.nn.Conv2d", "<builtin>.super", "torch.nn.init.kaiming_uniform_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.BaseStem.forward": ["torch.nn.functional.max_pool2d", "torch.nn.functional.relu_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.BottleneckWithFixedBatchNorm.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.StemWithFixedBatchNorm.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.BottleneckWithGN.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.resnet.StemWithGN.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet": ["maskrcnn_benchmark.modeling.registry.RPN_HEADS.register", "maskrcnn_benchmark.modeling.registry.ROI_MASK_FEATURE_EXTRACTORS.register", "maskrcnn_benchmark.modeling.registry.BACKBONES.register", "maskrcnn_benchmark.modeling.registry.ROI_KEYPOINT_FEATURE_EXTRACTORS.register", "maskrcnn_benchmark.modeling.registry.ROI_BOX_FEATURE_EXTRACTORS.register", "logging.getLogger"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.create_builder": ["fbnet_builder.unify_arch_def", "<builtin>.len", "json.loads", "fbnet_builder.FBNetBuilder"], "fbnet_builder.unify_arch_def": [], "fbnet_builder.FBNetBuilder": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet._get_trunk_cfg": ["<builtin>.range", "fbnet_builder.get_blocks", "fbnet_builder.get_num_stages"], "fbnet_builder.get_num_stages": [], "fbnet_builder.get_blocks": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.FBNetTrunk.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet._get_trunk_cfg", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.FBNetTrunk.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.add_conv_body": ["collections.OrderedDict", "torch.nn.Sequential", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.create_builder", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.FBNetTrunk.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet._get_rpn_stage": ["fbnet_builder.get_blocks", "<builtin>.len", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.FBNetRPNHead.__init__": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet._get_rpn_stage", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.FBNetRPNHead.forward": [], "maskrcnn_benchmark.modeling.registry.RPN_HEADS.register": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.add_rpn_head": ["maskrcnn_benchmark.modeling.rpn.rpn.RPNHeadConvRegressor", "torch.nn.Sequential", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.FBNetRPNHead.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.create_builder"], "maskrcnn_benchmark.modeling.rpn.rpn.RPNHeadConvRegressor": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet._get_head_stage": ["fbnet_builder.get_blocks"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.FBNetROIHead.__init__": ["copy.deepcopy", "maskrcnn_benchmark.modeling.poolers.make_pooler", "<builtin>.super", "collections.OrderedDict", "torch.nn.Sequential", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet._get_head_stage", "<builtin>.isinstance"], "maskrcnn_benchmark.modeling.poolers.make_pooler": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.FBNetROIHead.forward": [], "maskrcnn_benchmark.modeling.registry.ROI_BOX_FEATURE_EXTRACTORS.register": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.add_roi_head": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.create_builder", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.FBNetROIHead.__init__"], "maskrcnn_benchmark.modeling.registry.ROI_KEYPOINT_FEATURE_EXTRACTORS.register": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.add_roi_head_keypoints": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.create_builder", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.FBNetROIHead.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.add_roi_head_mask": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.create_builder", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet.FBNetROIHead.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder": ["logging.getLogger"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._py2_round": ["math.floor", "math.ceil"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._get_divisible_by": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._py2_round", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda1>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda1>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.Identity.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.Identity.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ConvBNRelu.__init__", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda2>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda2>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._get_divisible_by", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ConvBNRelu.__init__", "<builtin>.super", "collections.OrderedDict", "torch.nn.Sequential", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ChannelShuffle.__init__", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.SEModule.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._get_upsample_op"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda3>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda3>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda4>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda4>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda5>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda5>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda6>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda6>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda7>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda7>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.CascadeConv3x3.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.CascadeConv3x3.__init__": ["torch.nn.BatchNorm2d", "torch.nn.Conv2d", "<builtin>.super", "torch.nn.ReLU"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda8>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda8>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ShiftBlock5x5.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ShiftBlock5x5.__init__": ["torch.nn.Conv2d", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._get_divisible_by", "torch.nn.BatchNorm2d", "<builtin>.super", "torch.nn.ReLU", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.Shift.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda9>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda9>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda10>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda10>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda11>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda11>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda12>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda12>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda13>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda13>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda14>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda14>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda15>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda15>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda16>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda16>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda17>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda17>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda18>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda18>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda19>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda19>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda20>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda20>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda21>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda21>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda22>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda22>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda23>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda23>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda24>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda24>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda25>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda25>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda26>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda26>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda27>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda27>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda28>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda28>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda29>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda29>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda30>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda30>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda31>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda31>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda32>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda32>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda33>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda33>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda34>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda34>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda35>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda35>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda36>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda36>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda37>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda37>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda38>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda38>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<dict1>.<lambda39>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.<lambda39>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ConvBNRelu.__init__": ["<builtin>.len", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "<builtin>.super", "torch.nn.Sequential.add_module", "maskrcnn_benchmark.layers.FrozenBatchNorm2d", "torch.nn.ReLU", "torch.nn.init.kaiming_normal_", "<builtin>.isinstance", "torch.nn.GroupNorm", "torch.nn.init.constant_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.Identity.forward": [], "torch.nn.BatchNorm2d": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.CascadeConv3x3.forward": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.Shift.__init__": ["torch.zeros", "<builtin>.range", "<builtin>.super", "torch.nn.Parameter", "torch.nn.Module.register_parameter"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.Shift.forward": ["<builtin>.zip", "torch.nn.functional.conv2d", "maskrcnn_benchmark.layers.misc._NewEmptyTensorOp.apply"], "torch.nn.functional.conv2d": [], "maskrcnn_benchmark.layers.misc._NewEmptyTensorOp.apply": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ShiftBlock5x5.forward": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ChannelShuffle.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ChannelShuffle.forward": ["<builtin>.int"], "torch.nn.Sequential.add_module": [], "maskrcnn_benchmark.layers.FrozenBatchNorm2d": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.SEModule.__init__": ["torch.nn.Conv2d", "<builtin>.super", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Sigmoid", "torch.nn.ReLU", "torch.nn.Sequential", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.SEModule.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.Upsample.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.Upsample.forward": ["maskrcnn_benchmark.layers.interpolate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._get_upsample_op": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.Upsample.__init__", "<builtin>.isinstance", "<builtin>.all"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.IRFBlock.forward": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ConvBNRelu.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ChannelShuffle.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._expand_block_cfg": ["<builtin>.range", "<builtin>.isinstance", "copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.expand_stage_cfg": ["<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._expand_block_cfg"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.expand_stages_cfg": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.expand_stage_cfg", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._block_cfgs_to_list": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.expand_stage_cfg", "<builtin>.isinstance", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._add_to_arch": ["<builtin>.isinstance", "<builtin>.enumerate", "<builtin>.all"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.unify_arch_def": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._block_cfgs_to_list", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._add_to_arch", "copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.get_num_stages": ["<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.get_blocks": ["copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.FBNetBuilder.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.FBNetBuilder.add_first": ["<builtin>.int", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ConvBNRelu.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.FBNetBuilder._get_divisible_width"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.FBNetBuilder._get_divisible_width": ["<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder._get_divisible_by"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.FBNetBuilder.add_blocks": ["<builtin>.all", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.FBNetBuilder.add_ir_block", "collections.OrderedDict", "torch.nn.Sequential", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.FBNetBuilder.add_ir_block": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.FBNetBuilder._get_divisible_width", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.FBNetBuilder._add_ir_block"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.FBNetBuilder.add_last": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.FBNetBuilder._get_divisible_width", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.ConvBNRelu.__init__", "torch.nn.Sequential", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_builder.FBNetBuilder._add_ir_block": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_modeldef": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_modeldef.add_archs"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.modeling.backbone.fbnet_modeldef.add_archs": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build.build_dataset": ["<builtin>.len", "<builtin>.RuntimeError", "<builtin>.getattr", "datasets.ConcatDataset", "<builtin>.isinstance"], "datasets.ConcatDataset": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build.make_data_sampler": ["samplers.DistributedSampler"], "samplers.DistributedSampler": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build._quantize": ["copy.copy", "<builtin>.list", "<builtin>.sorted", "<builtin>.map"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build._quantize.<lambda1>": ["bisect.bisect_right"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build._compute_aspect_ratios": ["<builtin>.range", "<builtin>.len", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build.make_batch_data_sampler": ["samplers.GroupedBatchSampler", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build._quantize", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build._compute_aspect_ratios", "samplers.IterationBasedBatchSampler", "<builtin>.isinstance"], "samplers.GroupedBatchSampler": [], "samplers.IterationBasedBatchSampler": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build.make_data_loader": ["maskrcnn_benchmark.utils.imports.import_file", "<builtin>.len", "collate_batch.BatchCollator", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build.make_batch_data_sampler", "maskrcnn_benchmark.utils.comm.get_world_size", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build.build_dataset", "transforms.build_transforms", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.build.make_data_sampler", "maskrcnn_benchmark.utils.miscellaneous.save_labels", "logging.getLogger", "collate_batch.BBoxAugCollator"], "maskrcnn_benchmark.utils.comm.get_world_size": [], "transforms.build_transforms": [], "maskrcnn_benchmark.utils.miscellaneous.save_labels": [], "collate_batch.BBoxAugCollator": [], "collate_batch.BatchCollator": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.collate_batch": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.collate_batch.BatchCollator.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.collate_batch.BatchCollator.__call__": ["<builtin>.zip", "maskrcnn_benchmark.structures.image_list.to_image_list", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.collate_batch.BBoxAugCollator.__call__": ["<builtin>.zip", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.abstract": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.abstract.AbstractDataset.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.abstract.AbstractDataset.__getitem__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.abstract.AbstractDataset.initMaps": ["<builtin>.range", "<builtin>.dict", "<builtin>.len", "<builtin>.zip", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.abstract.AbstractDataset.get_img_info": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.abstract.AbstractDataset.__len__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.coco": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.coco._count_visible_keypoints": ["<builtin>.sum"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.coco._has_only_empty_bbox": ["<builtin>.any", "<builtin>.all"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.coco.has_valid_annotation": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.coco._count_visible_keypoints", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.coco._has_only_empty_bbox"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.coco.COCODataset.__init__": ["torchvision.datasets.coco.CocoDetection.coco.getAnnIds", "torchvision.datasets.coco.CocoDetection.coco.loadAnns", "<builtin>.super", "torchvision.datasets.coco.CocoDetection.coco.getCatIds", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.coco.has_valid_annotation", "torchvision.datasets.coco.CocoDetection.coco.cats.values", "<builtin>.sorted"], "torchvision.datasets.coco.CocoDetection.coco.getAnnIds": [], "torchvision.datasets.coco.CocoDetection.coco.loadAnns": [], "torchvision.datasets.coco.CocoDetection.coco.cats.values": [], "torchvision.datasets.coco.CocoDetection.coco.getCatIds": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.coco.COCODataset.__getitem__": ["torch.tensor", "maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask", "maskrcnn_benchmark.structures.bounding_box.BoxList", "<builtin>.super", "maskrcnn_benchmark.structures.keypoint.PersonKeypoints", "torch.as_tensor"], "maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.coco.COCODataset.get_img_info": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset.__init__": ["<builtin>.NotImplementedError", "<builtin>.len", "os.path.join", "abstract.AbstractDataset.initMaps", "os.path.exists", "os.path.abspath", "glob.glob", "<builtin>.int", "<builtin>.sorted"], "abstract.AbstractDataset.initMaps": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset.__getitem__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset._processBinayMasks", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset.get_img_info", "<builtin>.print", "torch.tensor", "maskrcnn_benchmark.structures.segmentation_mask.SegmentationMask", "maskrcnn_benchmark.structures.bounding_box.BoxList", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset._processPolygons", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset._filterGT", "PIL.Image.open", "<builtin>.open", "json.load", "numpy.asarray", "torch.from_numpy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset._processBinayMasks": ["torch.sort", "torch.unique", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset._processBinayMasks.mask_to_tight_box"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset._processPolygons": ["torch.empty", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset._processPolygons.poly_to_tight_box"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset._filterGT": ["<builtin>.zip", "<builtin>.len", "torch.empty"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset.get_img_info": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset._processPolygons.poly_to_tight_box": ["<builtin>.int", "<builtin>.min", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset._processBinayMasks.mask_to_tight_box": ["torch.min", "<builtin>.list", "torch.max", "<builtin>.map"], "torch.unique": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.cityscapes.CityScapesDataset.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.concat_dataset": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.concat_dataset.ConcatDataset.get_idxs": ["bisect.bisect_right"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.concat_dataset.ConcatDataset.get_img_info": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.concat_dataset.ConcatDataset.get_idxs"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.list_dataset": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.list_dataset.ListDataset.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.list_dataset.ListDataset.__getitem__": ["maskrcnn_benchmark.structures.bounding_box.BoxList", "PIL.Image.open"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.list_dataset.ListDataset.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.list_dataset.ListDataset.get_img_info": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.voc": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.voc.PascalVOCDataset.__init__": ["<builtin>.range", "<builtin>.dict", "<builtin>.len", "os.path.join", "<builtin>.zip", "<builtin>.enumerate", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.voc.PascalVOCDataset.__getitem__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.voc.PascalVOCDataset.get_groundtruth", "PIL.Image.open"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.voc.PascalVOCDataset.get_groundtruth": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.voc.PascalVOCDataset._preprocess_annotation", "maskrcnn_benchmark.structures.bounding_box.BoxList", "xml.etree.cElementTree.parse", "xml.etree.ElementTree.parse"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.voc.PascalVOCDataset.__len__": ["<builtin>.len"], "xml.etree.cElementTree.parse": [], "xml.etree.ElementTree.parse": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.voc.PascalVOCDataset._preprocess_annotation": ["<builtin>.tuple", "torch.tensor", "<builtin>.map", "<builtin>.int", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.voc.PascalVOCDataset._preprocess_annotation.<lambda1>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.voc.PascalVOCDataset.get_img_info": ["<builtin>.map", "<builtin>.tuple", "xml.etree.cElementTree.parse", "xml.etree.ElementTree.parse"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.voc.PascalVOCDataset.map_class_id_to_class_name": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.evaluate": ["<builtin>.dict", "<builtin>.NotImplementedError", "voc.voc_evaluation", "cityscapes.abs_cityscapes_evaluation", "coco.coco_evaluation", "<builtin>.isinstance"], "coco.coco_evaluation": [], "voc.voc_evaluation": [], "cityscapes.abs_cityscapes_evaluation": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.abs_to_coco": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.abs_to_coco.convert_abstract_to_coco": ["<builtin>.range", "tqdm.tqdm", "<builtin>.len", "torch.multiprocessing.cpu_count", "<builtin>.min", "<builtin>.enumerate", "torch.multiprocessing.Pool", "logging.getLogger", "<builtin>.str", "<builtin>.isinstance", "datetime.datetime.now"], "torch.multiprocessing.cpu_count": [], "torch.multiprocessing.Pool": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.abs_to_coco.process_single_image": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.abs_to_coco.masks_to_rles", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.abs_to_coco.masks_to_rles": ["pycocotools.mask.encode", "numpy.array"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval_wrapper": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval_wrapper.do_coco_evaluation": ["json.dump", "os.path.join", "coco_eval.do_coco_evaluation", "maskrcnn_benchmark.data.datasets.coco.COCODataset", "abs_to_coco.convert_abstract_to_coco", "<builtin>.open", "logging.getLogger"], "abs_to_coco.convert_abstract_to_coco": [], "maskrcnn_benchmark.data.datasets.coco.COCODataset": [], "coco_eval.do_coco_evaluation": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_evaluation": ["<builtin>.NotImplementedError", "<builtin>.type", "coco_eval.do_coco_evaluation", "coco_eval_wrapper.do_coco_evaluation", "<builtin>.isinstance"], "coco_eval_wrapper.do_coco_evaluation": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.do_coco_evaluation": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.evaluate_box_proposals", "os.path.join", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.check_expected_results", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.prepare_for_coco_detection", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.prepare_for_coco_segmentation", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.COCOResults.update", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.COCOResults.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.prepare_for_coco_keypoint", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.evaluate_predictions_on_coco", "logging.getLogger", "torch.save", "tempfile.NamedTemporaryFile"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.COCOResults.__init__": ["<builtin>.all", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.evaluate_box_proposals": ["torch.zeros", "<builtin>.range", "<builtin>.len", "torch.arange", "torch.cat", "<builtin>.min", "maskrcnn_benchmark.structures.boxlist_ops.boxlist_iou", "maskrcnn_benchmark.structures.bounding_box.BoxList", "<builtin>.enumerate", "torch.sort", "torch.zeros_like", "<builtin>.float", "torch.as_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.check_expected_results": ["logging.getLogger"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.prepare_for_coco_detection": ["<builtin>.len", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.prepare_for_coco_segmentation": ["tqdm.tqdm", "<builtin>.len", "numpy.array", "<builtin>.enumerate", "maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.Masker", "pycocotools.mask.encode", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.prepare_for_coco_keypoint": ["<builtin>.len", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.evaluate_predictions_on_coco": ["pycocotools.coco.COCO", "json.dump", "pycocotools.cocoeval.COCOeval", "<builtin>.open", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.COCOResults.update": ["<builtin>.isinstance", "<builtin>.enumerate"], "maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.Masker": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.coco.coco_eval.COCOResults.__repr__": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.voc": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.voc.voc_evaluation": ["logging.getLogger", "voc_eval.do_voc_evaluation"], "voc_eval.do_voc_evaluation": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.voc.voc_eval": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.voc.voc_eval.do_voc_evaluation": ["os.path.join", "<builtin>.open", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.voc.voc_eval.eval_detection_voc", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.voc.voc_eval.eval_detection_voc": ["numpy.nanmean", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.voc.voc_eval.calc_detection_voc_ap", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.voc.voc_eval.calc_detection_voc_prec_rec"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.voc.voc_eval.calc_detection_voc_prec_rec": ["<builtin>.len", "numpy.zeros", "numpy.array", "numpy.concatenate", "<builtin>.zip", "numpy.cumsum", "maskrcnn_benchmark.structures.boxlist_ops.boxlist_iou", "maskrcnn_benchmark.structures.bounding_box.BoxList", "numpy.logical_not", "collections.defaultdict", "numpy.unique", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.voc.voc_eval.calc_detection_voc_ap": ["<builtin>.range", "numpy.arange", "<builtin>.len", "numpy.empty", "numpy.max", "numpy.maximum.accumulate", "numpy.sum", "numpy.concatenate", "numpy.where", "numpy.nan_to_num"], "numpy.nanmean": [], "numpy.nan_to_num": [], "numpy.maximum.accumulate": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.abs_cityscapes_evaluation": ["cityscapes_eval.do_cityscapes_evaluation"], "cityscapes_eval.do_cityscapes_evaluation": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.cityscapes_eval": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.cityscapes_eval.do_cityscapes_evaluation": ["<builtin>.NotImplementedError", "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.prepareJSONDataForResults", "copy.deepcopy", "os.path.join", "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.computeAverages", "os.path.dirname", "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.writeDict2JSON", "cityscapesscripts.helpers.csHelpers.writeDict2JSON", "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.printResults", "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.matchGtsWithPreds", "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.evaluateMaskMatches", "logging.getLogger", "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.evaluateBoxMatches", "<builtin>.list", "cityscapesscripts.helpers.csHelpers.ensurePath"], "cityscapesscripts.helpers.csHelpers.ensurePath": [], "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.matchGtsWithPreds": [], "cityscapesscripts.helpers.csHelpers.writeDict2JSON": [], "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.evaluateBoxMatches": [], "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.computeAverages": [], "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.prepareJSONDataForResults": [], "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.writeDict2JSON": [], "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.printResults": [], "maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.evaluateMaskMatches": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances": ["os.path.join", "numpy.arange", "numpy.array"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.CArgs.__repr__": ["<builtin>.str", "<builtin>.len", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.matchGtsWithPreds": ["<builtin>.range", "tqdm.tqdm", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.matchGtWithPred"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.matchGtWithPred": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.isOverlapping", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.prepareGtImage", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.computeMaskIntersection", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.preparePredImage", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.computeBoxIntersection"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.isOverlapping": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.getUnionBox": ["<builtin>.min", "<builtin>.max", "<builtin>.map"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.getIntersectionBox": ["<builtin>.min", "<builtin>.max", "<builtin>.map"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.computeBoxIntersection": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.getIntersectionBox"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.computeMaskIntersection": ["<builtin>.len", "torch.mul", "torch.sum", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.getUnionBox"], "torch.mul": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.prepareGtImage": ["<builtin>.range", "<builtin>.zip", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.preparePredImage": ["<builtin>.range", "<builtin>.zip", "<builtin>.len", "maskrcnn_benchmark.modeling.roi_heads.mask_head.inference.Masker"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.evaluateBoxMatches": ["numpy.empty", "<builtin>.len", "numpy.zeros", "numpy.convolve", "numpy.append", "numpy.argsort", "numpy.cumsum", "<builtin>.min", "numpy.copy", "numpy.dot", "<builtin>.enumerate", "numpy.ones", "<builtin>.float", "numpy.unique", "<builtin>.max"], "numpy.append": [], "numpy.convolve": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.evaluateMaskMatches": ["numpy.empty", "<builtin>.len", "numpy.zeros", "numpy.convolve", "numpy.append", "numpy.argsort", "numpy.cumsum", "<builtin>.min", "numpy.copy", "numpy.dot", "<builtin>.enumerate", "numpy.ones", "<builtin>.float", "numpy.unique", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.computeAverages": ["numpy.nanmean", "numpy.where", "<builtin>.enumerate", "numpy.isclose", "numpy.average", "numpy.argmin"], "numpy.argmin": [], "numpy.isclose": [], "numpy.average": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.printResults": ["contextlib.redirect_stdout", "<builtin>.print", "<builtin>.enumerate", "cityscapesscripts.helpers.csHelpers.getColorEntry", "io.StringIO"], "cityscapesscripts.helpers.csHelpers.getColorEntry": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.datasets.evaluation.cityscapes.eval_instances.prepareJSONDataForResults": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.build": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.build.build_transforms": ["transforms.RandomVerticalFlip", "transforms.ColorJitter", "transforms.RandomHorizontalFlip", "transforms.Compose", "transforms.ToTensor", "transforms.Normalize", "transforms.Resize"], "transforms.Normalize": [], "transforms.ColorJitter": [], "transforms.Resize": [], "transforms.RandomVerticalFlip": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.Compose.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.Compose.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.Compose.__repr__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.Resize.__init__": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.Resize.get_size": ["<builtin>.min", "<builtin>.round", "<builtin>.float", "random.choice", "<builtin>.int", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.Resize.__call__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.Resize.get_size", "torchvision.transforms.functional.resize"], "torchvision.transforms.functional.resize": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.RandomHorizontalFlip.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.RandomHorizontalFlip.__call__": ["random.random", "torchvision.transforms.functional.hflip"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.RandomVerticalFlip.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.RandomVerticalFlip.__call__": ["random.random", "torchvision.transforms.functional.vflip"], "torchvision.transforms.functional.vflip": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.ColorJitter.__init__": ["torchvision.transforms.ColorJitter"], "torchvision.transforms.ColorJitter": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.ColorJitter.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.ToTensor.__call__": ["torchvision.transforms.functional.to_tensor"], "torchvision.transforms.functional.to_tensor": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.Normalize.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms.transforms.Normalize.__call__": ["torchvision.transforms.functional.normalize"], "torchvision.transforms.functional.normalize": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.transforms": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.grouped_batch_sampler": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.grouped_batch_sampler.GroupedBatchSampler.__init__": ["<builtin>.ValueError", "torch.as_tensor", "<builtin>.isinstance", "torch.unique"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.grouped_batch_sampler.GroupedBatchSampler._prepare_batches": ["<builtin>.len", "<builtin>.tuple", "torch.arange", "itertools.chain.from_iterable", "<builtin>.enumerate", "torch.full", "torch.as_tensor", "<builtin>.list"], "itertools.chain.from_iterable": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.grouped_batch_sampler.GroupedBatchSampler.__iter__": ["<builtin>.iter", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.grouped_batch_sampler.GroupedBatchSampler._prepare_batches"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.grouped_batch_sampler.GroupedBatchSampler.__len__": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.grouped_batch_sampler.GroupedBatchSampler._prepare_batches", "<builtin>.hasattr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.distributed": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.distributed.DistributedSampler.__init__": ["<builtin>.len", "torch.distributed.get_rank", "<builtin>.RuntimeError", "torch.distributed.is_available", "math.ceil", "torch.distributed.get_world_size", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.distributed.DistributedSampler.__iter__": ["<builtin>.len", "torch.arange", "torch.Generator", "torch.randperm", "<builtin>.iter"], "torch.Generator": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.distributed.DistributedSampler.__len__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.distributed.DistributedSampler.set_epoch": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.iteration_based_batch_sampler": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.iteration_based_batch_sampler.IterationBasedBatchSampler.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.iteration_based_batch_sampler.IterationBasedBatchSampler.__iter__": ["<builtin>.hasattr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.data.samplers.iteration_based_batch_sampler.IterationBasedBatchSampler.__len__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.bbox_aug": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.bbox_aug.im_detect_bbox_aug": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.bbox_aug.im_detect_bbox_aug.add_preds_t", "torch.cat", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.bbox_aug.im_detect_bbox_scale", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.bbox_aug.im_detect_bbox_hflip", "maskrcnn_benchmark.structures.bounding_box.BoxList", "maskrcnn_benchmark.modeling.roi_heads.box_head.inference.make_roi_box_post_processor", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.bbox_aug.im_detect_bbox"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.bbox_aug.im_detect_bbox_aug.add_preds_t": ["<builtin>.len", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.bbox_aug.im_detect_bbox": ["maskrcnn_benchmark.structures.image_list.to_image_list", "torchvision.transforms.ToTensor", "maskrcnn_benchmark.data.transforms.Resize", "maskrcnn_benchmark.data.transforms.Normalize", "torchvision.transforms.Compose"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.bbox_aug.im_detect_bbox_hflip": ["maskrcnn_benchmark.structures.image_list.to_image_list", "torchvision.transforms.ToTensor", "maskrcnn_benchmark.data.transforms.Resize", "maskrcnn_benchmark.data.transforms.Normalize", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.Compose"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.bbox_aug.im_detect_bbox_scale": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.bbox_aug.im_detect_bbox", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.bbox_aug.im_detect_bbox_hflip"], "maskrcnn_benchmark.modeling.roi_heads.box_head.inference.make_roi_box_post_processor": [], "maskrcnn_benchmark.data.transforms.Resize": [], "maskrcnn_benchmark.data.transforms.Normalize": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.inference.compute_on_dataset": ["<builtin>.range", "tqdm.tqdm", "<builtin>.len", "torch.jit.freeze", "torch.device", "<builtin>.print", "<builtin>.zip", "torch.jit.trace", "<builtin>.enumerate", "intel_extension_for_pytorch.optimize", "torch.autograd.profiler.profile", "torch.no_grad", "<builtin>.int", "bbox_aug.im_detect_bbox_aug", "<builtin>.max", "torch.cpu.amp.autocast"], "bbox_aug.im_detect_bbox_aug": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.inference._accumulate_predictions_from_multiple_gpus": ["utils.comm.is_main_process", "<builtin>.len", "utils.comm.all_gather", "logging.getLogger", "<builtin>.list", "<builtin>.sorted"], "utils.comm.all_gather": [], "utils.comm.is_main_process": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.inference.inference": ["<builtin>.dict", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.inference.compute_on_dataset", "<builtin>.len", "utils.comm.is_main_process", "utils.timer.Timer", "torch.device", "utils.comm.synchronize", "<builtin>.print", "os.path.join", "utils.comm.get_world_size", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.inference._accumulate_predictions_from_multiple_gpus", "maskrcnn_benchmark.data.datasets.evaluation.evaluate", "utils.timer.get_time_str", "logging.getLogger", "torch.save"], "utils.comm.get_world_size": [], "utils.timer.Timer": [], "utils.comm.synchronize": [], "utils.timer.get_time_str": [], "maskrcnn_benchmark.data.datasets.evaluation.evaluate": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.trainer": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.trainer.reduce_loss_dict": ["torch.stack", "torch.distributed.get_rank", "<builtin>.zip", "torch.distributed.reduce", "maskrcnn_benchmark.utils.comm.get_world_size", "torch.no_grad", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.trainer.do_train": ["tqdm.tqdm", "torch.cuda.max_memory_allocated", "<builtin>.print", "maskrcnn_benchmark.data.make_data_loader", "datetime.timedelta", "intel_extension_for_pytorch.optimize", "maskrcnn_benchmark.engine.inference.inference", "maskrcnn_benchmark.utils.metric_logger.MetricLogger", "maskrcnn_benchmark.utils.comm.synchronize", "<builtin>.any", "maskrcnn_benchmark.utils.comm.get_world_size", "<builtin>.str", "torch.cpu.amp.autocast", "<builtin>.len", "time.time", "utils.timer.get_time_str", "<builtin>.int", "utils.timer.Timer", "<builtin>.sum", "<builtin>.enumerate", "torch.no_grad", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn.maskrcnn-benchmark.maskrcnn_benchmark.engine.trainer.reduce_loss_dict", "logging.getLogger"], "maskrcnn_benchmark.utils.metric_logger.MetricLogger": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms._flip_coco_person_keypoints": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.Compose.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.Compose.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.RandomHorizontalFlip.forward": ["torchvision.transforms.functional.get_image_size", "torch.rand", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms._flip_coco_person_keypoints", "torchvision.transforms.functional.hflip"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.ToTensor.forward": ["torchvision.transforms.functional.convert_image_dtype", "torchvision.transforms.functional.pil_to_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.PILToTensor.forward": ["torchvision.transforms.functional.pil_to_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.ConvertImageDtype.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.ConvertImageDtype.forward": ["torchvision.transforms.functional.convert_image_dtype"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.RandomIoUCrop.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.RandomIoUCrop.forward": ["<builtin>.range", "torchvision.ops.boxes.box_iou", "<builtin>.len", "torch.rand", "torchvision.transforms.functional.crop", "<builtin>.ValueError", "torchvision.transforms.functional.get_image_size", "torch.tensor", "torch.randint", "<builtin>.int", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.RandomZoomOut.__init__": ["<builtin>.ValueError", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.RandomZoomOut": ["torch.jit.unused"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.RandomZoomOut._get_fill_value": ["<builtin>.int", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.RandomZoomOut.forward": ["torch.jit.is_scripting", "torch.rand", "<builtin>.ValueError", "torchvision.transforms.functional.get_image_size", "torchvision.transforms.functional._is_pil_image", "torch.tensor", "torchvision.transforms.functional.pad", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.RandomZoomOut._get_fill_value", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.RandomPhotometricDistort.__init__": ["torchvision.transforms.transforms.ColorJitter", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.transforms.RandomPhotometricDistort.forward": ["torch.rand", "<builtin>.ValueError", "torchvision.transforms.functional._is_pil_image", "torchvision.transforms.functional.convert_image_dtype", "torchvision.transforms.functional.get_image_num_channels", "torch.randperm", "torchvision.transforms.functional.pil_to_tensor", "<builtin>.isinstance", "torchvision.transforms.functional.to_pil_image"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.presets": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.presets.DetectionPresetTrain.__init__": ["transforms.RandomIoUCrop", "transforms.RandomPhotometricDistort", "<builtin>.list", "transforms.RandomHorizontalFlip", "<builtin>.ValueError", "transforms.Compose", "transforms.RandomZoomOut", "transforms.PILToTensor", "transforms.ConvertImageDtype"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.presets.DetectionPresetTrain.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.presets.DetectionPresetEval.__init__": ["transforms.ToTensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.presets.DetectionPresetEval.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.__init__": ["pycocotools.cocoeval.COCOeval", "<builtin>.isinstance", "copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.update": ["contextlib.redirect_stdout", "pycocotools.coco.COCO", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.evaluate", "<builtin>.list", "pycocotools.coco.COCO.loadRes", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare", "numpy.unique", "io.StringIO"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_keypoint", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_segmentation", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_detection", "<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.evaluate": ["contextlib.redirect_stdout", "<builtin>.len", "numpy.asarray", "io.StringIO"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.synchronize_between_processes": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.create_common_coco_eval", "numpy.concatenate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.create_common_coco_eval": ["<builtin>.list", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.merge", "copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.accumulate": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.summarize": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_detection": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.convert_to_xywh", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_segmentation": ["<builtin>.len", "pycocotools.mask.encode", "numpy.array", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_keypoint": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.convert_to_xywh", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.convert_to_xywh": ["torch.stack"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_eval.merge": ["utils.all_gather", "numpy.unique", "numpy.array", "numpy.concatenate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.SmoothedValue.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.SmoothedValue.update": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.SmoothedValue.synchronize_between_processes": ["torch.distributed.barrier", "torch.distributed.all_reduce", "torch.tensor", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.is_dist_avail_and_initialized"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.is_dist_avail_and_initialized": ["torch.distributed.is_initialized", "torch.distributed.is_available"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.SmoothedValue.median": ["torch.tensor", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.SmoothedValue.avg": ["torch.tensor", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.SmoothedValue.global_avg": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.SmoothedValue.max": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.SmoothedValue.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.SmoothedValue.value": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.SmoothedValue.__str__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.all_gather": ["torch.distributed.all_gather_object", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.get_world_size"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.get_world_size": ["torch.distributed.get_world_size", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.is_dist_avail_and_initialized"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.reduce_dict": ["torch.stack", "torch.distributed.all_reduce", "<builtin>.zip", "torch.inference_mode", "<builtin>.sorted", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.get_world_size"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.MetricLogger.__init__": ["collections.defaultdict"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.MetricLogger.update": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.MetricLogger.__getattr__": ["<builtin>.AttributeError", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.MetricLogger.__str__": ["<builtin>.str"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.MetricLogger.synchronize_between_processes": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.MetricLogger.add_meter": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.MetricLogger.log_every": ["<builtin>.len", "torch.cuda.is_available", "torch.cuda.max_memory_allocated", "<builtin>.print", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.update", "datetime.timedelta", "time.time", "<builtin>.str", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.collate_fn": ["<builtin>.zip", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.mkdir": ["os.makedirs"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.setup_for_distributed": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.setup_for_distributed.print": ["builtins.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.get_rank": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.is_dist_avail_and_initialized", "torch.distributed.get_rank"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.is_main_process": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.get_rank"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.save_on_master": ["torch.save", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.is_main_process"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.init_distributed_mode": ["torch.distributed.barrier", "<builtin>.print", "torch.distributed.init_process_group", "torch.cuda.device_count", "torch.cuda.set_device", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.utils.setup_for_distributed"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.inference": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.inference.get_coco_data_loader", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.inference.inference", "<builtin>.sorted", "<builtin>.callable"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.inference.AverageMeter.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.inference.AverageMeter.reset"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.inference.AverageMeter.reset": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.inference.AverageMeter.update": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.inference.AverageMeter.__str__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.inference.inference": ["<builtin>.print", "<builtin>.zip", "intel_extension_for_pytorch.optimize", "torch.profiler.profile", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.inference.AverageMeter.update", "torch.utils.mkldnn.to_mkldnn", "torch.profiler.record_function", "torch.cpu.amp.autocast", "<builtin>.len", "coco_eval.CocoEvaluator", "coco_utils.get_coco_api_from_dataset", "time.time", "<builtin>.list", "torch.jit.freeze", "torch.jit.trace", "<builtin>.enumerate", "torch.randn", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.inference.AverageMeter.__init__", "torch.no_grad", "<builtin>.exit"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.inference.get_coco_data_loader": ["torch.utils.data.DataLoader", "coco_utils.get_coco", "presets.DetectionPresetEval"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet._sum": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetHead.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetRegressionHead.__init__", "<builtin>.super", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetClassificationHead.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetClassificationHead.__init__": ["<builtin>.range", "torch.nn.Conv2d", "torch.nn.init.normal_", "<builtin>.super", "torch.nn.ReLU", "torch.nn.Sequential", "math.log", "<builtin>.isinstance", "torch.nn.init.constant_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetRegressionHead.__init__": ["<builtin>.range", "torch.nn.Conv2d", "torchvision.models.detection._utils.BoxCoder", "torch.nn.init.normal_", "<builtin>.super", "torch.nn.ReLU", "torch.nn.Sequential", "torch.nn.init.zeros_", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetHead.compute_loss": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetRegressionHead.compute_loss", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetClassificationHead.compute_loss"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetClassificationHead.compute_loss": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet._sum", "<builtin>.zip", "torch.zeros_like", "torchvision.ops.sigmoid_focal_loss", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetRegressionHead.compute_loss": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet._sum", "<builtin>.zip", "<builtin>.max", "torch.where", "torch.nn.functional.l1_loss"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetHead.forward": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetRegressionHead.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetClassificationHead.__init__"], "torchvision.ops.sigmoid_focal_loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetClassificationHead.forward": ["torch.cat"], "torch.nn.init.zeros_": [], "torch.nn.functional.l1_loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetRegressionHead.forward": ["torch.cat"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNet.__init__": ["<builtin>.tuple", "<builtin>.len", "torchvision.models.detection._utils.BoxCoder", "<builtin>.type", "torchvision.models.detection.anchor_utils.AnchorGenerator", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetHead.__init__", "<builtin>.super", "<builtin>.hasattr", "torchvision.models.detection.transform.GeneralizedRCNNTransform", "<builtin>.int", "<builtin>.isinstance", "torchvision.models.detection._utils.Matcher"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNet": ["torch.jit.unused"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNet.eager_outputs": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNet.compute_loss": ["torchvision.ops.boxes.box_iou", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetHead.compute_loss", "torch.full"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNet.postprocess_detections": ["<builtin>.range", "<builtin>.len", "<builtin>.zip", "<builtin>.min", "torchvision.ops.boxes.clip_boxes_to_image", "torch.sigmoid", "torch.div", "torch.cat", "torch.where", "torchvision.ops.boxes.batched_nms"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNet.forward": ["<builtin>.range", "torch.jit.is_scripting", "<builtin>.len", "warnings.warn", "<builtin>.type", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNetHead.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNet.compute_loss", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNet.postprocess_detections", "<builtin>.enumerate", "collections.OrderedDict", "torch.where", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNet.eager_outputs", "<builtin>.isinstance", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.retinanet_resnet50_fpn": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.retinanet.RetinaNet.__init__", "torchvision.models.detection._utils.overwrite_eps", "torchvision.models.detection.backbone_utils._validate_trainable_layers", "torchvision._internally_replaced_utils.load_state_dict_from_url", "torchvision.models.detection.backbone_utils.resnet_fpn_backbone", "torch.nn.Module.load_state_dict", "faster_rcnn.FasterRCNN.load_state_dict", "torchvision.ops.feature_pyramid_network.LastLevelP6P7"], "torchvision.ops.feature_pyramid_network.LastLevelP6P7": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.FilterAndRemapCocoCategories.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.FilterAndRemapCocoCategories.__call__": ["copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.convert_coco_poly_to_mask": ["torch.zeros", "<builtin>.len", "torch.stack", "pycocotools.mask.decode", "pycocotools.mask.frPyObjects", "torch.as_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.ConvertCocoPolysToMask.__call__": ["torch.tensor", "torch.as_tensor", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.convert_coco_poly_to_mask"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._has_valid_annotation", "torch.utils.data.Subset", "<builtin>.enumerate", "torchvision.datasets.CocoDetection.coco.getAnnIds", "torchvision.datasets.CocoDetection.coco.loadAnns", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._has_only_empty_bbox": ["<builtin>.any", "<builtin>.all"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._count_visible_keypoints": ["<builtin>.sum"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._has_valid_annotation": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._has_only_empty_bbox", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._count_visible_keypoints"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.convert_to_coco_api": ["pycocotools.coco.COCO", "<builtin>.range", "<builtin>.len", "<builtin>.sum", "<builtin>.set", "pycocotools.mask.encode", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.get_coco_api_from_dataset": ["<builtin>.range", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.convert_to_coco_api"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.CocoDetection.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.CocoDetection.__getitem__": ["<builtin>.dict", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.get_coco": ["os.path.join", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations", "transforms.Compose", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.CocoDetection.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.get_coco_kp": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.retinanet_resnet50_fpn.inference.cpu.coco_utils.get_coco"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms._flip_coco_person_keypoints": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.Compose.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.Compose.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.RandomHorizontalFlip.forward": ["torchvision.transforms.functional.get_image_size", "torch.rand", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms._flip_coco_person_keypoints", "torchvision.transforms.functional.hflip"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.ToTensor.forward": ["torchvision.transforms.functional.convert_image_dtype", "torchvision.transforms.functional.pil_to_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.PILToTensor.forward": ["torchvision.transforms.functional.pil_to_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.ConvertImageDtype.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.ConvertImageDtype.forward": ["torchvision.transforms.functional.convert_image_dtype"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.RandomIoUCrop.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.RandomIoUCrop.forward": ["<builtin>.range", "torchvision.ops.boxes.box_iou", "<builtin>.len", "torch.rand", "torchvision.transforms.functional.crop", "<builtin>.ValueError", "torchvision.transforms.functional.get_image_size", "torch.tensor", "torch.randint", "<builtin>.int", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.RandomZoomOut.__init__": ["<builtin>.ValueError", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.RandomZoomOut": ["torch.jit.unused"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.RandomZoomOut._get_fill_value": ["<builtin>.int", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.RandomZoomOut.forward": ["torch.jit.is_scripting", "torch.rand", "<builtin>.ValueError", "torchvision.transforms.functional.get_image_size", "torchvision.transforms.functional._is_pil_image", "torch.tensor", "torchvision.transforms.functional.pad", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.RandomZoomOut._get_fill_value", "<builtin>.int", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.RandomPhotometricDistort.__init__": ["torchvision.transforms.transforms.ColorJitter", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.transforms.RandomPhotometricDistort.forward": ["torch.rand", "<builtin>.ValueError", "torchvision.transforms.functional._is_pil_image", "torchvision.transforms.functional.convert_image_dtype", "torchvision.transforms.functional.get_image_num_channels", "torch.randperm", "torchvision.transforms.functional.pil_to_tensor", "<builtin>.isinstance", "torchvision.transforms.functional.to_pil_image"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.presets": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.presets.DetectionPresetTrain.__init__": ["transforms.RandomIoUCrop", "transforms.RandomPhotometricDistort", "<builtin>.list", "transforms.RandomHorizontalFlip", "<builtin>.ValueError", "transforms.Compose", "transforms.RandomZoomOut", "transforms.PILToTensor", "transforms.ConvertImageDtype"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.presets.DetectionPresetTrain.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.presets.DetectionPresetEval.__init__": ["transforms.ToTensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.presets.DetectionPresetEval.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn.FasterRCNN.__init__": ["<builtin>.dict", "torchvision.models.detection.rpn.RPNHead", "<builtin>.len", "torchvision.models.detection.rpn.RegionProposalNetwork", "<builtin>.type", "torchvision.models.detection.anchor_utils.AnchorGenerator", "<builtin>.ValueError", "torchvision.ops.MultiScaleRoIAlign", "<builtin>.super", "<builtin>.hasattr", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn.FastRCNNPredictor.__init__", "roi_heads.RoIHeads", "torchvision.models.detection.transform.GeneralizedRCNNTransform", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn.TwoMLPHead.__init__", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn.TwoMLPHead.__init__": ["torch.nn.Linear", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn.FastRCNNPredictor.__init__": ["torch.nn.Linear", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn.TwoMLPHead.forward": ["torch.nn.functional.relu"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn.FastRCNNPredictor.forward": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn.fasterrcnn_resnet50_fpn": ["torchvision.models.detection.generalized_rcnn.GeneralizedRCNN.load_state_dict", "torchvision.models.detection._utils.overwrite_eps", "torchvision.models.detection.backbone_utils._validate_trainable_layers", "torchvision._internally_replaced_utils.load_state_dict_from_url", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn.FasterRCNN.__init__", "torchvision.models.detection.backbone_utils.resnet_fpn_backbone", "torch.nn.Module.load_state_dict", "faster_rcnn.FasterRCNN.load_state_dict"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn._fasterrcnn_mobilenet_v3_large_fpn": ["torchvision.models.detection.backbone_utils.mobilenet_backbone", "<builtin>.len", "torchvision.models.detection.generalized_rcnn.GeneralizedRCNN.load_state_dict", "torchvision.models.detection.anchor_utils.AnchorGenerator", "<builtin>.ValueError", "torchvision.models.detection.backbone_utils._validate_trainable_layers", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn.FasterRCNN.__init__", "torchvision._internally_replaced_utils.load_state_dict_from_url"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn.fasterrcnn_mobilenet_v3_large_320_fpn": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn._fasterrcnn_mobilenet_v3_large_fpn"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn.fasterrcnn_mobilenet_v3_large_fpn": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.faster_rcnn._fasterrcnn_mobilenet_v3_large_fpn"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.__init__": ["pycocotools.cocoeval.COCOeval", "<builtin>.isinstance", "copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.update": ["contextlib.redirect_stdout", "pycocotools.coco.COCO", "<builtin>.list", "pycocotools.coco.COCO.loadRes", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.evaluate", "io.StringIO", "numpy.unique", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare": ["<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_keypoint", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_segmentation", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_detection"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.evaluate": ["contextlib.redirect_stdout", "<builtin>.len", "numpy.asarray", "io.StringIO"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.synchronize_between_processes": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.create_common_coco_eval", "numpy.concatenate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.create_common_coco_eval": ["<builtin>.list", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.merge", "copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.accumulate": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.summarize": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_detection": ["<builtin>.len", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.convert_to_xywh"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_segmentation": ["<builtin>.len", "pycocotools.mask.encode", "numpy.array", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.CocoEvaluator.prepare_for_coco_keypoint": ["<builtin>.len", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.convert_to_xywh"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.convert_to_xywh": ["torch.stack"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_eval.merge": ["utils.all_gather", "numpy.unique", "numpy.array", "numpy.concatenate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.update": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.synchronize_between_processes": ["torch.distributed.barrier", "torch.distributed.all_reduce", "torch.tensor", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.is_dist_avail_and_initialized", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.is_dist_avail_and_initialized": ["torch.distributed.is_initialized", "torch.distributed.is_available"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.median": ["torch.tensor", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.avg": ["torch.tensor", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.global_avg": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.max": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.value": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.__str__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.all_gather": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.get_world_size", "torch.distributed.all_gather_object"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.get_world_size": ["torch.distributed.get_world_size", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.is_dist_avail_and_initialized"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.reduce_dict": ["torch.stack", "torch.distributed.all_reduce", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.get_world_size", "torch.inference_mode", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.__init__": ["collections.defaultdict"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.update": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.__getattr__": ["<builtin>.AttributeError", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.__str__": ["<builtin>.str"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.synchronize_between_processes": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.add_meter": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.MetricLogger.log_every": ["<builtin>.len", "torch.cuda.is_available", "torch.cuda.max_memory_allocated", "<builtin>.print", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.update", "datetime.timedelta", "time.time", "<builtin>.str", "<builtin>.int", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.maskrcnn_resnet50_fpn.inference.cpu.utils.SmoothedValue.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.collate_fn": ["<builtin>.zip", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.mkdir": ["os.makedirs"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.setup_for_distributed": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.setup_for_distributed.print": ["builtins.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.get_rank": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.is_dist_avail_and_initialized", "torch.distributed.get_rank"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.is_main_process": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.get_rank"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.save_on_master": ["torch.save", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.is_main_process"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.init_distributed_mode": ["torch.distributed.barrier", "<builtin>.print", "torch.distributed.init_process_group", "torch.cuda.device_count", "torch.cuda.set_device", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.utils.setup_for_distributed", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.inference": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.inference.inference", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.inference.get_coco_data_loader", "argparse.ArgumentParser", "<builtin>.sorted", "<builtin>.callable"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.reset"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.reset": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.update": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.__str__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.inference.inference": ["<builtin>.print", "<builtin>.zip", "intel_extension_for_pytorch.optimize", "torch.profiler.profile", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.__init__", "torch.utils.mkldnn.to_mkldnn", "torch.profiler.record_function", "torch.cpu.amp.autocast", "<builtin>.len", "coco_eval.CocoEvaluator", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.inference.AverageMeter.update", "coco_utils.get_coco_api_from_dataset", "time.time", "<builtin>.list", "torch.jit.freeze", "torch.jit.trace", "<builtin>.enumerate", "torch.randn", "torch.no_grad", "<builtin>.exit"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.inference.get_coco_data_loader": ["torch.utils.data.DataLoader", "coco_utils.get_coco", "presets.DetectionPresetEval"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.FilterAndRemapCocoCategories.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.FilterAndRemapCocoCategories.__call__": ["copy.deepcopy"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.convert_coco_poly_to_mask": ["torch.zeros", "<builtin>.len", "torch.stack", "pycocotools.mask.decode", "pycocotools.mask.frPyObjects", "torch.as_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.ConvertCocoPolysToMask.__call__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.convert_coco_poly_to_mask", "torch.tensor", "torch.as_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations": ["torch.utils.data.Subset", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._has_valid_annotation", "torchvision.datasets.CocoDetection.coco.getAnnIds", "torchvision.datasets.CocoDetection.coco.loadAnns", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._has_only_empty_bbox": ["<builtin>.any", "<builtin>.all"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._count_visible_keypoints": ["<builtin>.sum"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._has_valid_annotation": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._count_visible_keypoints", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations._has_only_empty_bbox"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.convert_to_coco_api": ["pycocotools.coco.COCO", "<builtin>.range", "<builtin>.len", "<builtin>.sum", "<builtin>.set", "pycocotools.mask.encode", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.get_coco_api_from_dataset": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.convert_to_coco_api", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.CocoDetection.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.CocoDetection.__getitem__": ["<builtin>.dict", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.get_coco": ["os.path.join", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils._coco_remove_images_without_annotations", "transforms.Compose", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.CocoDetection.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.get_coco_kp": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.coco_utils.get_coco"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads": ["torch.jit._script_if_tracing", "torch.jit.unused"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.fastrcnn_loss": ["torch.nn.functional.cross_entropy", "torch.cat", "torch.nn.functional.smooth_l1_loss", "torch.where"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.maskrcnn_inference": ["torch.cat", "torch.arange"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.project_masks_on_boxes": ["torch.cat", "torchvision.ops.roi_align"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.maskrcnn_loss": ["torch.arange", "<builtin>.zip", "torch.cat", "torch.nn.functional.binary_cross_entropy_with_logits", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.project_masks_on_boxes"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.keypoints_to_heatmap": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_heatmaps_to_keypoints": ["torch.nn.functional.interpolate", "torch.stack", "torch.arange", "torch.tensor", "torch.ones", "<builtin>.int", "torch.scalar_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_heatmaps_to_keypoints_loop": ["torch.zeros", "<builtin>.range", "torch.cat", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_heatmaps_to_keypoints", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.heatmaps_to_keypoints": ["torch.zeros", "<builtin>.range", "<builtin>.len", "torch.nn.functional.interpolate", "torch.arange", "torch.div", "torchvision._is_tracing", "<builtin>.int", "torch.scalar_tensor", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_heatmaps_to_keypoints_loop"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.keypointrcnn_loss": ["<builtin>.len", "torch.nn.functional.cross_entropy", "<builtin>.zip", "torch.cat", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.keypoints_to_heatmap", "torch.where"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.keypointrcnn_inference": ["<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.heatmaps_to_keypoints"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_expand_boxes": ["torch.stack"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.expand_boxes": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_expand_boxes", "torch.zeros_like", "torchvision._is_tracing"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.expand_masks_tracing_scale": ["torch.tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.expand_masks": ["<builtin>.float", "torch._C._get_tracing_state", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.expand_masks_tracing_scale", "torch.nn.functional.pad"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.paste_mask_in_image": ["torch.zeros", "torch.nn.functional.interpolate", "<builtin>.min", "<builtin>.int", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_paste_mask_in_image": ["torch.zeros", "torch.nn.functional.interpolate", "torch.cat", "torch.ones", "torch.min", "<builtin>.int", "torch.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_paste_masks_in_image_loop": ["torch.zeros", "torch.cat", "<builtin>.range", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_paste_mask_in_image"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.paste_masks_in_image": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.expand_boxes", "torch.stack", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.expand_masks", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.paste_mask_in_image", "torchvision._is_tracing", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads._onnx_paste_masks_in_image_loop", "torch.scalar_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.__init__": ["torchvision.models.detection._utils.Matcher", "<builtin>.super", "torchvision.models.detection._utils.BoxCoder", "torchvision.models.detection._utils.BalancedPositiveNegativeSampler"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.has_mask": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.has_keypoint": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.assign_targets_to_proposals": ["torch.zeros", "<builtin>.zip", "torchvision.ops.boxes.box_iou"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.subsample": ["<builtin>.zip", "torch.where", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.add_gt_proposals": ["torch.cat", "<builtin>.zip"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.check_targets": ["<builtin>.all", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.has_mask"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.select_training_samples": ["<builtin>.range", "torch.zeros", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.subsample", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.check_targets", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.add_gt_proposals", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.assign_targets_to_proposals"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.postprocess_detections": ["torch.arange", "<builtin>.zip", "torchvision.ops.boxes.clip_boxes_to_image", "torchvision.ops.boxes.remove_small_boxes", "torch.where", "torchvision.ops.boxes.batched_nms", "torch.nn.functional.softmax"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.forward": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.fastrcnn_loss", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.has_keypoint", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.postprocess_detections", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.maskrcnn_inference", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.has_mask", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.RoIHeads.select_training_samples", "<builtin>.Exception", "torch.where", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.maskrcnn_loss", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.keypointrcnn_loss", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.faster_rcnn_resnet50_fpn.inference.cpu.roi_heads.keypointrcnn_inference"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco._isArrayLike": ["<builtin>.hasattr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.__init__": ["<builtin>.dict", "<builtin>.type", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.createIndex", "<builtin>.print", "time.time", "<builtin>.open", "json.load", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.createIndex": ["<builtin>.print", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.info": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.getAnnIds": ["itertools.chain.from_iterable", "<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco._isArrayLike", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.getCatIds": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco._isArrayLike"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.getImgIds": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco._isArrayLike", "<builtin>.enumerate", "<builtin>.set", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.loadAnns": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco._isArrayLike", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.loadCats": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco._isArrayLike", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.loadImgs": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco._isArrayLike", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.showAnns": ["<builtin>.range", "<builtin>.len", "numpy.array", "<builtin>.type", "pycocotools.mask.decode", "matplotlib.pyplot.gca", "numpy.dstack", "matplotlib.pyplot.plot", "<builtin>.print", "matplotlib.collections.PatchCollection", "matplotlib.patches.Polygon", "<builtin>.Exception", "numpy.random.random", "numpy.ones", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.loadCats", "pycocotools.mask.frPyObjects", "<builtin>.int", "numpy.all"], "matplotlib.pyplot.gca": [], "matplotlib.patches.Polygon": [], "numpy.dstack": [], "matplotlib.collections.PatchCollection": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.loadRes": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.loadNumpyAnnotations", "pycocotools.mask.toBbox", "numpy.max", "<builtin>.type", "copy.deepcopy", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.createIndex", "<builtin>.print", "numpy.min", "<builtin>.enumerate", "pycocotools.mask.area", "<builtin>.set", "time.time", "<builtin>.open", "json.load", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.getImgIds"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.loadNumpyAnnotations": ["<builtin>.range", "<builtin>.print", "<builtin>.int", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.download": ["os.makedirs", "<builtin>.len", "urllib.request.urlretrieve", "os.path.join", "<builtin>.print", "os.path.exists", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.loadImgs", "<builtin>.enumerate", "time.time", "urllib.urlretrieve"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.annToRLE": ["pycocotools.mask.frPyObjects", "pycocotools.mask.merge", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.annToMask": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.coco.COCO.annToRLE", "pycocotools.mask.decode"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.ssd300": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.ssd300.SSD300.__init__": ["torch.nn.Conv2d", "base_model.ResNet34", "torch.nn.ModuleList", "<builtin>.ValueError", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.ssd300.SSD300._init_weights", "<builtin>.super", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.ssd300.SSD300._build_additional_features"], "base_model.ResNet34": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.ssd300.SSD300._build_additional_features": ["torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Sequential", "torch.nn.ModuleList"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.ssd300.SSD300._init_weights": ["torch.nn.init.xavier_uniform_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.ssd300.SSD300.bbox_view": ["<builtin>.zip", "torch.cat"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.ssd300.SSD300.forward": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.ssd300.SSD300.bbox_view", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model._ModifyConvStrideDilation": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model._ModifyBlock": ["<builtin>.list", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model._ModifyConvStrideDilation"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model.ResNet18.__init__": ["torchvision.models.resnet.resnet18", "<builtin>.super", "torch.nn.Sequential", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model._ModifyBlock", "<builtin>.list"], "torchvision.models.resnet.resnet18": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model.ResNet18.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model.ResNet34.__init__": ["torch.load", "<builtin>.super", "torchvision.models.resnet.resnet34", "torch.nn.Sequential", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model._ModifyBlock", "<builtin>.list"], "torchvision.models.resnet.resnet34": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model.ResNet34.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model.L2Norm.__init__": ["torch.Tensor", "<builtin>.super", "torch.nn.Parameter"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model.L2Norm.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model.tailor_module": ["<builtin>.len", "torch.load", "<builtin>.zip", "collections.OrderedDict", "torch.save"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model.make_layers": ["torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.MaxPool2d"], "torch.nn.MaxPool2d": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model.Loss.__init__": ["torch.nn.Parameter", "torch.nn.CrossEntropyLoss", "<builtin>.super", "torch.nn.SmoothL1Loss"], "torch.nn.SmoothL1Loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model.Loss._loc_vec": ["torch.cat"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.base_model.Loss.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.distributed": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.distributed.DistributedDataParallel.__init__": ["torch.distributed.broadcast", "<builtin>.list", "<builtin>.super", "torch.is_tensor"], "torch.is_tensor": [], "torch.distributed.broadcast": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.distributed.DistributedDataParallel.__init__.allreduce_params": ["torch._utils._unflatten_dense_tensors", "torch.distributed.all_reduce", "torch._utils._flatten_dense_tensors", "<builtin>.print", "<builtin>.zip", "torch.distributed.get_world_size"], "torch._utils._flatten_dense_tensors": [], "torch._utils._unflatten_dense_tensors": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.distributed.DistributedDataParallel.__init__.allreduce_hook": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.distributed.DistributedDataParallel.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.bind_launch": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.bind_launch.main"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.bind_launch.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.bind_launch.main": ["<builtin>.range", "subprocess.Popen", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.bind_launch.parse_args", "os.environ.copy", "<builtin>.str"], "os.environ.copy": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.COCODetection.__init__", "<builtin>.len", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.calc_iou_tensor": ["torch.min", "torch.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.Encoder.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.Encoder.encode": ["torch.zeros", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.calc_iou_tensor", "torch.arange"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.Encoder.scale_back_batch": ["torch.nn.functional.softmax", "torch.device"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.Encoder.decode_batch": ["<builtin>.zip", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.Encoder.decode_single", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.Encoder.scale_back_batch"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.Encoder.decode_single": ["<builtin>.len", "torch.cat", "torch.tensor", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.calc_iou_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.DefaultBoxes.__init__": ["<builtin>.range", "itertools.product", "numpy.array", "torch.tensor", "<builtin>.enumerate", "math.sqrt"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.DefaultBoxes.scale_xy": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.DefaultBoxes.scale_wh": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.DefaultBoxes.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.SSDCropping.__init__": ["mlperf_logger.ssd_print"], "mlperf_logger.ssd_print": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.SSDCropping.__call__": ["<builtin>.range", "torch.tensor", "random.uniform", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.calc_iou_tensor", "<builtin>.float", "random.choice", "<builtin>.int"], "random.uniform": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.ToTensor.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.ToTensor.__call__": ["torch.Tensor", "numpy.array"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.LightingNoice.__init__": ["torch.tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.LightingNoice.__call__": ["torch.Tensor", "numpy.array", "random.gauss"], "random.gauss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.RandomHorizontalFlip.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.RandomHorizontalFlip.__call__": ["random.random"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.SSDTransformer.__init__": ["torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.RandomHorizontalFlip.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.Encoder.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.SSDCropping.__init__", "torchvision.transforms.Normalize", "torchvision.transforms.ColorJitter", "torchvision.transforms.Compose"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.SSDTransformer.dboxes": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.SSDTransformer.__call__": ["torch.zeros", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.RandomHorizontalFlip.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.SSDCropping.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.Encoder.encode"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.COCODetection.__init__": ["<builtin>.len", "<builtin>.Exception", "time.time", "<builtin>.open", "json.load", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.COCODetection.labelnum": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.COCODetection.load": ["bz2.open", "pickle.load"], "bz2.open": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.COCODetection.save": ["bz2.open", "pickle.dump"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.COCODetection.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.COCODetection.__getitem__": ["os.path.join", "torch.tensor", "PIL.Image.open"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.VOCDetection.__init__": ["os.path.join", "glob.glob", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.VOCDetection._parse_xml", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.VOCDetection._parse_xml": ["<builtin>.int", "xml.etree.ElementTree.ElementTree", "pathlib.Path"], "xml.etree.ElementTree.ElementTree": [], "pathlib.Path": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.VOCDetection.__getitem__": ["os.path.join", "torch.tensor", "PIL.Image.open"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.VOCDetection.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.utils.draw_patches": ["<builtin>.dict", "matplotlib.pyplot.imshow", "numpy.array", "matplotlib.pyplot.gca", "<builtin>.zip", "matplotlib.pyplot.show", "matplotlib.patches.Rectangle"], "matplotlib.patches.Rectangle": [], "matplotlib.pyplot.show": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.main", "os.environ.get"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.ProgressMeter.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.ProgressMeter._get_batch_fmtstr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.ProgressMeter._get_batch_fmtstr": ["<builtin>.str", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.ProgressMeter.display": ["<builtin>.str", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.AverageMeter.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.AverageMeter.reset"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.AverageMeter.reset": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.AverageMeter.update": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.AverageMeter.__str__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.trace_handler": ["<builtin>.print", "torch.profiler.tensorboard_trace_handler"], "torch.profiler.tensorboard_trace_handler": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.parse_args": ["random.SystemRandom", "argparse.ArgumentParser", "os.getenv"], "random.SystemRandom": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.show_memusage": ["<builtin>.print", "gpustat.GPUStatCollection.new_query"], "gpustat.GPUStatCollection.new_query": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.dboxes300_coco": ["utils.DefaultBoxes"], "utils.DefaultBoxes": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.coco_eval": ["mlperf_logger.mllogger.start", "numpy.array", "<builtin>.print", "<builtin>.zip", "pycocotools.cocoeval.COCOeval", "mlperf_logger.ssd_print", "<builtin>.enumerate", "time.time", "torch.no_grad", "mlperf_logger.mllogger.end", "torch.cpu.amp.autocast"], "mlperf_logger.mllogger.start": [], "mlperf_logger.mllogger.end": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.lr_warmup": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.data_preprocess": ["torch.clamp"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.train300_mlperf_coco": ["mlperf_logger.mllogger.start", "mlperf_logger.mllogger.event", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.dboxes300_coco", "torch.cuda.is_available", "utils.COCODetection", "torch.nn.parallel.DistributedDataParallel", "<builtin>.print", "utils.SSDTransformer", "torch.optim.SGD", "mlperf_logger.ssd_print", "numpy.isinf", "intel_extension_for_pytorch.optimize", "torch.ones", "numpy.random.seed", "torch.profiler.profile", "torch.zeros", "<builtin>.ImportError", "torch.load", "torch.distributed.get_rank", "mlperf_logger.broadcast_seeds", "os.environ.get", "<builtin>.float", "torch.distributed.get_world_size", "<builtin>.str", "torch.utils.data.distributed.DistributedSampler", "torch.cpu.amp.autocast", "<builtin>.range", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.train300_mlperf_coco.<lambda1>", "<builtin>.len", "torch.utils.data.DataLoader", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.train300_mlperf_coco.<lambda2>", "os.path.join", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.data_preprocess", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.ProgressMeter.__init__", "time.time", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.AverageMeter.update", "<builtin>.int", "torch.save", "ssd300.SSD300", "torch.device", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.AverageMeter.__init__", "torch.distributed.all_reduce", "torch.distributed.init_process_group", "utils.Encoder", "torch.cuda.set_device", "torch.manual_seed", "base_model.Loss", "<builtin>.enumerate", "coco.COCO", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.ProgressMeter.display", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.coco_eval", "<builtin>.exit", "mlperf_logger.mllogger.end", "random.seed"], "mlperf_logger.broadcast_seeds": [], "mlperf_logger.mllogger.event": [], "utils.Encoder": [], "utils.SSDTransformer": [], "coco.COCO": [], "utils.COCODetection": [], "ssd300.SSD300": [], "base_model.Loss": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.train300_mlperf_coco.<lambda1>": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.lr_warmup"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.train300_mlperf_coco.<lambda2>": [], "numpy.isinf": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.main": ["mlperf_logger.mllogger.start", "os.path.isdir", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.parse_args", "<builtin>.print", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.train.train300_mlperf_coco", "os.mkdir", "mlperf_logger.mllogger.end"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.eval": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.eval.voc_ap": ["<builtin>.range", "numpy.arange", "numpy.max", "numpy.sum", "numpy.concatenate", "numpy.where", "numpy.maximum"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.eval.parse_rec": ["<builtin>.int", "xml.etree.ElementTree.parse"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.eval.voc_eval": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.eval.voc_ap", "<builtin>.open", "os.path.isdir", "numpy.sort", "numpy.cumsum", "<builtin>.any", "os.mkdir", "pickle.dump", "pickle.load", "<builtin>.float", "numpy.argmax", "numpy.finfo", "<builtin>.range", "<builtin>.len", "numpy.zeros", "numpy.minimum", "numpy.argsort", "os.path.join", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.eval.parse_rec", "numpy.max", "numpy.array", "os.path.isfile", "<builtin>.sum", "<builtin>.enumerate", "numpy.maximum"], "numpy.finfo": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.mlperf_logger": ["mlperf_logging.mllog.get_mllogger", "mlperf_logging.mllog.config", "os.path.realpath", "os.getenv", "os.path.normpath", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.mlperf_logger.ssd_print": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.mlperf_logger.barrier", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.mlperf_logger.get_rank", "os.getenv"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.mlperf_logger.barrier": ["torch.distributed.is_initialized", "torch.cuda.FloatTensor", "torch.cuda.synchronize", "torch.distributed.all_reduce"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.mlperf_logger.get_rank": ["torch.distributed.is_initialized", "os.getenv", "torch.distributed.get_rank"], "torch.cuda.FloatTensor": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.training.cpu.mlperf_logger.broadcast_seeds": ["torch.distributed.is_initialized", "torch.LongTensor", "torch.distributed.broadcast"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco._isArrayLike": ["<builtin>.hasattr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.__init__": ["<builtin>.dict", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.createIndex", "<builtin>.type", "<builtin>.print", "time.time", "<builtin>.open", "json.load", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.createIndex": ["<builtin>.print", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.info": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.getAnnIds": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco._isArrayLike", "itertools.chain.from_iterable", "<builtin>.len", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.getCatIds": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco._isArrayLike", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.getImgIds": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco._isArrayLike", "<builtin>.len", "<builtin>.enumerate", "<builtin>.set", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.loadAnns": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco._isArrayLike", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.loadCats": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco._isArrayLike", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.loadImgs": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco._isArrayLike", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.showAnns": ["<builtin>.range", "<builtin>.len", "numpy.array", "<builtin>.type", "pycocotools.mask.decode", "matplotlib.pyplot.gca", "numpy.dstack", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.loadCats", "matplotlib.pyplot.plot", "<builtin>.print", "matplotlib.collections.PatchCollection", "matplotlib.patches.Polygon", "<builtin>.Exception", "numpy.random.random", "numpy.ones", "pycocotools.mask.frPyObjects", "<builtin>.int", "numpy.all"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.loadRes": ["pycocotools.mask.toBbox", "numpy.max", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.createIndex", "<builtin>.type", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.getImgIds", "copy.deepcopy", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.__init__", "<builtin>.print", "numpy.min", "<builtin>.enumerate", "pycocotools.mask.area", "<builtin>.set", "time.time", "<builtin>.open", "json.load", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.loadNumpyAnnotations"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.loadNumpyAnnotations": ["<builtin>.range", "<builtin>.print", "<builtin>.int", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.download": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.loadImgs", "os.makedirs", "<builtin>.len", "urllib.request.urlretrieve", "os.path.join", "<builtin>.print", "os.path.exists", "<builtin>.enumerate", "time.time", "urllib.urlretrieve"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.annToRLE": ["pycocotools.mask.frPyObjects", "pycocotools.mask.merge", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.annToMask": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.coco.COCO.annToRLE", "pycocotools.mask.decode"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd300": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd300.SSD300.__init__": ["torch.nn.Conv2d", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd300.SSD300._build_additional_features", "base_model.ResNet34", "torch.nn.ModuleList", "<builtin>.ValueError", "<builtin>.zip", "<builtin>.super", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd300.SSD300._init_weights"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd300.SSD300._build_additional_features": ["torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Sequential", "torch.nn.ModuleList"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd300.SSD300._init_weights": ["torch.nn.init.xavier_uniform_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd300.SSD300.bbox_view": ["<builtin>.zip", "torch.cat", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd300.SSD300.forward": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd300.SSD300.bbox_view", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model._ModifyConvStrideDilation": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model._ModifyBlock": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model._ModifyConvStrideDilation", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model.ResNet18.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model._ModifyBlock", "torchvision.models.resnet.resnet18", "<builtin>.super", "torch.nn.Sequential", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model.ResNet18.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model.ResNet34.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model._ModifyBlock", "<builtin>.super", "torchvision.models.resnet.resnet34", "torch.nn.Sequential", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model.ResNet34.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model.L2Norm.__init__": ["torch.Tensor", "<builtin>.super", "torch.nn.Parameter"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model.L2Norm.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model.tailor_module": ["<builtin>.len", "torch.load", "<builtin>.zip", "collections.OrderedDict", "torch.save"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model.make_layers": ["torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.MaxPool2d"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model.Loss.__init__": ["torch.nn.Parameter", "torch.nn.CrossEntropyLoss", "<builtin>.super", "torch.nn.SmoothL1Loss"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model.Loss._loc_vec": ["torch.cat"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model.Loss.forward": ["torch.clamp", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.base_model.Loss._loc_vec"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.oob_utils": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.oob_utils._parent_name": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.oob_utils.matches_module_pattern": ["<builtin>.zip", "<builtin>.len", "<builtin>.isinstance", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.oob_utils.replace_node_module": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.oob_utils._parent_name", "<builtin>.isinstance", "<builtin>.setattr"], "<builtin>.setattr": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.oob_utils.conv_bn_fuse": ["<builtin>.dict", "<builtin>.len", "copy.deepcopy", "torch.fx.GraphModule", "torch.fx.symbolic_trace", "torch.nn.utils.fusion.fuse_conv_bn_eval", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.oob_utils.matches_module_pattern", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.oob_utils.replace_node_module"], "torch.fx.symbolic_trace": [], "torch.nn.utils.fusion.fuse_conv_bn_eval": [], "torch.fx.GraphModule": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.main", "os.environ.get"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.get_bs_per_stream": ["<builtin>.range"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.show_memusage": ["<builtin>.print", "gpustat.GPUStatCollection.new_query"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.ProgressMeter.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.ProgressMeter._get_batch_fmtstr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.ProgressMeter._get_batch_fmtstr": ["<builtin>.str", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.ProgressMeter.display": ["<builtin>.str", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.SSD_R34_NMS.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.SSD_R34_NMS.forward": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.AverageMeter.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.AverageMeter.reset"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.AverageMeter.reset": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.AverageMeter.update": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.AverageMeter.__str__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.dboxes_R34_coco": ["utils.DefaultBoxes", "<builtin>.int", "ssd_r34.SSD_R34", "torch.rand"], "ssd_r34.SSD_R34": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.coco_eval": ["torch.cuda.is_available", "<builtin>.print", "<builtin>.zip", "pycocotools.cocoeval.COCOeval", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.SSD_R34_NMS.__init__", "intel_extension_for_pytorch.optimize", "torch.profiler.profile", "intel_extension_for_pytorch.cpu.runtime.CPUPool", "torch.nn.Module.eval", "threading.Thread", "intel_extension_for_pytorch.cpu.runtime.MultiStreamModule", "<builtin>.range", "torch.cpu.amp.autocast", "<builtin>.len", "torch.utils.ThroughputBenchmark", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.get_bs_per_stream", "torch.fx.experimental.optimization.fuse", "time.time", "intel_extension_for_pytorch.quantization.QuantConf", "numpy.array", "torch.jit.freeze", "torch.jit.trace", "<builtin>.enumerate", "torch.randn", "intel_extension_for_pytorch.quantization.convert", "torch.no_grad", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.AverageMeter.__init__", "<builtin>.exit", "torch.profiler.tensorboard_trace_handler"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.coco_eval.run_model": ["<builtin>.range", "<builtin>.print", "<builtin>.enumerate", "time.time", "torch.no_grad"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.eval_ssd_r34_mlperf_coco": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.coco_eval", "torch.utils.data.DataLoader", "ssd_r34.SSD_R34", "utils.COCODetection", "torch.cuda.is_available", "torch.load", "os.path.join", "<builtin>.print", "utils.Encoder", "utils.SSDTransformer", "coco.COCO", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.dboxes_R34_coco"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.eval_ssd_r34_mlperf_coco.<lambda1>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.main": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.parse_args", "os.path.isdir", "<builtin>.print", "torch.cuda.set_device", "torch.manual_seed", "os.mkdir", "numpy.random.seed", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer_weight_sharing.eval_ssd_r34_mlperf_coco"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.COCODetection.__init__", "<builtin>.len", "os.environ.get"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.calc_iou_tensor": ["torch.min", "torch.max"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.Encoder.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.Encoder.encode": ["torch.zeros", "torch.arange", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.calc_iou_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.Encoder.scale_back_batch": ["torch.nn.functional.softmax", "torch.device"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.Encoder.decode_batch": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.Encoder.scale_back_batch", "numpy.array", "<builtin>.zip", "torch.cat", "torch.ops.torch_ipex.batch_score_nms", "torch.ops.torch_ipex.parallel_scale_back_batch", "torch.from_numpy", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.Encoder.decode_single"], "torch.ops.torch_ipex.parallel_scale_back_batch": [], "torch.ops.torch_ipex.batch_score_nms": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.Encoder.decode_single": ["<builtin>.len", "torch.cat", "torch.tensor", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.calc_iou_tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.Encoder.decode_single_ipex": ["torch.ops.torch_ipex.batch_score_nms"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.DefaultBoxes.__init__": ["<builtin>.range", "itertools.product", "numpy.array", "torch.tensor", "<builtin>.enumerate", "math.sqrt"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.DefaultBoxes.scale_xy": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.DefaultBoxes.scale_wh": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.DefaultBoxes.__call__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.SSDCropping.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.SSDCropping.__call__": ["<builtin>.range", "torch.tensor", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.calc_iou_tensor", "random.uniform", "<builtin>.float", "random.choice", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.ToTensor.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.ToTensor.__call__": ["torch.Tensor", "numpy.array"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.LightingNoice.__init__": ["torch.tensor"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.LightingNoice.__call__": ["torch.Tensor", "numpy.array", "random.gauss"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.RandomHorizontalFlip.__init__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.RandomHorizontalFlip.__call__": ["random.random"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.SSDTransformer.__init__": ["torchvision.transforms.Resize", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.RandomHorizontalFlip.__init__", "torchvision.transforms.ToTensor", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.Encoder.__init__", "torchvision.transforms.Normalize", "torchvision.transforms.ColorJitter", "torchvision.transforms.Compose", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.SSDCropping.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.SSDTransformer.dboxes": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.SSDTransformer.__call__": ["torch.zeros", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.RandomHorizontalFlip.__init__", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.Encoder.encode", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.SSDCropping.__init__"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.COCODetection.__init__": ["<builtin>.len", "<builtin>.Exception", "time.time", "<builtin>.open", "json.load", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.COCODetection.labelnum": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.COCODetection.load": ["bz2.open", "pickle.load"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.COCODetection.save": ["bz2.open", "pickle.dump"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.COCODetection.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.COCODetection.__getitem__": ["os.path.join", "torch.tensor", "PIL.Image.open"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.VOCDetection.__init__": ["os.path.join", "glob.glob", "<builtin>.open", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.VOCDetection._parse_xml"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.VOCDetection._parse_xml": ["<builtin>.int", "xml.etree.ElementTree.ElementTree", "pathlib.Path"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.VOCDetection.__getitem__": ["os.path.join", "torch.tensor", "PIL.Image.open"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.VOCDetection.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.utils.draw_patches": ["<builtin>.dict", "matplotlib.pyplot.imshow", "numpy.array", "matplotlib.pyplot.gca", "<builtin>.zip", "matplotlib.pyplot.show", "matplotlib.patches.Rectangle"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer": ["os.environ.get", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.main"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.show_memusage": ["<builtin>.print", "gpustat.GPUStatCollection.new_query"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.ProgressMeter.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.ProgressMeter._get_batch_fmtstr"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.ProgressMeter._get_batch_fmtstr": ["<builtin>.str", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.ProgressMeter.display": ["<builtin>.str", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.AverageMeter.__init__": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.AverageMeter.reset"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.AverageMeter.reset": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.AverageMeter.update": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.AverageMeter.__str__": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.dboxes_R34_coco": ["utils.DefaultBoxes", "<builtin>.int", "ssd_r34.SSD_R34", "torch.rand"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.coco_eval": ["torch.cuda.is_available", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.ProgressMeter.display", "<builtin>.print", "<builtin>.zip", "pycocotools.cocoeval.COCOeval", "intel_extension_for_pytorch.optimize", "torch.profiler.profile", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.AverageMeter.__init__", "intel_extension_for_pytorch.quantization.calibrate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.AverageMeter.update", "torch.cpu.amp.autocast", "<builtin>.range", "<builtin>.len", "torch.fx.experimental.optimization.fuse", "time.time", "intel_extension_for_pytorch.quantization.QuantConf", "numpy.array", "torch.jit.freeze", "torch.jit.trace", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.ProgressMeter.__init__", "torch.randn", "intel_extension_for_pytorch.quantization.convert", "torch.no_grad", "oob_utils.conv_bn_fuse", "<builtin>.exit", "torch.profiler.tensorboard_trace_handler"], "intel_extension_for_pytorch.quantization.calibrate": [], "oob_utils.conv_bn_fuse": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.eval_ssd_r34_mlperf_coco": ["torch.utils.data.DataLoader", "ssd_r34.SSD_R34", "utils.COCODetection", "torch.cuda.is_available", "torch.load", "os.path.join", "<builtin>.print", "utils.Encoder", "utils.SSDTransformer", "coco.COCO", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.coco_eval", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.dboxes_R34_coco"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.eval_ssd_r34_mlperf_coco.<lambda1>": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.main": ["os.path.isdir", "<builtin>.print", "torch.cuda.set_device", "torch.manual_seed", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.eval_ssd_r34_mlperf_coco", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.infer.parse_args", "os.mkdir", "numpy.random.seed"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd_r34": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd_r34.SSD_R34.__init__": ["torch.nn.Conv2d", "base_model.ResNet34", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd_r34.SSD_R34._build_additional_features", "torch.nn.ModuleList", "<builtin>.ValueError", "<builtin>.zip", "<builtin>.super", "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd_r34.SSD_R34._init_weights"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd_r34.SSD_R34._build_additional_features": ["torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Sequential", "torch.nn.ModuleList"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd_r34.SSD_R34._init_weights": ["torch.nn.init.xavier_uniform_"], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd_r34.SSD_R34.bbox_view": ["<builtin>.zip", "torch.cat", "torch.jit.annotate"], "torch.jit.annotate": [], "...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd_r34.SSD_R34.forward": ["...repos_filtered.IntelAI.models.models.object_detection.pytorch.ssd-resnet34.inference.cpu.ssd_r34.SSD_R34.bbox_view"], "...repos_filtered.IntelAI.models.models.language_translation": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils.evaluate": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils._word_accuracy", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils._accuracy", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils._bleu", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils._rouge"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils._bleu": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils._clean", "codecs.getreader", "<builtin>.zip", "bleu.compute_bleu", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils._rouge": ["tensorflow.io.gfile.GFile", "rouge.rouge", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils._clean", "codecs.getreader"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils._accuracy": ["tensorflow.io.gfile.GFile", "codecs.getreader"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils._word_accuracy": ["<builtin>.range", "<builtin>.len", "codecs.getreader", "<builtin>.min", "tensorflow.io.gfile.GFile", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils._clean": ["re.sub"], "codecs.getreader": [], "bleu.compute_bleu": [], "rouge.rouge": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.evaluation_utils._moses_bleu": ["os.path.exists", "subprocess.call", "shlex.split", "subprocess.check_output", "<builtin>.float", "re.search"], "shlex.split": [], "subprocess.call": [], "subprocess.check_output": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer.reset"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer.reset": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer.add_sentence": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer.add_sentence_with_multiple_refs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer.add_sentence_with_multiple_refs": ["<builtin>.range", "<builtin>.len", "<builtin>.min", "collections.Counter", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer._get_ngram_match_values", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer._get_ngrams"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer._get_ngrams": ["<builtin>.range", "collections.Counter", "<builtin>.len", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer._get_ngram_match_values": ["<builtin>.range", "<builtin>.len", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer.calc_BLEU_score": ["<builtin>.range", "<builtin>.min", "<builtin>.sum", "math.exp", "<builtin>.float", "math.log"], "math.exp": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.compute_bleu": ["<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer.add_sentence_with_multiple_refs", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.bleu.RunningBLEUScorer.calc_BLEU_score"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._get_ngrams": ["<builtin>.range", "<builtin>.set", "<builtin>.len", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._split_into_words": ["itertools.chain", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._get_word_ngrams": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._get_ngrams", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._split_into_words"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._len_lcs": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._lcs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._lcs": ["<builtin>.dict", "<builtin>.len", "<builtin>.range", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._recon_lcs": ["<builtin>.len", "<builtin>.tuple", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._recon_lcs._recon", "<builtin>.map", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._lcs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._recon_lcs._recon": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._recon_lcs._recon"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._recon_lcs.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge.rouge_n": ["<builtin>.ValueError", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._get_word_ngrams"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._f_p_r_lcs": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge.rouge_l_sentence_level": ["<builtin>.len", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._split_into_words", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._len_lcs", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._f_p_r_lcs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._union_lcs": ["<builtin>.len", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._split_into_words", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._recon_lcs", "<builtin>.set"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge.rouge_l_summary_level": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._union_lcs", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._split_into_words", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge._f_p_r_lcs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge.rouge": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge.rouge_l_sentence_level", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.rouge.rouge_n", "<builtin>.map"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.check_tensorflow_version": ["distutils.version.LooseVersion", "<builtin>.EnvironmentError"], "<builtin>.EnvironmentError": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.safe_exp": ["math.exp", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.print_time": ["sys.stdout.flush", "<builtin>.print", "time.time", "time.ctime"], "time.ctime": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.print_out": ["sys.stdout.flush", "<builtin>.print", "<builtin>.isinstance", "sys.stdout.write"], "sys.stdout.write": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.print_hparams": ["<builtin>.str", "<builtin>.all", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.print_out", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.load_hparams": ["tensorflow.io.gfile.exists", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.print_out", "codecs.getreader", "os.path.join", "json.load", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.maybe_parse_standard_hparams": ["tensorflow.io.gfile.GFile", "tensorflow.io.gfile.exists", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.print_out", "codecs.getreader"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.save_hparams": ["os.path.join", "tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.print_out", "codecs.getwriter"], "codecs.getwriter": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.debug_tensor": ["tensorflow.shape", "tensorflow.compat.v1.Print"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.add_summary": ["tensorflow.compat.v1.Summary.Value", "tensorflow.compat.v1.Summary"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.get_config_proto": ["tensorflow.compat.v1.ConfigProto"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.format_text": ["<builtin>.isinstance", "<builtin>.hasattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.format_bpe_text": ["<builtin>.len", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.format_spm_text": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.misc_utils.format_text"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.run_inference": ["tensorflow.Graph", "os.path.join", "tensorflow.compat.v1.ConfigProto", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.run_inference.read_source_sentences", "tensorflow.io.gfile.GFile", "nmt_utils.decode_and_evaluate", "tensorflow.python.framework.importer.import_graph_def", "tensorflow.io.gfile.makedirs", "argparse.ArgumentParser", "os.getcwd", "tensorflow.compat.v1.Session", "tensorflow.core.framework.graph_pb2.GraphDef"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.run_inference.read_source_sentences": ["tensorflow.io.gfile.GFile", "codecs.getreader"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.run_inference.create_new_vocab_file": ["<builtin>.len", "misc_utils.print_out", "tensorflow.io.gfile.exists", "codecs.getwriter", "codecs.getreader", "os.path.join", "<builtin>.ValueError", "tensorflow.io.gfile.GFile", "os.path.basename"], "misc_utils.print_out": [], "tensorflow.python.framework.importer.import_graph_def": [], "nmt_utils.decode_and_evaluate": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._parse_fail": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._reuse_fail": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._process_scalar_value": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._reuse_fail", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.parse_values.parse_bool", "<builtin>.int", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._parse_fail", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.parse_values.parse_bool": ["<builtin>.int", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._parse_fail", "<builtin>.bool"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._process_list_value": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._reuse_fail", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.parse_values.parse_bool", "<builtin>.ValueError", "<builtin>.filter", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._parse_fail"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._cast_to_type_if_compatible": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.issubclass", "<builtin>.type"], "<builtin>.issubclass": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.parse_values": ["<builtin>.len", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._process_scalar_value", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._process_list_value", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._parse_fail"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.__init__": ["<builtin>.ValueError", "six.iteritems", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.add_hparam", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams._init_from_proto"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams._init_from_proto": ["tensorflow.python.util.compat.as_str", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.add_hparam", "<builtin>.getattr", "<builtin>.int", "<builtin>.isinstance"], "six.iteritems": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.add_hparam": ["<builtin>.setattr", "<builtin>.type", "<builtin>.ValueError", "<builtin>.getattr", "<builtin>.isinstance"], "tensorflow.python.util.compat.as_str": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.set_hparam": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.setattr", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._cast_to_type_if_compatible"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.del_hparam": ["<builtin>.delattr", "<builtin>.hasattr"], "<builtin>.delattr": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.parse": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.parse_values", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.override_from_dict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.override_from_dict": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.set_hparam"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.set_model_structure": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.get_model_structure": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.to_json": ["json.dumps", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.values"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.values": ["<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.parse_json": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.override_from_dict", "json.loads"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.get": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam._cast_to_type_if_compatible", "<builtin>.ValueError", "<builtin>.getattr", "<builtin>.str", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.__contains__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.__str__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.values"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.__repr__": ["<builtin>.str", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.values", "<builtin>.sorted", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams._get_kind_name": ["<builtin>.ValueError", "<builtin>.str", "<builtin>.issubclass"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.to_proto": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams._get_kind_name", "tensorflow.python.util.compat.as_bytes", "<builtin>.setattr", "<builtin>.getattr"], "tensorflow.python.util.compat.as_bytes": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.from_proto": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.hparam.HParams.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.nmt_utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.nmt_utils.decode_and_evaluate": ["<builtin>.range", "misc_utils.print_out", "codecs.getwriter", "<builtin>.len", "tensorflow.io.gfile.exists", "<builtin>.print", "<builtin>.min", "<builtin>.sum", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.nmt_utils.get_translation", "time.time", "misc_utils.print_time", "<builtin>.float", "evaluation_utils.evaluate", "tensorflow.io.gfile.GFile", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.mlperf_gnmt.fp32.nmt_utils.get_translation": ["misc_utils.format_text"], "misc_utils.print_time": [], "evaluation_utils.evaluate": [], "misc_utils.format_text": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data": ["os.path.realpath", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.main", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.find_file": ["os.path.join", "<builtin>.len", "os.walk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.get_raw_files": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.download_and_extract"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.download_and_extract": ["<builtin>.OSError", "tarfile.open", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.find_file", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.download_from_url", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.download_report_hook": ["<builtin>.print", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.download_from_url": ["urllib.request.urlretrieve", "os.path.join", "<builtin>.print", "tensorflow.io.gfile.rename", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.find_file", "tensorflow.compat.v1.logging.info"], "tensorflow.io.gfile.rename": [], "<builtin>.OSError": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.txt_line_iterator": ["tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.compile_files": ["<builtin>.range", "<builtin>.len", "os.path.join", "tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.write_file", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.write_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.txt_line_iterator"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.encode_and_save_files": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.all_exist", "tensorflow.io.TFRecordWriter", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.txt_line_iterator", "<builtin>.zip", "<builtin>.enumerate", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.io.gfile.rename", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.dict_to_example", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.shard_filename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.shard_filename": ["os.path.join"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.all_exist": ["tensorflow.io.gfile.exists"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.dict_to_example": ["tensorflow.train.Feature", "tensorflow.train.Int64List", "six.iteritems", "tensorflow.train.Features", "tensorflow.train.Example"], "mlperf_compliance.mlperf_log.transformer_print": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.shuffle_records": ["<builtin>.len", "tensorflow.io.TFRecordWriter", "tensorflow.io.gfile.remove", "<builtin>.enumerate", "tensorflow.compat.v1.python_io.tf_record_iterator", "random.shuffle", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "tensorflow.io.gfile.remove": [], "tensorflow.train.Features": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.make_dir": ["tensorflow.io.gfile.exists", "tensorflow.io.gfile.makedirs", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.main": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.get_raw_files", "os.path.join", "tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.shuffle_records", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.compile_files", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.make_dir", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.process_data.encode_and_save_files", "utils.tokenizer.Subtokenizer.init_from_files", "tensorflow.compat.v1.logging.info"], "utils.tokenizer.Subtokenizer.init_from_files": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate._get_sorted_inputs": ["<builtin>.sorted", "<builtin>.len", "tensorflow.io.gfile.GFile", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate._get_sorted_inputs.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate._encode_and_add_eos": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate._trim_and_decode": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate.translate_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate._get_sorted_inputs", "<builtin>.len", "<builtin>.ValueError", "<builtin>.print", "six.moves.xrange", "<builtin>.enumerate", "time.time", "tensorflow.io.gfile.isdir", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate._trim_and_decode"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate.translate_file.input_generator": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate._encode_and_add_eos", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate.translate_file.input_fn": ["tensorflow.data.Dataset.from_generator", "tensorflow.TensorShape"], "tensorflow.TensorShape": [], "tensorflow.data.Dataset.from_generator": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate.translate_text": ["<builtin>.print", "<builtin>.next", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate._encode_and_add_eos", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate._trim_and_decode"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate.translate_text.input_fn": ["tensorflow.data.Dataset.from_tensors"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate.main": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate.translate_text", "tensorflow.compat.v1.logging.warn", "tensorflow.estimator.Estimator", "tensorflow.io.gfile.exists", "os.path.join", "<builtin>.ValueError", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.translate.translate_file", "os.path.abspath", "tensorflow.estimator.RunConfig", "utils.tokenizer.Subtokenizer", "tensorflow.compat.v1.logging.info"], "tensorflow.compat.v1.logging.warn": [], "utils.tokenizer.Subtokenizer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu.UnicodeRegex.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu.main", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu.UnicodeRegex.__init__": ["re.compile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu.UnicodeRegex.property_chars"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu.UnicodeRegex.property_chars": ["<builtin>.range", "six.unichr", "unicodedata.category"], "six.unichr": [], "unicodedata.category": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu.bleu_tokenize": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu.bleu_wrapper": ["<builtin>.len", "utils.metrics.compute_bleu", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu.bleu_tokenize", "tensorflow.io.gfile.GFile"], "utils.metrics.compute_bleu": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu.main": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main": ["horovod.tensorflow.size", "os.path.join", "os.path.realpath", "<builtin>.print", "tensorflow.compat.v1.app.run", "horovod.tensorflow.init", "tensorflow.compat.v1.disable_eager_execution", "argparse.ArgumentParser", "os.path.normpath", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.model_fn": ["tensorflow.estimator.EstimatorSpec", "tensorflow.reduce_sum", "utils.metrics.get_eval_metrics", "model.transformer.Transformer", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.get_train_op", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.train.LoggingTensorHook", "utils.metrics.padded_cross_entropy_loss"], "model.transformer.Transformer": [], "utils.metrics.padded_cross_entropy_loss": [], "utils.metrics.get_eval_metrics": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.get_train_op": ["horovod.tensorflow.size", "tensorflow.python.training.adam.AdamOptimizer", "tensorflow.linalg.global_norm", "tensorflow.compat.v1.trainable_variables", "<builtin>.zip", "mlperf_compliance.mlperf_log.resnet_print", "tensorflow.compat.v1.train.get_global_step", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.get_learning_rate", "tensorflow.compat.v1.variable_scope", "mlperf_compliance.tf_mlperf_log.log_deferred", "horovod.tensorflow.DistributedOptimizer", "<builtin>.list", "tensorflow.compat.v1.summary.scalar"], "tensorflow.compat.v1.train.LoggingTensorHook": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.get_learning_rate": ["tensorflow.cast", "tensorflow.math.rsqrt", "tensorflow.maximum", "tensorflow.compat.v1.name_scope", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.minimum", "tensorflow.compat.v1.summary.scalar"], "tensorflow.math.rsqrt": [], "tensorflow.python.training.adam.AdamOptimizer": [], "tensorflow.linalg.global_norm": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.translate_and_compute_bleu": ["os.remove", "translate.translate_file", "tempfile.NamedTemporaryFile", "compute_bleu.bleu_wrapper"], "translate.translate_file": [], "compute_bleu.bleu_wrapper": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.get_global_step": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.evaluate_and_log_bleu": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.translate_and_compute_bleu", "tensorflow.compat.v1.Summary.Value", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.get_global_step", "os.path.join", "<builtin>.print", "utils.tokenizer.Subtokenizer", "tensorflow.compat.v1.Summary"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.train_schedule": ["tensorflow.compat.v1.summary.FileWriter", "<builtin>.ValueError", "<builtin>.print", "os.path.join", "six.moves.xrange", "tensorflow.compat.v1.train.ProfilerHook", "mlperf_compliance.mlperf_log.transformer_print", "horovod.tensorflow.BroadcastGlobalVariablesHook", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.evaluate_and_log_bleu", "mlperf_utils.logs.hooks_helper.get_train_hooks"], "tensorflow.compat.v1.summary.FileWriter": [], "tensorflow.compat.v1.train.ProfilerHook": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.main": ["tensorflow.estimator.Estimator", "tensorflow.io.gfile.exists", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.transformer_main.train_schedule", "<builtin>.ValueError", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.logging.set_verbosity", "horovod.tensorflow.rank", "<builtin>.Exception", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.set_random_seed", "horovod.tensorflow.init", "<builtin>.str", "random.seed", "tensorflow.estimator.RunConfig"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu_test": ["unittest.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file": ["tempfile.NamedTemporaryFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_same": ["unittest.TestCase.assertEqual", "compute_bleu.bleu_wrapper", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_same_different_case": ["unittest.TestCase.assertLess", "unittest.TestCase.assertEqual", "compute_bleu.bleu_wrapper", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file"], "unittest.TestCase.assertLess": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_different": ["unittest.TestCase.assertLess", "compute_bleu.bleu_wrapper", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_tokenize": ["unittest.TestCase.assertEqual", "compute_bleu.bleu_tokenize"], "compute_bleu.bleu_tokenize": [], "unittest.main": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.find_file": ["os.path.join", "<builtin>.len", "os.walk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.get_raw_files": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.download_and_extract"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.download_and_extract": ["<builtin>.OSError", "tarfile.open", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.download_from_url", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.find_file", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.download_report_hook": ["<builtin>.print", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.download_from_url": ["urllib.request.urlretrieve", "os.path.join", "<builtin>.print", "tensorflow.io.gfile.rename", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.find_file", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.txt_line_iterator": ["tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.compile_files": ["<builtin>.range", "<builtin>.len", "os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.write_file", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.write_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.txt_line_iterator"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.encode_and_save_files": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.shard_filename", "tensorflow.io.TFRecordWriter", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.all_exist", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.txt_line_iterator", "<builtin>.zip", "<builtin>.enumerate", "tensorflow.io.gfile.rename", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.dict_to_example", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.shard_filename": ["os.path.join"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.all_exist": ["tensorflow.io.gfile.exists"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.dict_to_example": ["tensorflow.train.Feature", "tensorflow.train.Int64List", "six.iteritems", "tensorflow.train.Features", "tensorflow.train.Example"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.shuffle_records": ["<builtin>.len", "tensorflow.io.TFRecordWriter", "tensorflow.io.gfile.remove", "<builtin>.enumerate", "tensorflow.compat.v1.python_io.tf_record_iterator", "random.shuffle", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.make_dir": ["tensorflow.io.gfile.exists", "tensorflow.io.gfile.makedirs", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.main": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.encode_and_save_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.shuffle_records", "os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.get_raw_files", "tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.compile_files", "utils.tokenizer.Subtokenizer.init_from_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.data_download.make_dir", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._pad_tensors_to_same_length": ["tensorflow.pad", "tensorflow.shape", "tensorflow.maximum", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.padded_cross_entropy_loss": ["tensorflow.cast", "tensorflow.compat.v1.name_scope", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.one_hot", "tensorflow.not_equal", "tensorflow.math.log", "tensorflow.nn.softmax_cross_entropy_with_logits"], "tensorflow.nn.softmax_cross_entropy_with_logits": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._convert_to_eval_metric": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._convert_to_eval_metric.problem_metric_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.rouge_2_fscore", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.padded_accuracy", "tensorflow.compat.v1.metrics.mean", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.padded_neg_log_perplexity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.bleu_score", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.rouge_l_fscore", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.padded_accuracy_top5", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.padded_sequence_accuracy"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.bleu_score": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.rouge_2_fscore": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.rouge_l_fscore": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.padded_accuracy_top5": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.padded_accuracy_topk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.padded_accuracy": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.not_equal", "tensorflow.compat.v1.variable_scope", "tensorflow.equal", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.padded_neg_log_perplexity": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.padded_cross_entropy_loss"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.padded_sequence_accuracy": ["tensorflow.cast", "<builtin>.range", "<builtin>.len", "<builtin>.list", "tensorflow.reduce_sum", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.not_equal", "tensorflow.minimum", "tensorflow.constant", "tensorflow.compat.v1.variable_scope", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.get_eval_metrics": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._convert_to_eval_metric.problem_metric_fn", "six.iteritems", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._convert_to_eval_metric"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.padded_accuracy_topk": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.nn.top_k", "tensorflow.shape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.not_equal", "tensorflow.zeros_like", "tensorflow.minimum", "tensorflow.compat.v1.variable_scope", "tensorflow.equal"], "tensorflow.zeros_like": [], "tensorflow.compat.v1.py_func": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._get_ngrams_with_counter": ["collections.Counter", "<builtin>.len", "<builtin>.tuple", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.compute_bleu": ["<builtin>.dict", "<builtin>.len", "numpy.float32", "<builtin>.zip", "<builtin>.min", "<builtin>.sum", "six.moves.xrange", "math.exp", "<builtin>.float", "math.log", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._get_ngrams_with_counter", "<builtin>.max"], "numpy.float32": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._get_ngrams": ["<builtin>.range", "<builtin>.set", "<builtin>.len", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.rouge_n": ["<builtin>.len", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._get_ngrams", "numpy.mean", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics.rouge_l_sentence_level": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._f_lcs", "<builtin>.zip", "numpy.mean", "<builtin>.float", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._len_lcs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._len_lcs": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._lcs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._f_lcs": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.metrics._lcs": ["<builtin>.dict", "<builtin>.len", "<builtin>.range", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._load_records": ["tensorflow.data.TFRecordDataset"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._parse_example": ["tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.sparse.to_dense"], "tensorflow.sparse.to_dense": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._filter_max_length": ["tensorflow.logical_and", "tensorflow.size"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._get_example_length": ["tensorflow.shape", "tensorflow.maximum"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._create_min_max_boundaries": ["<builtin>.int", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._batch_examples": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._create_min_max_boundaries", "tensorflow.constant", "tensorflow.data.experimental.group_by_window"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._batch_examples.example_to_bucket_id": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._get_example_length", "tensorflow.less", "tensorflow.compat.v1.where", "tensorflow.reduce_min", "tensorflow.logical_and", "tensorflow.less_equal"], "tensorflow.less_equal": [], "tensorflow.reduce_min": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._batch_examples.window_size_fn": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._batch_examples.batching_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._batch_examples.window_size_fn"], "tensorflow.data.experimental.group_by_window": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._read_and_batch_from_files": ["horovod.tensorflow.size", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._batch_examples", "tensorflow.data.experimental.parallel_interleave", "tensorflow.data.Dataset.list_files", "horovod.tensorflow.rank", "mlperf_compliance.mlperf_log.transformer_print"], "tensorflow.data.Dataset.list_files": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._read_and_batch_from_files.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._filter_max_length"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset.train_input_fn": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._read_and_batch_from_files", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset.eval_input_fn": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.dataset._read_and_batch_from_files", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer": ["six.unichr", "unicodedata.category", "six.moves.xrange", "<builtin>.set", "re.compile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer.Subtokenizer.__init__": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._list_to_index_dict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._generate_alphabet_dict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._load_vocab_file", "<builtin>.max", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._load_vocab_file": ["tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._native_to_unicode"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._generate_alphabet_dict": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._list_to_index_dict": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer.Subtokenizer.init_from_files": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._count_tokens", "tensorflow.io.gfile.exists", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._save_vocab_file", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer.Subtokenizer.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._generate_alphabet_dict", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._count_tokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._split_string_to_tokens", "collections.defaultdict", "<builtin>.int", "tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._native_to_unicode"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._generate_subtokens", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._save_vocab_file": ["tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._unicode_to_native"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer.Subtokenizer.encode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer.Subtokenizer._token_to_subtoken_ids", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._split_string_to_tokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._native_to_unicode"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._native_to_unicode": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._split_string_to_tokens": ["<builtin>.len", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer.Subtokenizer._token_to_subtoken_ids": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._split_token_to_subtokens", "<builtin>.hash", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._escape_token"], "<builtin>.hash": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._escape_token": ["<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._split_token_to_subtokens": ["<builtin>.len", "<builtin>.min", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer.Subtokenizer.decode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer.Subtokenizer._subtoken_ids_to_tokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._unicode_to_native", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._join_tokens_to_string"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer.Subtokenizer._subtoken_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._unescape_token", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._join_tokens_to_string": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._unicode_to_native": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._unescape_token": [], "<builtin>.ord": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._unescape_token.match": ["six.unichr", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._generate_subtokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._list_to_index_dict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._count_and_gen_subtokens", "six.moves.xrange", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._gen_new_subtoken_list", "<builtin>.list", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._generate_subtokens", "<builtin>.abs", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._count_and_gen_subtokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._split_token_to_subtokens", "six.moves.xrange", "six.iteritems", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._escape_token", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._filter_and_bucket_subtokens": ["six.iteritems", "<builtin>.len", "<builtin>.set"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._gen_new_subtoken_list": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer._filter_and_bucket_subtokens", "<builtin>.len", "six.moves.xrange", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test": ["unittest.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer": ["tokenizer.Subtokenizer", "tempfile.NamedTemporaryFile"], "tokenizer.Subtokenizer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest.test_encode": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest.test_decode": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest.test_subtoken_ids_to_tokens": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_split_string_to_tokens": ["unittest.TestCase.assertEqual", "tokenizer._split_string_to_tokens"], "tokenizer._split_string_to_tokens": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_join_tokens_to_string": ["unittest.TestCase.assertEqual", "tokenizer._join_tokens_to_string"], "tokenizer._join_tokens_to_string": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_escape_token": ["<builtin>.set", "tokenizer._escape_token", "unittest.TestCase.assertEqual"], "tokenizer._escape_token": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_unescape_token": ["unittest.TestCase.assertEqual", "tokenizer._unescape_token"], "tokenizer._unescape_token": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_list_to_index_dict": ["tokenizer._list_to_index_dict", "unittest.TestCase.assertDictEqual"], "tokenizer._list_to_index_dict": [], "unittest.TestCase.assertDictEqual": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_split_token_to_subtokens": ["unittest.TestCase.assertEqual", "tokenizer._split_token_to_subtokens"], "tokenizer._split_token_to_subtokens": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_generate_alphabet_dict": ["unittest.TestCase.assertIn", "tokenizer._generate_alphabet_dict"], "tokenizer._generate_alphabet_dict": [], "unittest.TestCase.assertIn": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_count_and_gen_subtokens": ["unittest.TestCase.assertDictEqual", "<builtin>.set", "tokenizer._count_and_gen_subtokens", "unittest.TestCase.assertIsInstance"], "tokenizer._count_and_gen_subtokens": [], "unittest.TestCase.assertIsInstance": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_filter_and_bucket_subtokens": ["<builtin>.len", "tokenizer._filter_and_bucket_subtokens", "unittest.TestCase.assertEqual", "<builtin>.set", "collections.defaultdict"], "tokenizer._filter_and_bucket_subtokens": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_gen_new_subtoken_list": ["<builtin>.len", "unittest.TestCase.assertIn", "unittest.TestCase.assertEqual", "unittest.TestCase.assertNotIn", "<builtin>.set", "tokenizer._gen_new_subtoken_list", "collections.defaultdict"], "tokenizer._gen_new_subtoken_list": [], "unittest.TestCase.assertNotIn": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_generate_subtokens": ["unittest.TestCase.assertIn", "<builtin>.set", "tokenizer._generate_subtokens", "unittest.TestCase.assertEqual"], "tokenizer._generate_subtokens": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.model_params": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.model_utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.model_utils.get_position_encoding": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.cos", "tensorflow.exp", "tensorflow.sin", "<builtin>.float", "tensorflow.concat", "math.log", "tensorflow.range"], "tensorflow.sin": [], "tensorflow.cos": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.model_utils.get_decoder_self_attention_bias": ["tensorflow.reshape", "tensorflow.linalg.band_part", "tensorflow.ones", "tensorflow.compat.v1.name_scope"], "tensorflow.ones": [], "tensorflow.linalg.band_part": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.model_utils.get_padding": ["tensorflow.cast", "tensorflow.equal", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.model_utils.get_padding_bias": ["tensorflow.expand_dims", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.model_utils.get_padding", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.ffn_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.ffn_layer.FeedFowardNetwork.__init__": ["mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.layers.Dense", "<builtin>.super"], "tensorflow.compat.v1.layers.Dense": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.ffn_layer.FeedFowardNetwork.call": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.nn.dropout", "tensorflow.compat.v1.name_scope", "tensorflow.gather_nd", "tensorflow.shape", "tensorflow.scatter_nd", "tensorflow.compat.v1.tpu.bfloat16_scope", "tensorflow.compat.v1.where", "tensorflow.squeeze", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.reshape"], "tensorflow.compat.v1.tpu.bfloat16_scope": [], "tensorflow.nn.dropout": [], "tensorflow.scatter_nd": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.embedding_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.embedding_layer.EmbeddingSharedWeights.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.embedding_layer.EmbeddingSharedWeights.build": ["tensorflow.compat.v1.get_variable", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.random_normal_initializer", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.embedding_layer.EmbeddingSharedWeights.call": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.gather", "tensorflow.compat.v1.name_scope", "tensorflow.compat.v1.tpu.bfloat16_scope", "model.model_utils.get_padding"], "model.model_utils.get_padding": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.embedding_layer.EmbeddingSharedWeights.linear": ["tensorflow.cast", "tensorflow.compat.v1.name_scope", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.model_utils_test": ["tensorflow.compat.v1.disable_eager_execution", "tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.model_utils_test.ModelUtilsTest.test_get_padding": ["model_utils.get_padding", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "tensorflow.test.TestCase.test_session"], "model_utils.get_padding": [], "tensorflow.test.TestCase.test_session": [], "tensorflow.test.TestCase.assertAllEqual": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.model_utils_test.ModelUtilsTest.test_get_padding_bias": ["model_utils.get_padding_bias", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "tensorflow.test.TestCase.test_session", "tensorflow.reshape"], "model_utils.get_padding_bias": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.model_utils_test.ModelUtilsTest.test_get_decoder_self_attention_bias": ["tensorflow.test.TestCase.assertAllEqual", "model_utils.get_decoder_self_attention_bias", "tensorflow.test.TestCase.test_session"], "model_utils.get_decoder_self_attention_bias": [], "tensorflow.test.main": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch.search": ["tensorflow.while_loop", "tensorflow.reduce_any", "tensorflow.compat.v1.where", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch._create_initial_state"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch._create_initial_state": ["tensorflow.expand_dims", "tensorflow.shape", "tensorflow.ones", "tensorflow.TensorShape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._expand_to_beam_size", "tensorflow.tile", "tensorflow.constant", "<builtin>.float", "tensorflow.python.util.nest.map_structure", "tensorflow.zeros"], "tensorflow.reduce_any": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._expand_to_beam_size": ["tensorflow.expand_dims", "tensorflow.tile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch._create_initial_state.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._expand_to_beam_size"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch._continue_search": ["tensorflow.cast", "tensorflow.reduce_any", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._length_normalization", "tensorflow.less", "tensorflow.reduce_min", "tensorflow.reduce_all", "tensorflow.logical_not", "tensorflow.logical_and", "tensorflow.greater"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._length_normalization": ["tensorflow.cast", "tensorflow.pow"], "tensorflow.reduce_all": [], "tensorflow.logical_not": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch._search_step": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq": ["tensorflow.expand_dims", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._flatten_beam_dim", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._log_prob_from_logits", "tensorflow.nn.top_k", "tensorflow.concat", "tensorflow.reshape", "tensorflow.python.util.nest.map_structure", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._unflatten_beam_dim", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._gather_beams"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state": ["tensorflow.cast", "tensorflow.equal", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._gather_topk_beams"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._gather_topk_beams", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._length_normalization", "tensorflow.concat", "tensorflow.equal", "tensorflow.zeros"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._flatten_beam_dim": ["tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._shape_list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._unflatten_beam_dim": ["tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._shape_list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._unflatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._log_prob_from_logits": ["tensorflow.reduce_logsumexp"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._gather_beams": ["tensorflow.reshape", "tensorflow.python.util.nest.map_structure", "tensorflow.stack", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._gather_topk_beams": ["tensorflow.nn.top_k", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._gather_beams"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.sequence_beam_search": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch.search", "tensorflow.shape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search.SequenceBeamSearch.__init__"], "tensorflow.reduce_logsumexp": [], "tensorflow.pow": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._shape_list": ["<builtin>.range", "<builtin>.len", "tensorflow.shape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._get_shape_keep_last_dim": ["<builtin>.range", "<builtin>.len", "tensorflow.TensorShape", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._shape_list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search._gather_beams.<lambda1>": ["tensorflow.gather_nd"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search_test": ["tensorflow.compat.v1.disable_eager_execution", "tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_expand_to_beam_size": ["beam_search._expand_to_beam_size", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session"], "beam_search._expand_to_beam_size": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_shape_list": ["tensorflow.cast", "tensorflow.sqrt", "tensorflow.test.TestCase.assertIsInstance", "tensorflow.ones", "beam_search._shape_list", "tensorflow.constant"], "beam_search._shape_list": [], "tensorflow.test.TestCase.assertIsInstance": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_get_shape_keep_last_dim": ["tensorflow.cast", "tensorflow.sqrt", "tensorflow.ones", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "beam_search._get_shape_keep_last_dim"], "beam_search._get_shape_keep_last_dim": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_flatten_beam_dim": ["tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session", "beam_search._flatten_beam_dim"], "beam_search._flatten_beam_dim": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_unflatten_beam_dim": ["beam_search._unflatten_beam_dim", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session"], "beam_search._unflatten_beam_dim": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_gather_beams": ["beam_search._gather_beams", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.test.TestCase.test_session", "tensorflow.reshape", "tensorflow.range"], "beam_search._gather_beams": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_gather_topk_beams": ["tensorflow.test.TestCase.assertAllEqual", "tensorflow.test.TestCase.test_session", "tensorflow.reshape", "beam_search._gather_topk_beams", "tensorflow.range"], "beam_search._gather_topk_beams": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.Transformer.__init__": ["model.embedding_layer.EmbeddingSharedWeights", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.DecoderStack.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.EncoderStack.__init__"], "model.embedding_layer.EmbeddingSharedWeights": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.EncoderStack.__init__": ["<builtin>.range", "model.attention_layer.SelfAttention", "model.ffn_layer.FeedFowardNetwork", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.super", "mlperf_compliance.mlperf_log.transformer_print"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.DecoderStack.__init__": ["<builtin>.range", "model.attention_layer.SelfAttention", "model.ffn_layer.FeedFowardNetwork", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.super", "mlperf_compliance.mlperf_log.transformer_print", "model.attention_layer.Attention"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.Transformer.__call__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.Transformer.encode", "model.model_utils.get_padding_bias", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.Transformer.decode", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.variable_scope", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.Transformer.predict", "tensorflow.compat.v1.variance_scaling_initializer"], "model.model_utils.get_padding_bias": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.Transformer.encode": ["tensorflow.cast", "tensorflow.nn.dropout", "tensorflow.compat.v1.name_scope", "tensorflow.shape", "tensorflow.compat.v1.tpu.bfloat16_scope", "model.model_utils.get_padding", "model.model_utils.get_position_encoding", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.EncoderStack.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.Transformer.predict": ["<builtin>.range", "tensorflow.shape", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.Transformer._get_symbols_to_logits_fn", "tensorflow.zeros", "model.beam_search.sequence_beam_search"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.Transformer.decode": ["tensorflow.cast", "tensorflow.nn.dropout", "tensorflow.compat.v1.name_scope", "tensorflow.shape", "model.model_utils.get_decoder_self_attention_bias", "model.model_utils.get_position_encoding", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.DecoderStack.__init__", "tensorflow.pad"], "model.model_utils.get_position_encoding": [], "model.model_utils.get_decoder_self_attention_bias": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.Transformer._get_symbols_to_logits_fn": ["model.model_utils.get_position_encoding", "model.model_utils.get_decoder_self_attention_bias"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.Transformer._get_symbols_to_logits_fn.symbols_to_logits_fn": ["tensorflow.cast", "tensorflow.squeeze", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.DecoderStack.__init__"], "model.beam_search.sequence_beam_search": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.LayerNormalization.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.LayerNormalization.build": ["mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.zeros_initializer", "tensorflow.compat.v1.ones_initializer", "tensorflow.compat.v1.get_variable"], "tensorflow.compat.v1.ones_initializer": [], "tensorflow.compat.v1.zeros_initializer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.LayerNormalization.call": ["tensorflow.math.rsqrt", "tensorflow.square", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.compat.v1.tpu.bfloat16_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.PrePostProcessingWrapper.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.LayerNormalization.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.PrePostProcessingWrapper.__call__": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.LayerNormalization.__init__", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.nn.dropout"], "model.attention_layer.SelfAttention": [], "model.ffn_layer.FeedFowardNetwork": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.EncoderStack.call": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.enumerate", "tensorflow.compat.v1.variable_scope"], "model.attention_layer.Attention": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.DecoderStack.call": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.enumerate", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.attention_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.attention_layer.Attention.__init__": ["<builtin>.ValueError", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.layers.Dense", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.attention_layer.Attention.split_heads": ["tensorflow.reshape", "tensorflow.transpose", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.attention_layer.Attention.combine_heads": ["tensorflow.reshape", "tensorflow.transpose", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.attention_layer.Attention.call": ["tensorflow.cast", "tensorflow.nn.dropout", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.attention_layer.Attention.combine_heads", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.attention_layer.Attention.split_heads", "tensorflow.compat.v1.tpu.bfloat16_scope", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.nn.softmax", "tensorflow.concat", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.bfloat16.transformer.model.attention_layer.SelfAttention.call": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data": ["os.path.realpath", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.main", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.find_file": ["os.path.join", "<builtin>.len", "os.walk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.get_raw_files": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.download_and_extract"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.download_and_extract": ["<builtin>.OSError", "tarfile.open", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.find_file", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.download_from_url", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.download_report_hook": ["<builtin>.print", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.download_from_url": ["urllib.request.urlretrieve", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.find_file", "os.path.join", "<builtin>.print", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.txt_line_iterator": ["tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.compile_files": ["<builtin>.range", "<builtin>.len", "os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.write_file", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.write_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.txt_line_iterator"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.encode_and_save_files": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.txt_line_iterator", "tensorflow.io.TFRecordWriter", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.shard_filename", "<builtin>.enumerate", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.io.gfile.rename", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.all_exist", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.dict_to_example", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.shard_filename": ["os.path.join"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.all_exist": ["tensorflow.io.gfile.exists"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.dict_to_example": ["tensorflow.train.Feature", "tensorflow.train.Int64List", "six.iteritems", "tensorflow.train.Features", "tensorflow.train.Example"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.shuffle_records": ["<builtin>.len", "tensorflow.io.TFRecordWriter", "tensorflow.io.gfile.remove", "<builtin>.enumerate", "tensorflow.compat.v1.python_io.tf_record_iterator", "random.shuffle", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.make_dir": ["tensorflow.io.gfile.exists", "tensorflow.io.gfile.makedirs", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.main": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.encode_and_save_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.shuffle_records", "os.path.join", "tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.get_raw_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.make_dir", "mlperf_compliance.mlperf_log.transformer_print", "utils.tokenizer.Subtokenizer.init_from_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.process_data.compile_files", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate._get_sorted_inputs": ["<builtin>.sorted", "<builtin>.len", "tensorflow.io.gfile.GFile", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate._get_sorted_inputs.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate._encode_and_add_eos": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate._trim_and_decode": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate.translate_file": ["<builtin>.len", "<builtin>.ValueError", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate._get_sorted_inputs", "six.moves.xrange", "<builtin>.enumerate", "time.time", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate._trim_and_decode", "tensorflow.io.gfile.isdir", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate.translate_file.input_generator": ["<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate._encode_and_add_eos"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate.translate_file.input_fn": ["tensorflow.data.Dataset.from_generator", "tensorflow.TensorShape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate.translate_text": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate._trim_and_decode", "<builtin>.next", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate._encode_and_add_eos"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate.translate_text.input_fn": ["tensorflow.data.Dataset.from_tensors"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate.main": ["tensorflow.compat.v1.logging.warn", "tensorflow.estimator.Estimator", "tensorflow.io.gfile.exists", "os.path.join", "<builtin>.ValueError", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate.translate_text", "os.path.abspath", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.translate.translate_file", "tensorflow.estimator.RunConfig", "utils.tokenizer.Subtokenizer", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu.UnicodeRegex.__init__", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu.UnicodeRegex.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu.UnicodeRegex.property_chars", "re.compile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu.UnicodeRegex.property_chars": ["<builtin>.range", "six.unichr", "unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu.bleu_tokenize": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu.bleu_wrapper": ["<builtin>.len", "utils.metrics.compute_bleu", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu.bleu_tokenize", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu.main": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main": ["horovod.tensorflow.size", "os.path.join", "os.path.realpath", "<builtin>.print", "tensorflow.compat.v1.app.run", "horovod.tensorflow.init", "tensorflow.compat.v1.disable_eager_execution", "argparse.ArgumentParser", "os.path.normpath", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.model_fn": ["tensorflow.estimator.EstimatorSpec", "tensorflow.reduce_sum", "utils.metrics.get_eval_metrics", "model.transformer.Transformer", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.get_train_op", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.train.LoggingTensorHook", "utils.metrics.padded_cross_entropy_loss"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.get_train_op": ["horovod.tensorflow.size", "tensorflow.python.training.adam.AdamOptimizer", "tensorflow.linalg.global_norm", "tensorflow.compat.v1.trainable_variables", "<builtin>.zip", "mlperf_compliance.mlperf_log.resnet_print", "tensorflow.compat.v1.train.get_global_step", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.get_learning_rate", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.variable_scope", "mlperf_compliance.tf_mlperf_log.log_deferred", "horovod.tensorflow.DistributedOptimizer", "<builtin>.list", "tensorflow.compat.v1.summary.scalar"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.get_learning_rate": ["tensorflow.cast", "tensorflow.math.rsqrt", "tensorflow.maximum", "tensorflow.compat.v1.name_scope", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.minimum", "tensorflow.compat.v1.summary.scalar"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.translate_and_compute_bleu": ["os.remove", "translate.translate_file", "tempfile.NamedTemporaryFile", "compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.get_global_step": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.evaluate_and_log_bleu": ["tensorflow.compat.v1.Summary.Value", "os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.translate_and_compute_bleu", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.get_global_step", "utils.tokenizer.Subtokenizer", "tensorflow.compat.v1.Summary"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.train_schedule": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.evaluate_and_log_bleu", "tensorflow.compat.v1.summary.FileWriter", "<builtin>.ValueError", "<builtin>.print", "os.path.join", "six.moves.xrange", "tensorflow.compat.v1.train.ProfilerHook", "mlperf_compliance.mlperf_log.transformer_print", "horovod.tensorflow.BroadcastGlobalVariablesHook", "mlperf_utils.logs.hooks_helper.get_train_hooks"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.main": ["tensorflow.estimator.Estimator", "tensorflow.io.gfile.exists", "<builtin>.ValueError", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.logging.set_verbosity", "horovod.tensorflow.rank", "<builtin>.Exception", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.set_random_seed", "horovod.tensorflow.init", "<builtin>.str", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.transformer_main.train_schedule", "random.seed", "tensorflow.estimator.RunConfig"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu_test": ["unittest.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file": ["tempfile.NamedTemporaryFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_same": ["unittest.TestCase.assertEqual", "compute_bleu.bleu_wrapper", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_same_different_case": ["unittest.TestCase.assertLess", "unittest.TestCase.assertEqual", "compute_bleu.bleu_wrapper", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_different": ["unittest.TestCase.assertLess", "compute_bleu.bleu_wrapper", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_tokenize": ["unittest.TestCase.assertEqual", "compute_bleu.bleu_tokenize"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.main", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.find_file": ["os.path.join", "<builtin>.len", "os.walk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.get_raw_files": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.download_and_extract"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.download_and_extract": ["<builtin>.OSError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.find_file", "tarfile.open", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.download_from_url"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.download_report_hook": ["<builtin>.print", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.download_from_url": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.find_file", "urllib.request.urlretrieve", "os.path.join", "<builtin>.print", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.txt_line_iterator": ["tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.compile_files": ["<builtin>.range", "<builtin>.len", "os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.write_file", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.write_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.txt_line_iterator"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.encode_and_save_files": ["<builtin>.range", "tensorflow.io.TFRecordWriter", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.all_exist", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.dict_to_example", "tensorflow.io.gfile.rename", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.shard_filename", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.txt_line_iterator", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.shard_filename": ["os.path.join"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.all_exist": ["tensorflow.io.gfile.exists"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.dict_to_example": ["tensorflow.train.Feature", "tensorflow.train.Int64List", "six.iteritems", "tensorflow.train.Features", "tensorflow.train.Example"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.shuffle_records": ["<builtin>.len", "tensorflow.io.TFRecordWriter", "tensorflow.io.gfile.remove", "<builtin>.enumerate", "tensorflow.compat.v1.python_io.tf_record_iterator", "random.shuffle", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.make_dir": ["tensorflow.io.gfile.exists", "tensorflow.io.gfile.makedirs", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.main": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.encode_and_save_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.get_raw_files", "os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.compile_files", "tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.make_dir", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.data_download.shuffle_records", "utils.tokenizer.Subtokenizer.init_from_files", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._pad_tensors_to_same_length": ["tensorflow.pad", "tensorflow.shape", "tensorflow.maximum", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.padded_cross_entropy_loss": ["tensorflow.cast", "tensorflow.compat.v1.name_scope", "tensorflow.one_hot", "tensorflow.not_equal", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.math.log", "tensorflow.nn.softmax_cross_entropy_with_logits"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._convert_to_eval_metric": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._convert_to_eval_metric.problem_metric_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.padded_accuracy_top5", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.padded_accuracy", "tensorflow.compat.v1.metrics.mean", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.rouge_l_fscore", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.bleu_score", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.rouge_2_fscore", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.padded_neg_log_perplexity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.padded_sequence_accuracy"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.padded_accuracy_top5": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.padded_accuracy_topk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.padded_accuracy": ["tensorflow.cast", "tensorflow.not_equal", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.compat.v1.variable_scope", "tensorflow.equal", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.bleu_score": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.rouge_2_fscore": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.rouge_l_fscore": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.padded_sequence_accuracy": ["tensorflow.cast", "<builtin>.range", "<builtin>.len", "<builtin>.list", "tensorflow.reduce_sum", "tensorflow.not_equal", "tensorflow.minimum", "tensorflow.constant", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.compat.v1.variable_scope", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.padded_neg_log_perplexity": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.padded_cross_entropy_loss"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.get_eval_metrics": ["six.iteritems", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._convert_to_eval_metric.problem_metric_fn", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._convert_to_eval_metric"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.padded_accuracy_topk": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.nn.top_k", "tensorflow.shape", "tensorflow.not_equal", "tensorflow.zeros_like", "tensorflow.minimum", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.compat.v1.variable_scope", "tensorflow.equal"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._get_ngrams_with_counter": ["collections.Counter", "<builtin>.len", "<builtin>.tuple", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.compute_bleu": ["<builtin>.dict", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._get_ngrams_with_counter", "numpy.float32", "<builtin>.zip", "<builtin>.min", "<builtin>.sum", "six.moves.xrange", "math.exp", "<builtin>.float", "math.log", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._get_ngrams": ["<builtin>.range", "<builtin>.set", "<builtin>.len", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.rouge_n": ["<builtin>.len", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._get_ngrams", "numpy.mean", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics.rouge_l_sentence_level": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._len_lcs", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._f_lcs", "numpy.mean", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._len_lcs": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._lcs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._f_lcs": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.metrics._lcs": ["<builtin>.dict", "<builtin>.len", "<builtin>.range", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._load_records": ["tensorflow.data.TFRecordDataset"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._parse_example": ["tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.sparse.to_dense"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._filter_max_length": ["tensorflow.logical_and", "tensorflow.size"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._get_example_length": ["tensorflow.shape", "tensorflow.maximum"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._create_min_max_boundaries": ["<builtin>.int", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._batch_examples": ["tensorflow.data.experimental.group_by_window", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._create_min_max_boundaries", "tensorflow.constant"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._batch_examples.example_to_bucket_id": ["tensorflow.less", "tensorflow.compat.v1.where", "tensorflow.reduce_min", "tensorflow.logical_and", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._get_example_length", "tensorflow.less_equal"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._batch_examples.window_size_fn": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._batch_examples.batching_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._batch_examples.window_size_fn"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._read_and_batch_from_files": ["horovod.tensorflow.size", "tensorflow.data.experimental.parallel_interleave", "tensorflow.data.Dataset.list_files", "horovod.tensorflow.rank", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._batch_examples"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._read_and_batch_from_files.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._filter_max_length"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset.train_input_fn": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._read_and_batch_from_files", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset.eval_input_fn": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.dataset._read_and_batch_from_files", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer": ["six.unichr", "unicodedata.category", "six.moves.xrange", "<builtin>.set", "re.compile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer.Subtokenizer.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._list_to_index_dict", "<builtin>.len", "<builtin>.max", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._load_vocab_file", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._generate_alphabet_dict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._load_vocab_file": ["tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._native_to_unicode"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._generate_alphabet_dict": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._list_to_index_dict": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer.Subtokenizer.init_from_files": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._count_tokens", "tensorflow.io.gfile.exists", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer.Subtokenizer.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._save_vocab_file", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._generate_alphabet_dict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._count_tokens": ["<builtin>.len", "collections.defaultdict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._native_to_unicode", "<builtin>.int", "tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._split_string_to_tokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._generate_subtokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._save_vocab_file": ["tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._unicode_to_native"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer.Subtokenizer.encode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer.Subtokenizer._token_to_subtoken_ids", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._native_to_unicode", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._split_string_to_tokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._native_to_unicode": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._split_string_to_tokens": ["<builtin>.len", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer.Subtokenizer._token_to_subtoken_ids": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._escape_token", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._split_token_to_subtokens", "<builtin>.hash"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._escape_token": ["<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._split_token_to_subtokens": ["<builtin>.len", "<builtin>.min", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer.Subtokenizer.decode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._unicode_to_native", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer.Subtokenizer._subtoken_ids_to_tokens", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._join_tokens_to_string"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer.Subtokenizer._subtoken_ids_to_tokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._unescape_token"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._join_tokens_to_string": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._unicode_to_native": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._unescape_token": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._unescape_token.match": ["six.unichr", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._generate_subtokens": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._list_to_index_dict", "<builtin>.len", "six.moves.xrange", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._count_and_gen_subtokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._gen_new_subtoken_list", "<builtin>.list", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._generate_subtokens", "<builtin>.abs", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._count_and_gen_subtokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._split_token_to_subtokens", "six.moves.xrange", "six.iteritems", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._escape_token", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._filter_and_bucket_subtokens": ["six.iteritems", "<builtin>.len", "<builtin>.set"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._gen_new_subtoken_list": ["six.moves.xrange", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer._filter_and_bucket_subtokens", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test": ["unittest.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer": ["tokenizer.Subtokenizer", "tempfile.NamedTemporaryFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.SubtokenizerTest.test_encode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer", "unittest.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.SubtokenizerTest.test_decode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer", "unittest.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.SubtokenizerTest.test_subtoken_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer", "unittest.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_split_string_to_tokens": ["unittest.TestCase.assertEqual", "tokenizer._split_string_to_tokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_join_tokens_to_string": ["unittest.TestCase.assertEqual", "tokenizer._join_tokens_to_string"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_escape_token": ["<builtin>.set", "tokenizer._escape_token", "unittest.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_unescape_token": ["unittest.TestCase.assertEqual", "tokenizer._unescape_token"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_list_to_index_dict": ["tokenizer._list_to_index_dict", "unittest.TestCase.assertDictEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_split_token_to_subtokens": ["unittest.TestCase.assertEqual", "tokenizer._split_token_to_subtokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_generate_alphabet_dict": ["unittest.TestCase.assertIn", "tokenizer._generate_alphabet_dict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_count_and_gen_subtokens": ["unittest.TestCase.assertDictEqual", "<builtin>.set", "tokenizer._count_and_gen_subtokens", "unittest.TestCase.assertIsInstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_filter_and_bucket_subtokens": ["<builtin>.len", "tokenizer._filter_and_bucket_subtokens", "unittest.TestCase.assertEqual", "<builtin>.set", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_gen_new_subtoken_list": ["<builtin>.len", "unittest.TestCase.assertIn", "unittest.TestCase.assertEqual", "unittest.TestCase.assertNotIn", "<builtin>.set", "tokenizer._gen_new_subtoken_list", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_generate_subtokens": ["unittest.TestCase.assertIn", "<builtin>.set", "tokenizer._generate_subtokens", "unittest.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.model_params": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.model_utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.model_utils.get_position_encoding": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.cos", "tensorflow.exp", "tensorflow.sin", "<builtin>.float", "tensorflow.concat", "math.log", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.model_utils.get_decoder_self_attention_bias": ["tensorflow.reshape", "tensorflow.linalg.band_part", "tensorflow.ones", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.model_utils.get_padding": ["tensorflow.cast", "tensorflow.equal", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.model_utils.get_padding_bias": ["tensorflow.expand_dims", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.model_utils.get_padding", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.ffn_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.ffn_layer.FeedFowardNetwork.__init__": ["mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.layers.Dense", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.ffn_layer.FeedFowardNetwork.call": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.nn.dropout", "tensorflow.compat.v1.name_scope", "tensorflow.gather_nd", "tensorflow.shape", "tensorflow.scatter_nd", "tensorflow.squeeze", "tensorflow.compat.v1.where", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.embedding_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.embedding_layer.EmbeddingSharedWeights.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.embedding_layer.EmbeddingSharedWeights.build": ["tensorflow.compat.v1.get_variable", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.random_normal_initializer", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.embedding_layer.EmbeddingSharedWeights.call": ["model.model_utils.get_padding", "tensorflow.expand_dims", "tensorflow.gather", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.embedding_layer.EmbeddingSharedWeights.linear": ["tensorflow.reshape", "tensorflow.matmul", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.model_utils_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.model_utils_test.ModelUtilsTest.test_get_padding": ["model_utils.get_padding", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.model_utils_test.ModelUtilsTest.test_get_padding_bias": ["model_utils.get_padding_bias", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "tensorflow.test.TestCase.test_session", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.model_utils_test.ModelUtilsTest.test_get_decoder_self_attention_bias": ["tensorflow.test.TestCase.assertAllEqual", "model_utils.get_decoder_self_attention_bias", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch.search": ["tensorflow.while_loop", "tensorflow.reduce_any", "tensorflow.compat.v1.where", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch._create_initial_state"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch._create_initial_state": ["tensorflow.expand_dims", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._expand_to_beam_size", "tensorflow.shape", "tensorflow.ones", "tensorflow.TensorShape", "tensorflow.tile", "tensorflow.constant", "<builtin>.float", "tensorflow.python.util.nest.map_structure", "tensorflow.zeros"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._expand_to_beam_size": ["tensorflow.expand_dims", "tensorflow.tile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch._create_initial_state.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._expand_to_beam_size"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch._continue_search": ["tensorflow.cast", "tensorflow.reduce_any", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._length_normalization", "tensorflow.less", "tensorflow.reduce_min", "tensorflow.reduce_all", "tensorflow.logical_not", "tensorflow.logical_and", "tensorflow.greater"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._length_normalization": ["tensorflow.cast", "tensorflow.pow"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch._search_step": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq": ["tensorflow.expand_dims", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._gather_beams", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._flatten_beam_dim", "tensorflow.nn.top_k", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._unflatten_beam_dim", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._log_prob_from_logits", "tensorflow.reshape", "tensorflow.python.util.nest.map_structure"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state": ["tensorflow.cast", "tensorflow.equal", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._gather_topk_beams"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._length_normalization", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._gather_topk_beams", "tensorflow.concat", "tensorflow.equal", "tensorflow.zeros"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._flatten_beam_dim": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._shape_list", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._unflatten_beam_dim": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._shape_list", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._unflatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._log_prob_from_logits": ["tensorflow.reduce_logsumexp"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._gather_beams": ["tensorflow.reshape", "tensorflow.python.util.nest.map_structure", "tensorflow.stack", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._gather_topk_beams": ["tensorflow.nn.top_k", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._gather_beams"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.sequence_beam_search": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch.__init__", "tensorflow.shape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search.SequenceBeamSearch.search"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._shape_list": ["<builtin>.range", "<builtin>.len", "tensorflow.shape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._get_shape_keep_last_dim": ["<builtin>.range", "<builtin>.len", "tensorflow.TensorShape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._shape_list", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search._gather_beams.<lambda1>": ["tensorflow.gather_nd"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_expand_to_beam_size": ["beam_search._expand_to_beam_size", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_shape_list": ["tensorflow.cast", "tensorflow.sqrt", "tensorflow.test.TestCase.assertIsInstance", "tensorflow.ones", "beam_search._shape_list", "tensorflow.constant"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_get_shape_keep_last_dim": ["tensorflow.cast", "tensorflow.sqrt", "tensorflow.ones", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "beam_search._get_shape_keep_last_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_flatten_beam_dim": ["tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session", "beam_search._flatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_unflatten_beam_dim": ["beam_search._unflatten_beam_dim", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_gather_beams": ["beam_search._gather_beams", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.test.TestCase.test_session", "tensorflow.reshape", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_gather_topk_beams": ["tensorflow.test.TestCase.assertAllEqual", "tensorflow.test.TestCase.test_session", "tensorflow.reshape", "beam_search._gather_topk_beams", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.Transformer.__init__": ["model.embedding_layer.EmbeddingSharedWeights", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.EncoderStack.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.DecoderStack.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.EncoderStack.__init__": ["<builtin>.range", "model.attention_layer.SelfAttention", "model.ffn_layer.FeedFowardNetwork", "<builtin>.super", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.LayerNormalization.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.DecoderStack.__init__": ["<builtin>.range", "model.attention_layer.SelfAttention", "model.ffn_layer.FeedFowardNetwork", "<builtin>.super", "mlperf_compliance.mlperf_log.transformer_print", "model.attention_layer.Attention", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.LayerNormalization.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.Transformer.__call__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.Transformer.decode", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.Transformer.predict", "model.model_utils.get_padding_bias", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.Transformer.encode", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.variance_scaling_initializer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.Transformer.encode": ["tensorflow.nn.dropout", "tensorflow.compat.v1.name_scope", "tensorflow.shape", "model.model_utils.get_padding", "mlperf_compliance.mlperf_log.transformer_print", "model.model_utils.get_position_encoding", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.EncoderStack.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.Transformer.predict": ["<builtin>.range", "tensorflow.shape", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.Transformer._get_symbols_to_logits_fn", "tensorflow.zeros", "model.beam_search.sequence_beam_search"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.Transformer.decode": ["tensorflow.nn.dropout", "tensorflow.compat.v1.name_scope", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.DecoderStack.__init__", "tensorflow.shape", "model.model_utils.get_decoder_self_attention_bias", "model.model_utils.get_position_encoding", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.pad"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.Transformer._get_symbols_to_logits_fn": ["model.model_utils.get_position_encoding", "model.model_utils.get_decoder_self_attention_bias"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.Transformer._get_symbols_to_logits_fn.symbols_to_logits_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.DecoderStack.__init__", "tensorflow.squeeze"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.LayerNormalization.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.LayerNormalization.build": ["mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.zeros_initializer", "tensorflow.compat.v1.ones_initializer", "tensorflow.compat.v1.get_variable"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.LayerNormalization.call": ["tensorflow.math.rsqrt", "tensorflow.square", "tensorflow.reduce_mean"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.PrePostProcessingWrapper.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.LayerNormalization.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.PrePostProcessingWrapper.__call__": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.LayerNormalization.__init__", "tensorflow.nn.dropout", "mlperf_compliance.mlperf_log.transformer_print"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.EncoderStack.call": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.enumerate", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.DecoderStack.call": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.enumerate", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.attention_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.attention_layer.Attention.__init__": ["<builtin>.ValueError", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.layers.Dense", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.attention_layer.Attention.split_heads": ["tensorflow.reshape", "tensorflow.transpose", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.attention_layer.Attention.combine_heads": ["tensorflow.reshape", "tensorflow.transpose", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.attention_layer.Attention.call": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.attention_layer.Attention.combine_heads", "tensorflow.cast", "tensorflow.nn.dropout", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.attention_layer.Attention.split_heads", "tensorflow.concat", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.nn.softmax", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.training.fp32.transformer.model.attention_layer.SelfAttention.call": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate": ["os.path.abspath", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.UpdateGlobalStepHook.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.UpdateGlobalStepHook.begin": ["<builtin>.RuntimeError", "tensorflow.compat.v1.get_default_graph", "tensorflow.python.training.training_util.get_global_step", "tensorflow.python.ops.state_ops.assign_add"], "tensorflow.python.training.training_util.get_global_step": [], "tensorflow.python.ops.state_ops.assign_add": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.UpdateGlobalStepHook.after_create_session": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.UpdateGlobalStepHook.before_run": ["tensorflow.python.training.session_run_hook.SessionRunArgs"], "tensorflow.python.training.session_run_hook.SessionRunArgs": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.UpdateGlobalStepHook.after_run": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate._get_sorted_inputs": ["<builtin>.sorted", "<builtin>.len", "tensorflow.io.gfile.GFile", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate._get_sorted_inputs.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate._encode_and_add_eos": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate._trim_and_decode": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.translate_file": ["<builtin>.len", "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook", "<builtin>.ValueError", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.UpdateGlobalStepHook.__init__", "six.moves.xrange", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate._trim_and_decode", "tensorflow.python.training.basic_session_run_hooks.ProfilerHook", "time.time", "tensorflow.io.gfile.isdir", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate._get_sorted_inputs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.translate_file.input_generator": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate._encode_and_add_eos", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.translate_file.input_fn": ["tensorflow.data.Dataset.from_generator", "tensorflow.TensorShape"], "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook": [], "tensorflow.python.training.basic_session_run_hooks.ProfilerHook": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.translate_text": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate._encode_and_add_eos", "<builtin>.next", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate._trim_and_decode"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.translate_text.input_fn": ["tensorflow.data.Dataset.from_tensors"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.main": ["tensorflow.compat.v1.logging.warn", "tensorflow.estimator.Estimator", "tensorflow.io.gfile.exists", "os.path.join", "<builtin>.ValueError", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.logging.set_verbosity", "os.path.abspath", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.translate_text", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.translate.translate_file", "tensorflow.estimator.RunConfig", "utils.tokenizer.Subtokenizer", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu.UnicodeRegex.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu.UnicodeRegex.__init__": ["re.compile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu.UnicodeRegex.property_chars"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu.UnicodeRegex.property_chars": ["<builtin>.range", "six.unichr", "unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu.bleu_tokenize": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu.bleu_wrapper": ["<builtin>.len", "utils.metrics.compute_bleu", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu.bleu_tokenize", "<builtin>.ValueError", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu.main": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu.bleu_wrapper", "<builtin>.print"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.export_transformer": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.export_transformer.main", "tensorflow.compat.v1.disable_v2_behavior"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.export_transformer.main": ["tensorflow.compat.v1.placeholder", "<builtin>.ValueError", "model.transformer.Transformer", "<builtin>.print", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.graph_util.convert_variables_to_constants", "tensorflow.compat.v1.gfile.GFile", "tensorflow.compat.v1.train.Saver", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.Session", "tensorflow.train.latest_checkpoint"], "tensorflow.compat.v1.graph_util.convert_variables_to_constants": [], "tensorflow.compat.v1.gfile.GFile": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main": ["os.path.join", "os.path.realpath", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.disable_eager_execution", "argparse.ArgumentParser", "os.path.normpath", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.model_fn": ["tensorflow.estimator.EstimatorSpec", "tensorflow.reduce_sum", "utils.metrics.get_eval_metrics", "tensorflow.graph_util.import_graph_def", "<builtin>.print", "model.transformer.Transformer", "tensorflow.compat.v1.get_default_graph", "tensorflow.compat.v1.GraphDef", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.get_train_op", "utils.metrics.padded_cross_entropy_loss", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.train.LoggingTensorHook", "tensorflow.io.gfile.GFile"], "tensorflow.graph_util.import_graph_def": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.get_train_op": ["tensorflow.python.training.adam.AdamOptimizer", "tensorflow.linalg.global_norm", "tensorflow.compat.v1.trainable_variables", "<builtin>.zip", "mlperf_compliance.mlperf_log.resnet_print", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.train.get_global_step", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.get_learning_rate", "mlperf_compliance.tf_mlperf_log.log_deferred", "<builtin>.list", "tensorflow.compat.v1.summary.scalar"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.get_learning_rate": ["tensorflow.cast", "tensorflow.math.rsqrt", "tensorflow.maximum", "tensorflow.compat.v1.name_scope", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.minimum", "tensorflow.compat.v1.summary.scalar"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.translate_and_compute_bleu": ["os.remove", "translate.translate_file", "tempfile.NamedTemporaryFile", "compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.get_global_step": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.evaluate_and_log_bleu": ["tensorflow.compat.v1.Summary.Value", "os.path.join", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.translate_and_compute_bleu", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.get_global_step", "utils.tokenizer.Subtokenizer", "tensorflow.compat.v1.Summary"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.train_schedule": ["tensorflow.compat.v1.summary.FileWriter", "<builtin>.ValueError", "<builtin>.print", "os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.evaluate_and_log_bleu", "six.moves.xrange", "mlperf_compliance.mlperf_log.transformer_print", "mlperf_utils.logs.hooks_helper.get_train_hooks"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.main": ["tensorflow.estimator.Estimator", "tensorflow.io.gfile.exists", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.transformer_main.train_schedule", "<builtin>.ValueError", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.logging.set_verbosity", "<builtin>.Exception", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.set_random_seed", "random.seed", "tensorflow.estimator.RunConfig"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu_test": ["unittest.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file": ["tempfile.NamedTemporaryFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_same": ["unittest.TestCase.assertEqual", "compute_bleu.bleu_wrapper", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_same_different_case": ["unittest.TestCase.assertLess", "unittest.TestCase.assertEqual", "compute_bleu.bleu_wrapper", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_different": ["unittest.TestCase.assertLess", "compute_bleu.bleu_wrapper", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_tokenize": ["unittest.TestCase.assertEqual", "compute_bleu.bleu_tokenize"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.find_file": ["os.path.join", "<builtin>.len", "os.walk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.get_raw_files": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.download_and_extract"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.download_and_extract": ["<builtin>.OSError", "tarfile.open", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.download_from_url", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.find_file", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.download_report_hook": ["<builtin>.print", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.download_from_url": ["urllib.request.urlretrieve", "os.path.join", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.find_file", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.txt_line_iterator": ["tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.compile_files": ["<builtin>.range", "<builtin>.len", "os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.write_file", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.write_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.txt_line_iterator"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.encode_and_save_files": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.shard_filename", "tensorflow.io.TFRecordWriter", "<builtin>.zip", "<builtin>.enumerate", "tensorflow.io.gfile.rename", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.all_exist", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.dict_to_example", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.txt_line_iterator", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.shard_filename": ["os.path.join"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.all_exist": ["tensorflow.io.gfile.exists"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.dict_to_example": ["tensorflow.train.Feature", "tensorflow.train.Int64List", "six.iteritems", "tensorflow.train.Features", "tensorflow.train.Example"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.shuffle_records": ["<builtin>.len", "tensorflow.io.TFRecordWriter", "tensorflow.io.gfile.remove", "<builtin>.enumerate", "tensorflow.compat.v1.python_io.tf_record_iterator", "random.shuffle", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.make_dir": ["tensorflow.io.gfile.exists", "tensorflow.io.gfile.makedirs", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.main": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.compile_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.encode_and_save_files", "tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.shuffle_records", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.get_raw_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.data_download.make_dir", "utils.tokenizer.Subtokenizer.init_from_files", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._pad_tensors_to_same_length": ["tensorflow.pad", "tensorflow.shape", "tensorflow.maximum", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.padded_cross_entropy_loss": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.compat.v1.name_scope", "tensorflow.one_hot", "tensorflow.not_equal", "tensorflow.math.log", "tensorflow.nn.softmax_cross_entropy_with_logits"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._convert_to_eval_metric": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._convert_to_eval_metric.problem_metric_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.padded_accuracy", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.padded_neg_log_perplexity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.rouge_2_fscore", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.padded_sequence_accuracy", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.rouge_l_fscore", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.bleu_score", "tensorflow.compat.v1.metrics.mean", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.padded_accuracy_top5"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.padded_accuracy": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.not_equal", "tensorflow.compat.v1.variable_scope", "tensorflow.equal", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.bleu_score": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.padded_neg_log_perplexity": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.padded_cross_entropy_loss"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.rouge_2_fscore": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.padded_sequence_accuracy": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._pad_tensors_to_same_length", "<builtin>.len", "<builtin>.range", "<builtin>.list", "tensorflow.reduce_sum", "tensorflow.not_equal", "tensorflow.minimum", "tensorflow.constant", "tensorflow.compat.v1.variable_scope", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.rouge_l_fscore": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.padded_accuracy_top5": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.padded_accuracy_topk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.get_eval_metrics": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._convert_to_eval_metric", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._convert_to_eval_metric.problem_metric_fn", "six.iteritems"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.padded_accuracy_topk": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.nn.top_k", "tensorflow.shape", "tensorflow.not_equal", "tensorflow.zeros_like", "tensorflow.minimum", "tensorflow.compat.v1.variable_scope", "tensorflow.equal"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._get_ngrams_with_counter": ["collections.Counter", "<builtin>.len", "<builtin>.tuple", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.compute_bleu": ["<builtin>.dict", "<builtin>.len", "numpy.float32", "<builtin>.zip", "<builtin>.min", "<builtin>.sum", "six.moves.xrange", "math.exp", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._get_ngrams_with_counter", "<builtin>.float", "math.log", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._get_ngrams": ["<builtin>.range", "<builtin>.set", "<builtin>.len", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.rouge_n": ["<builtin>.len", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._get_ngrams", "numpy.mean", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics.rouge_l_sentence_level": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._f_lcs", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._len_lcs", "numpy.mean", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._len_lcs": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._lcs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._f_lcs": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.metrics._lcs": ["<builtin>.dict", "<builtin>.len", "<builtin>.range", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._load_records": ["tensorflow.data.TFRecordDataset"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._parse_example": ["tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.sparse.to_dense"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._filter_max_length": ["tensorflow.logical_and", "tensorflow.size"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._get_example_length": ["tensorflow.shape", "tensorflow.maximum"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._create_min_max_boundaries": ["<builtin>.int", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._batch_examples": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._create_min_max_boundaries", "tensorflow.constant", "tensorflow.data.experimental.group_by_window"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._batch_examples.example_to_bucket_id": ["tensorflow.less", "tensorflow.compat.v1.where", "tensorflow.reduce_min", "tensorflow.logical_and", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._get_example_length", "tensorflow.less_equal"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._batch_examples.window_size_fn": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._batch_examples.batching_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._batch_examples.window_size_fn"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._read_and_batch_from_files": ["mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._batch_examples", "tensorflow.data.experimental.parallel_interleave", "tensorflow.data.Dataset.list_files"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._read_and_batch_from_files.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._filter_max_length"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset.train_input_fn": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._read_and_batch_from_files", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset.eval_input_fn": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.dataset._read_and_batch_from_files", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer": ["six.unichr", "unicodedata.category", "six.moves.xrange", "<builtin>.set", "re.compile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer.Subtokenizer.__init__": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._load_vocab_file", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._list_to_index_dict", "<builtin>.max", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._generate_alphabet_dict", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._load_vocab_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._native_to_unicode", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._generate_alphabet_dict": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._list_to_index_dict": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer.Subtokenizer.init_from_files": ["<builtin>.len", "tensorflow.io.gfile.exists", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._count_tokens", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer.Subtokenizer.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._save_vocab_file", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._generate_alphabet_dict", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._count_tokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._split_string_to_tokens", "collections.defaultdict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._native_to_unicode", "<builtin>.int", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._generate_subtokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._save_vocab_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._unicode_to_native", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer.Subtokenizer.encode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._native_to_unicode", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._split_string_to_tokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer.Subtokenizer._token_to_subtoken_ids"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._native_to_unicode": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._split_string_to_tokens": ["<builtin>.len", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer.Subtokenizer._token_to_subtoken_ids": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._split_token_to_subtokens", "<builtin>.hash", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._escape_token"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._escape_token": ["<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._split_token_to_subtokens": ["<builtin>.len", "<builtin>.min", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer.Subtokenizer.decode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._join_tokens_to_string", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._unicode_to_native", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer.Subtokenizer._subtoken_ids_to_tokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer.Subtokenizer._subtoken_ids_to_tokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._unescape_token"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._join_tokens_to_string": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._unicode_to_native": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._unescape_token": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._unescape_token.match": ["six.unichr", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._generate_subtokens": ["<builtin>.len", "six.moves.xrange", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._count_and_gen_subtokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._list_to_index_dict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._gen_new_subtoken_list", "<builtin>.list", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._generate_subtokens", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect", "<builtin>.abs", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._count_and_gen_subtokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._escape_token", "six.moves.xrange", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._split_token_to_subtokens", "six.iteritems", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._filter_and_bucket_subtokens": ["six.iteritems", "<builtin>.len", "<builtin>.set"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._gen_new_subtoken_list": ["<builtin>.len", "six.moves.xrange", "<builtin>.sorted", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer._filter_and_bucket_subtokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test": ["unittest.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer": ["tokenizer.Subtokenizer", "tempfile.NamedTemporaryFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest.test_encode": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest.test_decode": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest.test_subtoken_ids_to_tokens": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_split_string_to_tokens": ["unittest.TestCase.assertEqual", "tokenizer._split_string_to_tokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_join_tokens_to_string": ["unittest.TestCase.assertEqual", "tokenizer._join_tokens_to_string"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_escape_token": ["<builtin>.set", "tokenizer._escape_token", "unittest.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_unescape_token": ["unittest.TestCase.assertEqual", "tokenizer._unescape_token"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_list_to_index_dict": ["tokenizer._list_to_index_dict", "unittest.TestCase.assertDictEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_split_token_to_subtokens": ["unittest.TestCase.assertEqual", "tokenizer._split_token_to_subtokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_generate_alphabet_dict": ["unittest.TestCase.assertIn", "tokenizer._generate_alphabet_dict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_count_and_gen_subtokens": ["unittest.TestCase.assertDictEqual", "<builtin>.set", "tokenizer._count_and_gen_subtokens", "unittest.TestCase.assertIsInstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_filter_and_bucket_subtokens": ["<builtin>.len", "tokenizer._filter_and_bucket_subtokens", "unittest.TestCase.assertEqual", "<builtin>.set", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_gen_new_subtoken_list": ["<builtin>.len", "unittest.TestCase.assertIn", "unittest.TestCase.assertEqual", "unittest.TestCase.assertNotIn", "<builtin>.set", "tokenizer._gen_new_subtoken_list", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.utils.tokenizer_test.StringHelperTest.test_generate_subtokens": ["unittest.TestCase.assertIn", "<builtin>.set", "tokenizer._generate_subtokens", "unittest.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.model_params": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.model_utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.model_utils.get_position_encoding": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.cos", "tensorflow.exp", "tensorflow.sin", "<builtin>.float", "tensorflow.concat", "math.log", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.model_utils.get_decoder_self_attention_bias": ["tensorflow.reshape", "tensorflow.linalg.band_part", "tensorflow.ones", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.model_utils.get_padding": ["tensorflow.cast", "tensorflow.equal", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.model_utils.get_padding_bias": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.model_utils.get_padding", "tensorflow.expand_dims", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.ffn_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.ffn_layer.FeedFowardNetwork.__init__": ["mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.layers.Dense", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.ffn_layer.FeedFowardNetwork.call": ["tensorflow.nn.dropout", "tensorflow.shape", "tensorflow.compat.v1.tpu.bfloat16_scope", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.embedding_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.embedding_layer.EmbeddingSharedWeights.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.embedding_layer.EmbeddingSharedWeights.build": ["tensorflow.cast", "tensorflow.compat.v1.get_variable", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.random_normal_initializer", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.embedding_layer.EmbeddingSharedWeights.call": ["tensorflow.expand_dims", "tensorflow.gather", "tensorflow.compat.v1.name_scope", "tensorflow.compat.v1.tpu.bfloat16_scope", "model.model_utils.get_padding"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.embedding_layer.EmbeddingSharedWeights.linear": ["tensorflow.cast", "tensorflow.compat.v1.name_scope", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.model_utils_test": ["tensorflow.compat.v1.disable_eager_execution", "tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.model_utils_test.ModelUtilsTest.test_get_padding": ["model_utils.get_padding", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.model_utils_test.ModelUtilsTest.test_get_padding_bias": ["model_utils.get_padding_bias", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "tensorflow.test.TestCase.test_session", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.model_utils_test.ModelUtilsTest.test_get_decoder_self_attention_bias": ["tensorflow.test.TestCase.assertAllEqual", "model_utils.get_decoder_self_attention_bias", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch.search": ["tensorflow.while_loop", "tensorflow.reduce_any", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._create_initial_state", "tensorflow.compat.v1.where"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._create_initial_state": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._expand_to_beam_size", "tensorflow.expand_dims", "tensorflow.shape", "tensorflow.ones", "tensorflow.TensorShape", "tensorflow.tile", "tensorflow.constant", "<builtin>.float", "tensorflow.python.util.nest.map_structure", "tensorflow.zeros"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._expand_to_beam_size": ["tensorflow.expand_dims", "tensorflow.tile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._create_initial_state.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._expand_to_beam_size"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._continue_search": ["tensorflow.cast", "tensorflow.reduce_any", "tensorflow.less", "tensorflow.reduce_min", "tensorflow.reduce_all", "tensorflow.logical_not", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._length_normalization", "tensorflow.logical_and", "tensorflow.greater"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._length_normalization": ["tensorflow.cast", "tensorflow.pow"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._search_step": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq": ["tensorflow.expand_dims", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._unflatten_beam_dim", "tensorflow.nn.top_k", "tensorflow.reshape", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._flatten_beam_dim", "tensorflow.python.util.nest.map_structure", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._log_prob_from_logits", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.nn.top_k", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._flatten_beam_dim", "tensorflow.equal", "tensorflow.python.util.nest.map_structure", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.nn.top_k", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._flatten_beam_dim", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._length_normalization", "tensorflow.equal", "tensorflow.python.util.nest.map_structure", "tensorflow.zeros", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._flatten_beam_dim": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._shape_list", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._unflatten_beam_dim": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._shape_list", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._unflatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._log_prob_from_logits": ["tensorflow.reduce_logsumexp"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq._test": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._flatten_beam_dim", "tensorflow.gather", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._unflatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq.<lambda2>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq._test"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state._test": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._flatten_beam_dim", "tensorflow.gather", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._unflatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state._test"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state._test": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._flatten_beam_dim", "tensorflow.gather", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._unflatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state._test"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.sequence_beam_search": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch.__init__", "tensorflow.shape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search.SequenceBeamSearch.search"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._shape_list": ["<builtin>.range", "<builtin>.len", "tensorflow.shape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._get_shape_keep_last_dim": ["<builtin>.range", "<builtin>.len", "tensorflow.TensorShape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._shape_list", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._gather_beams": ["tensorflow.reshape", "tensorflow.python.util.nest.map_structure", "tensorflow.stack", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._gather_beams.<lambda1>": ["tensorflow.gather_nd"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._gather_topk_beams": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search._gather_beams", "tensorflow.nn.top_k"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search_test": ["tensorflow.compat.v1.disable_eager_execution", "tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_expand_to_beam_size": ["beam_search._expand_to_beam_size", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_shape_list": ["tensorflow.cast", "tensorflow.sqrt", "tensorflow.test.TestCase.assertIsInstance", "tensorflow.ones", "beam_search._shape_list", "tensorflow.constant"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_get_shape_keep_last_dim": ["tensorflow.cast", "tensorflow.sqrt", "tensorflow.ones", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "beam_search._get_shape_keep_last_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_flatten_beam_dim": ["tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session", "beam_search._flatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_unflatten_beam_dim": ["beam_search._unflatten_beam_dim", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_gather_beams": ["beam_search._gather_beams", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.test.TestCase.test_session", "tensorflow.reshape", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.beam_search_test.BeamSearchHelperTests.test_gather_topk_beams": ["tensorflow.test.TestCase.assertAllEqual", "tensorflow.test.TestCase.test_session", "tensorflow.reshape", "beam_search._gather_topk_beams", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.Transformer.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.EncoderStack.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.DecoderStack.__init__", "model.embedding_layer.EmbeddingSharedWeights"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.EncoderStack.__init__": ["<builtin>.range", "model.attention_layer.SelfAttention", "model.ffn_layer.FeedFowardNetwork", "<builtin>.super", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.LayerNormalization.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.DecoderStack.__init__": ["<builtin>.range", "model.attention_layer.SelfAttention", "model.ffn_layer.FeedFowardNetwork", "<builtin>.super", "mlperf_compliance.mlperf_log.transformer_print", "model.attention_layer.Attention", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.LayerNormalization.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.Transformer.__call__": ["model.model_utils.get_padding_bias", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.Transformer.decode", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.Transformer.encode", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.Transformer.predict", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.variance_scaling_initializer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.Transformer.encode": ["tensorflow.nn.dropout", "tensorflow.compat.v1.name_scope", "tensorflow.shape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.EncoderStack.__init__", "model.model_utils.get_padding", "mlperf_compliance.mlperf_log.transformer_print", "model.model_utils.get_position_encoding"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.Transformer.predict": ["<builtin>.range", "tensorflow.shape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.Transformer._get_symbols_to_logits_fn", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.DecoderStack.cache_encdec", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.zeros", "model.beam_search.sequence_beam_search"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.Transformer.decode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.DecoderStack.__init__", "tensorflow.nn.dropout", "tensorflow.compat.v1.name_scope", "tensorflow.shape", "model.model_utils.get_decoder_self_attention_bias", "model.model_utils.get_position_encoding", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.pad"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.Transformer._get_symbols_to_logits_fn": ["model.model_utils.get_position_encoding", "model.model_utils.get_decoder_self_attention_bias"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.Transformer._get_symbols_to_logits_fn.symbols_to_logits_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.DecoderStack.__init__", "tensorflow.squeeze"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.DecoderStack.cache_encdec": ["tensorflow.cast", "tensorflow.compat.v1.name_scope", "model.beam_search._expand_to_beam_size", "model.beam_search._flatten_beam_dim", "<builtin>.enumerate", "tensorflow.compat.v1.get_variable", "tensorflow.compat.v1.tpu.bfloat16_scope", "tensorflow.compat.v1.variable_scope", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.LayerNormalization.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.LayerNormalization.build": ["tensorflow.cast", "tensorflow.compat.v1.get_variable", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.zeros_initializer", "tensorflow.compat.v1.ones_initializer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.LayerNormalization.call": ["tensorflow.math.rsqrt", "tensorflow.square", "tensorflow.reduce_mean"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.PrePostProcessingWrapper.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.LayerNormalization.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.PrePostProcessingWrapper.__call__": ["mlperf_compliance.mlperf_log.transformer_print", "tensorflow.nn.dropout", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.LayerNormalization.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.EncoderStack.call": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.enumerate", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.DecoderStack.call": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.enumerate", "tensorflow.compat.v1.variable_scope"], "model.beam_search._expand_to_beam_size": [], "model.beam_search._flatten_beam_dim": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.attention_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.attention_layer.Attention.__init__": ["<builtin>.ValueError", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.layers.Dense", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.attention_layer.Attention.split_heads": ["tensorflow.reshape", "tensorflow.transpose", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.attention_layer.Attention.combine_heads": ["tensorflow.reshape", "tensorflow.transpose", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.attention_layer.Attention.call": ["tensorflow.cast", "tensorflow.nn.dropout", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.attention_layer.Attention.split_heads", "tensorflow.compat.v1.tpu.bfloat16_scope", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.nn.softmax", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.attention_layer.Attention.combine_heads", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.transformer.model.attention_layer.SelfAttention.call": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.main", "os.path.realpath", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.find_file": ["os.path.join", "<builtin>.len", "os.walk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.get_raw_files": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.download_and_extract"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.download_and_extract": ["<builtin>.OSError", "tarfile.open", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.download_from_url", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.find_file", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.download_report_hook": ["<builtin>.print", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.download_from_url": ["urllib.request.urlretrieve", "os.path.join", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.find_file", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.txt_line_iterator": ["tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.compile_files": ["<builtin>.range", "<builtin>.len", "os.path.join", "tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.write_file", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.write_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.txt_line_iterator"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.encode_and_save_files": ["<builtin>.range", "tensorflow.io.TFRecordWriter", "<builtin>.zip", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.dict_to_example", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.io.gfile.rename", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.txt_line_iterator", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.all_exist", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.shard_filename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.shard_filename": ["os.path.join"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.all_exist": ["tensorflow.io.gfile.exists"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.dict_to_example": ["tensorflow.train.Feature", "tensorflow.train.Int64List", "six.iteritems", "tensorflow.train.Features", "tensorflow.train.Example"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.shuffle_records": ["<builtin>.len", "tensorflow.io.TFRecordWriter", "tensorflow.io.gfile.remove", "<builtin>.enumerate", "tensorflow.compat.v1.python_io.tf_record_iterator", "random.shuffle", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.make_dir": ["tensorflow.io.gfile.exists", "tensorflow.io.gfile.makedirs", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.main": ["os.path.join", "tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.compile_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.shuffle_records", "mlperf_compliance.mlperf_log.transformer_print", "utils.tokenizer.Subtokenizer.init_from_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.make_dir", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.encode_and_save_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.process_data.get_raw_files", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate": ["os.path.abspath", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.UpdateGlobalStepHook.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.UpdateGlobalStepHook.begin": ["<builtin>.RuntimeError", "tensorflow.compat.v1.get_default_graph", "tensorflow.python.training.training_util.get_global_step", "tensorflow.python.ops.state_ops.assign_add"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.UpdateGlobalStepHook.after_create_session": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.UpdateGlobalStepHook.before_run": ["tensorflow.python.training.session_run_hook.SessionRunArgs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.UpdateGlobalStepHook.after_run": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate._get_sorted_inputs": ["<builtin>.sorted", "<builtin>.len", "tensorflow.io.gfile.GFile", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate._get_sorted_inputs.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate._encode_and_add_eos": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate._trim_and_decode": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.translate_file": ["<builtin>.len", "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate._get_sorted_inputs", "<builtin>.ValueError", "<builtin>.print", "six.moves.xrange", "<builtin>.enumerate", "tensorflow.python.training.basic_session_run_hooks.ProfilerHook", "time.time", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate._trim_and_decode", "tensorflow.io.gfile.isdir", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.UpdateGlobalStepHook.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.translate_file.input_generator": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate._encode_and_add_eos", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.translate_file.input_fn": ["tensorflow.data.Dataset.from_generator", "tensorflow.TensorShape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.translate_text": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate._trim_and_decode", "<builtin>.next", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate._encode_and_add_eos"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.translate_text.input_fn": ["tensorflow.data.Dataset.from_tensors"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.main": ["tensorflow.compat.v1.logging.warn", "tensorflow.estimator.Estimator", "tensorflow.io.gfile.exists", "os.path.join", "<builtin>.ValueError", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.logging.set_verbosity", "os.path.abspath", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.translate_text", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.translate.translate_file", "tensorflow.estimator.RunConfig", "utils.tokenizer.Subtokenizer", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu.main", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu.UnicodeRegex.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu.UnicodeRegex.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu.UnicodeRegex.property_chars", "re.compile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu.UnicodeRegex.property_chars": ["<builtin>.range", "six.unichr", "unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu.bleu_tokenize": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu.bleu_wrapper": ["<builtin>.len", "utils.metrics.compute_bleu", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu.bleu_tokenize", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu.main": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.export_transformer": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.export_transformer.main", "tensorflow.compat.v1.disable_v2_behavior"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.export_transformer.main": ["tensorflow.compat.v1.placeholder", "<builtin>.ValueError", "model.transformer.Transformer", "<builtin>.print", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.graph_util.convert_variables_to_constants", "tensorflow.compat.v1.gfile.GFile", "tensorflow.compat.v1.train.Saver", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.Session", "tensorflow.train.latest_checkpoint"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main": ["os.path.join", "os.path.realpath", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.disable_eager_execution", "argparse.ArgumentParser", "os.path.normpath", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.model_fn": ["tensorflow.estimator.EstimatorSpec", "tensorflow.reduce_sum", "utils.metrics.get_eval_metrics", "tensorflow.graph_util.import_graph_def", "<builtin>.print", "model.transformer.Transformer", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.get_train_op", "tensorflow.compat.v1.get_default_graph", "tensorflow.compat.v1.GraphDef", "utils.metrics.padded_cross_entropy_loss", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.train.LoggingTensorHook", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.get_train_op": ["tensorflow.python.training.adam.AdamOptimizer", "tensorflow.linalg.global_norm", "tensorflow.compat.v1.trainable_variables", "<builtin>.zip", "mlperf_compliance.mlperf_log.resnet_print", "tensorflow.compat.v1.train.get_global_step", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.get_learning_rate", "tensorflow.compat.v1.variable_scope", "mlperf_compliance.tf_mlperf_log.log_deferred", "<builtin>.list", "tensorflow.compat.v1.summary.scalar"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.get_learning_rate": ["tensorflow.cast", "tensorflow.math.rsqrt", "tensorflow.maximum", "tensorflow.compat.v1.name_scope", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.minimum", "tensorflow.compat.v1.summary.scalar"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.translate_and_compute_bleu": ["os.remove", "translate.translate_file", "tempfile.NamedTemporaryFile", "compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.get_global_step": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.evaluate_and_log_bleu": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.translate_and_compute_bleu", "tensorflow.compat.v1.Summary.Value", "os.path.join", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.get_global_step", "utils.tokenizer.Subtokenizer", "tensorflow.compat.v1.Summary"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.train_schedule": ["tensorflow.compat.v1.summary.FileWriter", "<builtin>.ValueError", "<builtin>.print", "os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.evaluate_and_log_bleu", "six.moves.xrange", "mlperf_compliance.mlperf_log.transformer_print", "mlperf_utils.logs.hooks_helper.get_train_hooks"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.main": ["tensorflow.estimator.Estimator", "tensorflow.io.gfile.exists", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.transformer_main.train_schedule", "<builtin>.ValueError", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.logging.set_verbosity", "<builtin>.Exception", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.set_random_seed", "random.seed", "tensorflow.estimator.RunConfig"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu_test": ["unittest.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file": ["tempfile.NamedTemporaryFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_same": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file", "unittest.TestCase.assertEqual", "compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_same_different_case": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file", "unittest.TestCase.assertEqual", "unittest.TestCase.assertLess", "compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_different": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file", "unittest.TestCase.assertLess", "compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_tokenize": ["unittest.TestCase.assertEqual", "compute_bleu.bleu_tokenize"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download": ["argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.find_file": ["os.path.join", "<builtin>.len", "os.walk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.get_raw_files": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.download_and_extract"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.download_and_extract": ["<builtin>.OSError", "tarfile.open", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.find_file", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.download_from_url", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.download_report_hook": ["<builtin>.print", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.download_from_url": ["urllib.request.urlretrieve", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.find_file", "os.path.join", "<builtin>.print", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.txt_line_iterator": ["tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.compile_files": ["<builtin>.range", "<builtin>.len", "os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.write_file", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.write_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.txt_line_iterator"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.encode_and_save_files": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.shard_filename", "tensorflow.io.TFRecordWriter", "<builtin>.zip", "<builtin>.enumerate", "tensorflow.io.gfile.rename", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.dict_to_example", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.all_exist", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.txt_line_iterator"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.shard_filename": ["os.path.join"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.all_exist": ["tensorflow.io.gfile.exists"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.dict_to_example": ["tensorflow.train.Feature", "tensorflow.train.Int64List", "six.iteritems", "tensorflow.train.Features", "tensorflow.train.Example"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.shuffle_records": ["<builtin>.len", "tensorflow.io.TFRecordWriter", "tensorflow.io.gfile.remove", "<builtin>.enumerate", "tensorflow.compat.v1.python_io.tf_record_iterator", "random.shuffle", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.make_dir": ["tensorflow.io.gfile.exists", "tensorflow.io.gfile.makedirs", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.main": ["os.path.join", "tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.encode_and_save_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.shuffle_records", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.make_dir", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.compile_files", "utils.tokenizer.Subtokenizer.init_from_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.data_download.get_raw_files", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._pad_tensors_to_same_length": ["tensorflow.pad", "tensorflow.shape", "tensorflow.maximum", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.padded_cross_entropy_loss": ["tensorflow.cast", "tensorflow.compat.v1.name_scope", "tensorflow.one_hot", "tensorflow.not_equal", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.math.log", "tensorflow.nn.softmax_cross_entropy_with_logits"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._convert_to_eval_metric": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._convert_to_eval_metric.problem_metric_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.padded_sequence_accuracy", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.rouge_2_fscore", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.rouge_l_fscore", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.padded_neg_log_perplexity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.padded_accuracy", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.bleu_score", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.padded_accuracy_top5", "tensorflow.compat.v1.metrics.mean"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.padded_accuracy": ["tensorflow.cast", "tensorflow.not_equal", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.compat.v1.variable_scope", "tensorflow.equal", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.padded_sequence_accuracy": ["tensorflow.cast", "<builtin>.range", "<builtin>.len", "<builtin>.list", "tensorflow.reduce_sum", "tensorflow.not_equal", "tensorflow.minimum", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.constant", "tensorflow.compat.v1.variable_scope", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.bleu_score": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.rouge_2_fscore": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.padded_accuracy_top5": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.padded_accuracy_topk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.rouge_l_fscore": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.padded_neg_log_perplexity": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.padded_cross_entropy_loss"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.get_eval_metrics": ["six.iteritems", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._convert_to_eval_metric.problem_metric_fn", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._convert_to_eval_metric"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.padded_accuracy_topk": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.nn.top_k", "tensorflow.shape", "tensorflow.not_equal", "tensorflow.zeros_like", "tensorflow.minimum", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.compat.v1.variable_scope", "tensorflow.equal"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._get_ngrams_with_counter": ["collections.Counter", "<builtin>.len", "<builtin>.tuple", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.compute_bleu": ["<builtin>.dict", "<builtin>.len", "numpy.float32", "math.log", "<builtin>.zip", "<builtin>.min", "<builtin>.sum", "six.moves.xrange", "math.exp", "<builtin>.float", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._get_ngrams_with_counter", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._get_ngrams": ["<builtin>.range", "<builtin>.set", "<builtin>.len", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.rouge_n": ["<builtin>.len", "<builtin>.zip", "numpy.mean", "<builtin>.float", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._get_ngrams"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics.rouge_l_sentence_level": ["<builtin>.len", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._len_lcs", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._f_lcs", "numpy.mean", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._len_lcs": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._lcs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._f_lcs": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.metrics._lcs": ["<builtin>.dict", "<builtin>.len", "<builtin>.range", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._load_records": ["tensorflow.data.TFRecordDataset"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._parse_example": ["tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.sparse.to_dense"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._filter_max_length": ["tensorflow.logical_and", "tensorflow.size"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._get_example_length": ["tensorflow.shape", "tensorflow.maximum"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._create_min_max_boundaries": ["<builtin>.int", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._batch_examples": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._create_min_max_boundaries", "tensorflow.data.experimental.group_by_window", "tensorflow.constant"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._batch_examples.example_to_bucket_id": ["tensorflow.less", "tensorflow.compat.v1.where", "tensorflow.reduce_min", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._get_example_length", "tensorflow.logical_and", "tensorflow.less_equal"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._batch_examples.window_size_fn": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._batch_examples.batching_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._batch_examples.window_size_fn"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._read_and_batch_from_files": ["mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._batch_examples", "tensorflow.data.experimental.parallel_interleave", "tensorflow.data.Dataset.list_files"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._read_and_batch_from_files.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._filter_max_length"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset.train_input_fn": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._read_and_batch_from_files", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset.eval_input_fn": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.dataset._read_and_batch_from_files", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer": ["six.unichr", "unicodedata.category", "six.moves.xrange", "<builtin>.set", "re.compile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer.Subtokenizer.__init__": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._generate_alphabet_dict", "<builtin>.max", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._load_vocab_file", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._list_to_index_dict", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._load_vocab_file": ["tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._native_to_unicode"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._generate_alphabet_dict": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._list_to_index_dict": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer.Subtokenizer.init_from_files": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._count_tokens", "tensorflow.io.gfile.exists", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer.Subtokenizer.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._generate_alphabet_dict", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._save_vocab_file", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._count_tokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._split_string_to_tokens", "collections.defaultdict", "<builtin>.int", "tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._native_to_unicode"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._generate_subtokens", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._save_vocab_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._unicode_to_native", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer.Subtokenizer.encode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer.Subtokenizer._token_to_subtoken_ids", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._native_to_unicode", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._split_string_to_tokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._native_to_unicode": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._split_string_to_tokens": ["<builtin>.len", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer.Subtokenizer._token_to_subtoken_ids": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._escape_token", "<builtin>.hash", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._split_token_to_subtokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._escape_token": ["<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._split_token_to_subtokens": ["<builtin>.len", "<builtin>.min", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer.Subtokenizer.decode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer.Subtokenizer._subtoken_ids_to_tokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._unicode_to_native", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._join_tokens_to_string", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer.Subtokenizer._subtoken_ids_to_tokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._unescape_token"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._join_tokens_to_string": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._unicode_to_native": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._unescape_token": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._unescape_token.match": ["six.unichr", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._generate_subtokens": ["<builtin>.len", "<builtin>.list", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._gen_new_subtoken_list", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._count_and_gen_subtokens", "six.moves.xrange", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._list_to_index_dict", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect", "<builtin>.len", "<builtin>.abs", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._generate_subtokens", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._count_and_gen_subtokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._split_token_to_subtokens", "six.moves.xrange", "six.iteritems", "collections.defaultdict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._escape_token"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._filter_and_bucket_subtokens": ["six.iteritems", "<builtin>.len", "<builtin>.set"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._gen_new_subtoken_list": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer._filter_and_bucket_subtokens", "six.moves.xrange", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test": ["unittest.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer": ["tokenizer.Subtokenizer", "tempfile.NamedTemporaryFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.SubtokenizerTest.test_encode": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.SubtokenizerTest.test_decode": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.SubtokenizerTest.test_subtoken_ids_to_tokens": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_split_string_to_tokens": ["unittest.TestCase.assertEqual", "tokenizer._split_string_to_tokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_join_tokens_to_string": ["unittest.TestCase.assertEqual", "tokenizer._join_tokens_to_string"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_escape_token": ["<builtin>.set", "tokenizer._escape_token", "unittest.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_unescape_token": ["unittest.TestCase.assertEqual", "tokenizer._unescape_token"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_list_to_index_dict": ["tokenizer._list_to_index_dict", "unittest.TestCase.assertDictEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_split_token_to_subtokens": ["unittest.TestCase.assertEqual", "tokenizer._split_token_to_subtokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_generate_alphabet_dict": ["unittest.TestCase.assertIn", "tokenizer._generate_alphabet_dict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_count_and_gen_subtokens": ["unittest.TestCase.assertDictEqual", "<builtin>.set", "tokenizer._count_and_gen_subtokens", "unittest.TestCase.assertIsInstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_filter_and_bucket_subtokens": ["<builtin>.len", "tokenizer._filter_and_bucket_subtokens", "unittest.TestCase.assertEqual", "<builtin>.set", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_gen_new_subtoken_list": ["<builtin>.len", "unittest.TestCase.assertIn", "unittest.TestCase.assertEqual", "unittest.TestCase.assertNotIn", "<builtin>.set", "tokenizer._gen_new_subtoken_list", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.utils.tokenizer_test.StringHelperTest.test_generate_subtokens": ["unittest.TestCase.assertIn", "<builtin>.set", "tokenizer._generate_subtokens", "unittest.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.model_params": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.model_utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.model_utils.get_position_encoding": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.cos", "tensorflow.exp", "tensorflow.sin", "<builtin>.float", "tensorflow.concat", "math.log", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.model_utils.get_decoder_self_attention_bias": ["tensorflow.reshape", "tensorflow.linalg.band_part", "tensorflow.ones", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.model_utils.get_padding": ["tensorflow.cast", "tensorflow.equal", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.model_utils.get_padding_bias": ["tensorflow.expand_dims", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.model_utils.get_padding", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.ffn_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.ffn_layer.FeedFowardNetwork.__init__": ["mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.layers.Dense", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.ffn_layer.FeedFowardNetwork.call": ["mlperf_compliance.mlperf_log.transformer_print", "tensorflow.nn.dropout", "tensorflow.shape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.embedding_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.embedding_layer.EmbeddingSharedWeights.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.embedding_layer.EmbeddingSharedWeights.build": ["tensorflow.compat.v1.get_variable", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.random_normal_initializer", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.embedding_layer.EmbeddingSharedWeights.call": ["model.model_utils.get_padding", "tensorflow.expand_dims", "tensorflow.gather", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.embedding_layer.EmbeddingSharedWeights.linear": ["tensorflow.reshape", "tensorflow.matmul", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.model_utils_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.model_utils_test.ModelUtilsTest.test_get_padding": ["model_utils.get_padding", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.model_utils_test.ModelUtilsTest.test_get_padding_bias": ["model_utils.get_padding_bias", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "tensorflow.test.TestCase.test_session", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.model_utils_test.ModelUtilsTest.test_get_decoder_self_attention_bias": ["tensorflow.test.TestCase.assertAllEqual", "model_utils.get_decoder_self_attention_bias", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch.search": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._create_initial_state", "tensorflow.reduce_any", "tensorflow.compat.v1.where", "tensorflow.while_loop"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._create_initial_state": ["tensorflow.expand_dims", "tensorflow.shape", "tensorflow.python.util.nest.map_structure", "tensorflow.ones", "tensorflow.TensorShape", "tensorflow.constant", "tensorflow.tile", "<builtin>.float", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._expand_to_beam_size", "tensorflow.zeros"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._expand_to_beam_size": ["tensorflow.expand_dims", "tensorflow.tile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._create_initial_state.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._expand_to_beam_size"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._continue_search": ["tensorflow.cast", "tensorflow.reduce_any", "tensorflow.less", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._length_normalization", "tensorflow.reduce_min", "tensorflow.reduce_all", "tensorflow.logical_not", "tensorflow.logical_and", "tensorflow.greater"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._length_normalization": ["tensorflow.cast", "tensorflow.pow"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._search_step": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq": ["tensorflow.expand_dims", "tensorflow.nn.top_k", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._flatten_beam_dim", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._unflatten_beam_dim", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._log_prob_from_logits", "tensorflow.concat", "tensorflow.reshape", "tensorflow.python.util.nest.map_structure", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.nn.top_k", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._flatten_beam_dim", "tensorflow.equal", "tensorflow.python.util.nest.map_structure", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.nn.top_k", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._flatten_beam_dim", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._length_normalization", "tensorflow.concat", "tensorflow.equal", "tensorflow.python.util.nest.map_structure", "tensorflow.zeros", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._flatten_beam_dim": ["tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._shape_list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._unflatten_beam_dim": ["tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._shape_list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._unflatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._log_prob_from_logits": ["tensorflow.reduce_logsumexp"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq._test": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._unflatten_beam_dim", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._flatten_beam_dim", "tensorflow.gather"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq.<lambda2>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq._test"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state._test": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._unflatten_beam_dim", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._flatten_beam_dim", "tensorflow.gather"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state._test"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state._test": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._unflatten_beam_dim", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._flatten_beam_dim", "tensorflow.gather"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state._test"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.sequence_beam_search": ["tensorflow.shape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search.SequenceBeamSearch.search"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._shape_list": ["<builtin>.range", "<builtin>.len", "tensorflow.shape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._get_shape_keep_last_dim": ["<builtin>.range", "<builtin>.len", "tensorflow.TensorShape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._shape_list", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._gather_beams": ["tensorflow.reshape", "tensorflow.python.util.nest.map_structure", "tensorflow.stack", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._gather_beams.<lambda1>": ["tensorflow.gather_nd"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._gather_topk_beams": ["tensorflow.nn.top_k", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search._gather_beams"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_expand_to_beam_size": ["beam_search._expand_to_beam_size", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_shape_list": ["tensorflow.cast", "tensorflow.sqrt", "tensorflow.test.TestCase.assertIsInstance", "tensorflow.ones", "beam_search._shape_list", "tensorflow.constant"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_get_shape_keep_last_dim": ["tensorflow.cast", "tensorflow.sqrt", "tensorflow.ones", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "beam_search._get_shape_keep_last_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_flatten_beam_dim": ["tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session", "beam_search._flatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_unflatten_beam_dim": ["beam_search._unflatten_beam_dim", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_gather_beams": ["beam_search._gather_beams", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.test.TestCase.test_session", "tensorflow.reshape", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.beam_search_test.BeamSearchHelperTests.test_gather_topk_beams": ["tensorflow.test.TestCase.assertAllEqual", "tensorflow.test.TestCase.test_session", "tensorflow.reshape", "beam_search._gather_topk_beams", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.Transformer.__init__": ["model.embedding_layer.EmbeddingSharedWeights", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.EncoderStack.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.DecoderStack.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.EncoderStack.__init__": ["<builtin>.range", "model.attention_layer.SelfAttention", "model.ffn_layer.FeedFowardNetwork", "<builtin>.super", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.LayerNormalization.__init__", "mlperf_compliance.mlperf_log.transformer_print"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.DecoderStack.__init__": ["<builtin>.range", "model.attention_layer.SelfAttention", "model.ffn_layer.FeedFowardNetwork", "<builtin>.super", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.LayerNormalization.__init__", "mlperf_compliance.mlperf_log.transformer_print", "model.attention_layer.Attention"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.Transformer.__call__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.Transformer.decode", "model.model_utils.get_padding_bias", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.Transformer.encode", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.Transformer.predict", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.variance_scaling_initializer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.Transformer.encode": ["tensorflow.nn.dropout", "tensorflow.compat.v1.name_scope", "tensorflow.shape", "model.model_utils.get_padding", "mlperf_compliance.mlperf_log.transformer_print", "model.model_utils.get_position_encoding", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.EncoderStack.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.Transformer.predict": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.Transformer._get_symbols_to_logits_fn", "tensorflow.shape", "model.beam_search.sequence_beam_search", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.zeros", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.DecoderStack.cache_encdec"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.Transformer.decode": ["tensorflow.nn.dropout", "tensorflow.compat.v1.name_scope", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.DecoderStack.__init__", "tensorflow.shape", "model.model_utils.get_decoder_self_attention_bias", "model.model_utils.get_position_encoding", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.pad"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.Transformer._get_symbols_to_logits_fn": ["model.model_utils.get_position_encoding", "model.model_utils.get_decoder_self_attention_bias"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.Transformer._get_symbols_to_logits_fn.symbols_to_logits_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.DecoderStack.__init__", "tensorflow.squeeze"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.DecoderStack.cache_encdec": ["tensorflow.cast", "tensorflow.compat.v1.name_scope", "model.beam_search._expand_to_beam_size", "model.beam_search._flatten_beam_dim", "<builtin>.enumerate", "tensorflow.compat.v1.get_variable", "tensorflow.compat.v1.variable_scope", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.LayerNormalization.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.LayerNormalization.build": ["mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.zeros_initializer", "tensorflow.compat.v1.ones_initializer", "tensorflow.compat.v1.get_variable"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.LayerNormalization.call": ["tensorflow.math.rsqrt", "tensorflow.square", "tensorflow.reduce_mean"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.PrePostProcessingWrapper.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.LayerNormalization.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.PrePostProcessingWrapper.__call__": ["tensorflow.cast", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.nn.dropout", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.LayerNormalization.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.EncoderStack.call": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.enumerate", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.DecoderStack.call": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.enumerate", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.attention_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.attention_layer.Attention.__init__": ["<builtin>.ValueError", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.layers.Dense", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.attention_layer.Attention.split_heads": ["tensorflow.reshape", "tensorflow.transpose", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.attention_layer.Attention.combine_heads": ["tensorflow.reshape", "tensorflow.transpose", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.attention_layer.Attention.call": ["tensorflow.cast", "tensorflow.nn.dropout", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.attention_layer.Attention.split_heads", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.attention_layer.Attention.combine_heads", "tensorflow.concat", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.nn.softmax", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.fp32.transformer.model.attention_layer.SelfAttention.call": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate": ["os.path.abspath", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.UpdateGlobalStepHook.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.UpdateGlobalStepHook.begin": ["<builtin>.RuntimeError", "tensorflow.compat.v1.get_default_graph", "tensorflow.python.training.training_util.get_global_step", "tensorflow.python.ops.state_ops.assign_add"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.UpdateGlobalStepHook.after_create_session": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.UpdateGlobalStepHook.before_run": ["tensorflow.python.training.session_run_hook.SessionRunArgs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.UpdateGlobalStepHook.after_run": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate._get_sorted_inputs": ["<builtin>.sorted", "<builtin>.len", "tensorflow.io.gfile.GFile", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate._get_sorted_inputs.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate._encode_and_add_eos": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate._trim_and_decode": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.translate_file": ["<builtin>.len", "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook", "<builtin>.ValueError", "<builtin>.print", "tensorflow.io.gfile.isdir", "six.moves.xrange", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.UpdateGlobalStepHook.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate._get_sorted_inputs", "tensorflow.python.training.basic_session_run_hooks.ProfilerHook", "time.time", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate._trim_and_decode", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.translate_file.input_generator": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate._encode_and_add_eos", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.translate_file.input_fn": ["tensorflow.data.Dataset.from_generator", "tensorflow.TensorShape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.translate_text": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate._trim_and_decode", "<builtin>.next", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate._encode_and_add_eos"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.translate_text.input_fn": ["tensorflow.data.Dataset.from_tensors"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.main": ["tensorflow.compat.v1.logging.warn", "tensorflow.estimator.Estimator", "tensorflow.io.gfile.exists", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.translate_file", "os.path.join", "<builtin>.ValueError", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.logging.set_verbosity", "os.path.abspath", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.translate.translate_text", "tensorflow.estimator.RunConfig", "utils.tokenizer.Subtokenizer", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu.main", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu.UnicodeRegex.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu.UnicodeRegex.__init__": ["re.compile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu.UnicodeRegex.property_chars"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu.UnicodeRegex.property_chars": ["<builtin>.range", "six.unichr", "unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu.bleu_tokenize": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu.bleu_wrapper": ["<builtin>.len", "utils.metrics.compute_bleu", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu.bleu_tokenize", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu.main": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main": ["os.path.join", "os.path.realpath", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.disable_eager_execution", "argparse.ArgumentParser", "os.path.normpath", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.model_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.get_train_op", "tensorflow.estimator.EstimatorSpec", "tensorflow.reduce_sum", "utils.metrics.get_eval_metrics", "tensorflow.graph_util.import_graph_def", "<builtin>.print", "model.transformer.Transformer", "tensorflow.compat.v1.get_default_graph", "tensorflow.compat.v1.GraphDef", "utils.metrics.padded_cross_entropy_loss", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.train.LoggingTensorHook", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.get_train_op": ["tensorflow.python.training.adam.AdamOptimizer", "tensorflow.linalg.global_norm", "tensorflow.compat.v1.trainable_variables", "<builtin>.zip", "mlperf_compliance.mlperf_log.resnet_print", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.train.get_global_step", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.get_learning_rate", "mlperf_compliance.tf_mlperf_log.log_deferred", "<builtin>.list", "tensorflow.compat.v1.summary.scalar"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.get_learning_rate": ["tensorflow.cast", "tensorflow.math.rsqrt", "tensorflow.maximum", "tensorflow.compat.v1.name_scope", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.minimum", "tensorflow.compat.v1.summary.scalar"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.translate_and_compute_bleu": ["os.remove", "translate.translate_file", "tempfile.NamedTemporaryFile", "compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.get_global_step": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.evaluate_and_log_bleu": ["tensorflow.compat.v1.Summary.Value", "os.path.join", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.translate_and_compute_bleu", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.get_global_step", "utils.tokenizer.Subtokenizer", "tensorflow.compat.v1.Summary"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.train_schedule": ["tensorflow.compat.v1.summary.FileWriter", "<builtin>.ValueError", "<builtin>.print", "os.path.join", "six.moves.xrange", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.evaluate_and_log_bleu", "mlperf_utils.logs.hooks_helper.get_train_hooks"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.main": ["tensorflow.estimator.Estimator", "tensorflow.io.gfile.exists", "<builtin>.ValueError", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.logging.set_verbosity", "<builtin>.Exception", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.transformer_main.train_schedule", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.set_random_seed", "random.seed", "tensorflow.estimator.RunConfig"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu_test": ["unittest.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file": ["tempfile.NamedTemporaryFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_same": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file", "compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_same_different_case": ["unittest.TestCase.assertLess", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file", "compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_different": ["unittest.TestCase.assertLess", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu_test.ComputeBleuTest._create_temp_file", "compute_bleu.bleu_wrapper"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.compute_bleu_test.ComputeBleuTest.test_bleu_tokenize": ["unittest.TestCase.assertEqual", "compute_bleu.bleu_tokenize"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.main", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.find_file": ["os.path.join", "<builtin>.len", "os.walk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.get_raw_files": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.download_and_extract"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.download_and_extract": ["<builtin>.OSError", "tarfile.open", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.download_from_url", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.find_file", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.download_report_hook": ["<builtin>.print", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.download_from_url": ["urllib.request.urlretrieve", "os.path.join", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.find_file", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.txt_line_iterator": ["tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.compile_files": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.write_file", "os.path.join", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.write_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.txt_line_iterator"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.encode_and_save_files": ["<builtin>.range", "tensorflow.io.TFRecordWriter", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.all_exist", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.dict_to_example", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.txt_line_iterator", "tensorflow.io.gfile.rename", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.shard_filename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.shard_filename": ["os.path.join"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.all_exist": ["tensorflow.io.gfile.exists"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.dict_to_example": ["tensorflow.train.Feature", "tensorflow.train.Int64List", "six.iteritems", "tensorflow.train.Features", "tensorflow.train.Example"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.shuffle_records": ["<builtin>.len", "tensorflow.io.TFRecordWriter", "tensorflow.io.gfile.remove", "<builtin>.enumerate", "tensorflow.compat.v1.python_io.tf_record_iterator", "random.shuffle", "tensorflow.io.gfile.rename", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.make_dir": ["tensorflow.io.gfile.exists", "tensorflow.io.gfile.makedirs", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.main": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.compile_files", "os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.get_raw_files", "tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.make_dir", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.shuffle_records", "utils.tokenizer.Subtokenizer.init_from_files", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.data_download.encode_and_save_files", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._pad_tensors_to_same_length": ["tensorflow.pad", "tensorflow.shape", "tensorflow.maximum", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.padded_cross_entropy_loss": ["tensorflow.cast", "tensorflow.compat.v1.name_scope", "tensorflow.math.log", "tensorflow.one_hot", "tensorflow.not_equal", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.nn.softmax_cross_entropy_with_logits"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._convert_to_eval_metric": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._convert_to_eval_metric.problem_metric_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.bleu_score", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.rouge_2_fscore", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.rouge_l_fscore", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.padded_sequence_accuracy", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.padded_accuracy", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.padded_accuracy_top5", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.padded_neg_log_perplexity", "tensorflow.compat.v1.metrics.mean"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.bleu_score": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.padded_accuracy_top5": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.padded_accuracy_topk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.rouge_2_fscore": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.padded_neg_log_perplexity": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.padded_cross_entropy_loss"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.rouge_l_fscore": ["tensorflow.cast", "tensorflow.compat.v1.py_func", "tensorflow.constant", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.padded_sequence_accuracy": ["tensorflow.cast", "<builtin>.range", "<builtin>.len", "<builtin>.list", "tensorflow.reduce_sum", "tensorflow.not_equal", "tensorflow.minimum", "tensorflow.constant", "tensorflow.compat.v1.variable_scope", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.padded_accuracy": ["tensorflow.cast", "tensorflow.not_equal", "tensorflow.compat.v1.variable_scope", "tensorflow.equal", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._pad_tensors_to_same_length", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.get_eval_metrics": ["six.iteritems", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._convert_to_eval_metric.problem_metric_fn", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._convert_to_eval_metric"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.padded_accuracy_topk": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.nn.top_k", "tensorflow.shape", "tensorflow.not_equal", "tensorflow.zeros_like", "tensorflow.minimum", "tensorflow.compat.v1.variable_scope", "tensorflow.equal", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._pad_tensors_to_same_length"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._get_ngrams_with_counter": ["collections.Counter", "<builtin>.len", "<builtin>.tuple", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.compute_bleu": ["<builtin>.dict", "<builtin>.len", "numpy.float32", "<builtin>.zip", "<builtin>.min", "<builtin>.sum", "six.moves.xrange", "math.exp", "<builtin>.float", "math.log", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._get_ngrams_with_counter", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._get_ngrams": ["<builtin>.range", "<builtin>.set", "<builtin>.len", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.rouge_n": ["<builtin>.len", "<builtin>.zip", "numpy.mean", "<builtin>.float", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._get_ngrams"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics.rouge_l_sentence_level": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._len_lcs", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._f_lcs", "numpy.mean", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._len_lcs": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._lcs", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._f_lcs": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.metrics._lcs": ["<builtin>.dict", "<builtin>.len", "<builtin>.range", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._load_records": ["tensorflow.data.TFRecordDataset"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._parse_example": ["tensorflow.io.VarLenFeature", "tensorflow.io.parse_single_example", "tensorflow.sparse.to_dense"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._filter_max_length": ["tensorflow.logical_and", "tensorflow.size"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._get_example_length": ["tensorflow.shape", "tensorflow.maximum"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._create_min_max_boundaries": ["<builtin>.int", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._batch_examples": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._create_min_max_boundaries", "tensorflow.data.experimental.group_by_window", "tensorflow.constant"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._batch_examples.example_to_bucket_id": ["tensorflow.less", "tensorflow.compat.v1.where", "tensorflow.reduce_min", "tensorflow.logical_and", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._get_example_length", "tensorflow.less_equal"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._batch_examples.window_size_fn": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._batch_examples.batching_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._batch_examples.window_size_fn"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._read_and_batch_from_files": ["mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._batch_examples", "tensorflow.data.experimental.parallel_interleave", "tensorflow.data.Dataset.list_files"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._read_and_batch_from_files.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._filter_max_length"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset.train_input_fn": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._read_and_batch_from_files", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset.eval_input_fn": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.dataset._read_and_batch_from_files", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer": ["six.unichr", "unicodedata.category", "six.moves.xrange", "<builtin>.set", "re.compile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer.Subtokenizer.__init__": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._list_to_index_dict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._generate_alphabet_dict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._load_vocab_file", "<builtin>.max", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._load_vocab_file": ["tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._native_to_unicode"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._generate_alphabet_dict": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._list_to_index_dict": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer.Subtokenizer.init_from_files": ["<builtin>.len", "tensorflow.io.gfile.exists", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer.Subtokenizer.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._generate_alphabet_dict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._count_tokens", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._save_vocab_file", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._count_tokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._native_to_unicode", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._split_string_to_tokens", "collections.defaultdict", "<builtin>.int", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._generate_subtokens", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._save_vocab_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._unicode_to_native", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer.Subtokenizer.encode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer.Subtokenizer._token_to_subtoken_ids", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._native_to_unicode", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._split_string_to_tokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._native_to_unicode": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._split_string_to_tokens": ["<builtin>.len", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer.Subtokenizer._token_to_subtoken_ids": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._escape_token", "<builtin>.hash", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._split_token_to_subtokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._escape_token": ["<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._split_token_to_subtokens": ["<builtin>.len", "<builtin>.min", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer.Subtokenizer.decode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._unicode_to_native", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._join_tokens_to_string", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer.Subtokenizer._subtoken_ids_to_tokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer.Subtokenizer._subtoken_ids_to_tokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._unescape_token"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._join_tokens_to_string": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._unicode_to_native": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._unescape_token": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._unescape_token.match": ["six.unichr", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._generate_subtokens": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._list_to_index_dict", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._count_and_gen_subtokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._gen_new_subtoken_list", "six.moves.xrange", "<builtin>.list", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._generate_subtokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect", "<builtin>.abs", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._count_and_gen_subtokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._split_token_to_subtokens", "six.moves.xrange", "six.iteritems", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._escape_token", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._filter_and_bucket_subtokens": ["six.iteritems", "<builtin>.len", "<builtin>.set"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._gen_new_subtoken_list": ["<builtin>.len", "six.moves.xrange", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer._filter_and_bucket_subtokens", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test": ["unittest.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer": ["tokenizer.Subtokenizer", "tempfile.NamedTemporaryFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.SubtokenizerTest.test_encode": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.SubtokenizerTest.test_decode": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.SubtokenizerTest.test_subtoken_ids_to_tokens": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.StringHelperTest.test_split_string_to_tokens": ["unittest.TestCase.assertEqual", "tokenizer._split_string_to_tokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.StringHelperTest.test_join_tokens_to_string": ["unittest.TestCase.assertEqual", "tokenizer._join_tokens_to_string"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.StringHelperTest.test_escape_token": ["<builtin>.set", "tokenizer._escape_token", "unittest.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.StringHelperTest.test_unescape_token": ["unittest.TestCase.assertEqual", "tokenizer._unescape_token"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.StringHelperTest.test_list_to_index_dict": ["tokenizer._list_to_index_dict", "unittest.TestCase.assertDictEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.StringHelperTest.test_split_token_to_subtokens": ["unittest.TestCase.assertEqual", "tokenizer._split_token_to_subtokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.StringHelperTest.test_generate_alphabet_dict": ["unittest.TestCase.assertIn", "tokenizer._generate_alphabet_dict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.StringHelperTest.test_count_and_gen_subtokens": ["unittest.TestCase.assertDictEqual", "<builtin>.set", "tokenizer._count_and_gen_subtokens", "unittest.TestCase.assertIsInstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.StringHelperTest.test_filter_and_bucket_subtokens": ["<builtin>.len", "tokenizer._filter_and_bucket_subtokens", "unittest.TestCase.assertEqual", "<builtin>.set", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.StringHelperTest.test_gen_new_subtoken_list": ["<builtin>.len", "unittest.TestCase.assertIn", "unittest.TestCase.assertEqual", "unittest.TestCase.assertNotIn", "<builtin>.set", "tokenizer._gen_new_subtoken_list", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.utils.tokenizer_test.StringHelperTest.test_generate_subtokens": ["unittest.TestCase.assertIn", "<builtin>.set", "tokenizer._generate_subtokens", "unittest.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.model_params": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.model_utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.model_utils.get_position_encoding": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.cos", "tensorflow.exp", "tensorflow.sin", "<builtin>.float", "tensorflow.concat", "math.log", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.model_utils.get_decoder_self_attention_bias": ["tensorflow.reshape", "tensorflow.linalg.band_part", "tensorflow.ones", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.model_utils.get_padding": ["tensorflow.cast", "tensorflow.equal", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.model_utils.get_padding_bias": ["tensorflow.expand_dims", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.model_utils.get_padding", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.ffn_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.ffn_layer.FeedFowardNetwork.__init__": ["mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.layers.Dense", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.ffn_layer.FeedFowardNetwork.call": ["mlperf_compliance.mlperf_log.transformer_print", "tensorflow.nn.dropout", "tensorflow.shape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.embedding_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.embedding_layer.EmbeddingSharedWeights.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.embedding_layer.EmbeddingSharedWeights.build": ["tensorflow.compat.v1.get_variable", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.random_normal_initializer", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.embedding_layer.EmbeddingSharedWeights.call": ["model.model_utils.get_padding", "tensorflow.expand_dims", "tensorflow.gather", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.embedding_layer.EmbeddingSharedWeights.linear": ["tensorflow.reshape", "tensorflow.matmul", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.model_utils_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.model_utils_test.ModelUtilsTest.test_get_padding": ["model_utils.get_padding", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.model_utils_test.ModelUtilsTest.test_get_padding_bias": ["model_utils.get_padding_bias", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "tensorflow.test.TestCase.test_session", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.model_utils_test.ModelUtilsTest.test_get_decoder_self_attention_bias": ["tensorflow.test.TestCase.assertAllEqual", "model_utils.get_decoder_self_attention_bias", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch.search": ["tensorflow.while_loop", "tensorflow.reduce_any", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._create_initial_state", "tensorflow.compat.v1.where"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._create_initial_state": ["tensorflow.expand_dims", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._expand_to_beam_size", "tensorflow.shape", "tensorflow.ones", "tensorflow.TensorShape", "tensorflow.constant", "tensorflow.tile", "<builtin>.float", "tensorflow.python.util.nest.map_structure", "tensorflow.zeros"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._expand_to_beam_size": ["tensorflow.expand_dims", "tensorflow.tile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._create_initial_state.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._expand_to_beam_size"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._continue_search": ["tensorflow.cast", "tensorflow.reduce_any", "tensorflow.less", "tensorflow.reduce_min", "tensorflow.reduce_all", "tensorflow.logical_not", "tensorflow.logical_and", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._length_normalization", "tensorflow.greater"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._length_normalization": ["tensorflow.cast", "tensorflow.pow"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._search_step": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq": ["tensorflow.expand_dims", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._log_prob_from_logits", "tensorflow.nn.top_k", "tensorflow.range", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._flatten_beam_dim", "tensorflow.concat", "tensorflow.reshape", "tensorflow.python.util.nest.map_structure", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._unflatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.nn.top_k", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._flatten_beam_dim", "tensorflow.equal", "tensorflow.python.util.nest.map_structure", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state": ["tensorflow.cast", "tensorflow.expand_dims", "tensorflow.nn.top_k", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._length_normalization", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._flatten_beam_dim", "tensorflow.concat", "tensorflow.equal", "tensorflow.python.util.nest.map_structure", "tensorflow.zeros", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._flatten_beam_dim": ["tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._shape_list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._unflatten_beam_dim": ["tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._shape_list"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._unflatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._log_prob_from_logits": ["tensorflow.reduce_logsumexp"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq._test": ["tensorflow.gather", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._unflatten_beam_dim", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._flatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq.<lambda2>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._grow_alive_seq._test"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state._test": ["tensorflow.gather", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._unflatten_beam_dim", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._flatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._get_new_alive_state._test"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state._test": ["tensorflow.gather", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._unflatten_beam_dim", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._flatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch._get_new_finished_state._test"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.sequence_beam_search": ["tensorflow.shape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch.search", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search.SequenceBeamSearch.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._shape_list": ["<builtin>.range", "<builtin>.len", "tensorflow.shape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._get_shape_keep_last_dim": ["<builtin>.range", "<builtin>.len", "tensorflow.TensorShape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._shape_list", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._gather_beams": ["tensorflow.reshape", "tensorflow.python.util.nest.map_structure", "tensorflow.stack", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._gather_beams.<lambda1>": ["tensorflow.gather_nd"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._gather_topk_beams": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search._gather_beams", "tensorflow.nn.top_k"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search_test.BeamSearchHelperTests.test_expand_to_beam_size": ["beam_search._expand_to_beam_size", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search_test.BeamSearchHelperTests.test_shape_list": ["tensorflow.cast", "tensorflow.sqrt", "tensorflow.test.TestCase.assertIsInstance", "tensorflow.ones", "beam_search._shape_list", "tensorflow.constant"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search_test.BeamSearchHelperTests.test_get_shape_keep_last_dim": ["tensorflow.cast", "tensorflow.sqrt", "tensorflow.ones", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.constant", "beam_search._get_shape_keep_last_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search_test.BeamSearchHelperTests.test_flatten_beam_dim": ["tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session", "beam_search._flatten_beam_dim"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search_test.BeamSearchHelperTests.test_unflatten_beam_dim": ["beam_search._unflatten_beam_dim", "tensorflow.shape", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.ones", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search_test.BeamSearchHelperTests.test_gather_beams": ["beam_search._gather_beams", "tensorflow.test.TestCase.assertAllEqual", "tensorflow.test.TestCase.test_session", "tensorflow.reshape", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.beam_search_test.BeamSearchHelperTests.test_gather_topk_beams": ["tensorflow.test.TestCase.assertAllEqual", "tensorflow.test.TestCase.test_session", "tensorflow.reshape", "beam_search._gather_topk_beams", "tensorflow.range"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.Transformer.__init__": ["model.embedding_layer.EmbeddingSharedWeights", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.DecoderStack.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.EncoderStack.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.EncoderStack.__init__": ["<builtin>.range", "model.attention_layer.SelfAttention", "model.ffn_layer.FeedFowardNetwork", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.super", "mlperf_compliance.mlperf_log.transformer_print"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.DecoderStack.__init__": ["<builtin>.range", "model.attention_layer.SelfAttention", "model.ffn_layer.FeedFowardNetwork", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.super", "mlperf_compliance.mlperf_log.transformer_print", "model.attention_layer.Attention"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.Transformer.__call__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.Transformer.predict", "model.model_utils.get_padding_bias", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.Transformer.decode", "tensorflow.compat.v1.variable_scope", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.Transformer.encode", "tensorflow.compat.v1.variance_scaling_initializer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.Transformer.encode": ["tensorflow.nn.dropout", "tensorflow.compat.v1.name_scope", "tensorflow.shape", "model.model_utils.get_padding", "mlperf_compliance.mlperf_log.transformer_print", "model.model_utils.get_position_encoding", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.EncoderStack.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.Transformer.predict": ["<builtin>.range", "tensorflow.shape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.DecoderStack.cache_encdec", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.Transformer._get_symbols_to_logits_fn", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.zeros", "model.beam_search.sequence_beam_search"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.Transformer.decode": ["tensorflow.nn.dropout", "tensorflow.compat.v1.name_scope", "tensorflow.shape", "model.model_utils.get_decoder_self_attention_bias", "model.model_utils.get_position_encoding", "mlperf_compliance.mlperf_log.transformer_print", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.DecoderStack.__init__", "tensorflow.pad"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.Transformer._get_symbols_to_logits_fn": ["model.model_utils.get_position_encoding", "model.model_utils.get_decoder_self_attention_bias"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.Transformer._get_symbols_to_logits_fn.symbols_to_logits_fn": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.DecoderStack.__init__", "tensorflow.squeeze"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.DecoderStack.cache_encdec": ["tensorflow.cast", "tensorflow.compat.v1.name_scope", "model.beam_search._expand_to_beam_size", "model.beam_search._flatten_beam_dim", "<builtin>.enumerate", "tensorflow.compat.v1.get_variable", "tensorflow.compat.v1.variable_scope", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.LayerNormalization.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.LayerNormalization.build": ["mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.zeros_initializer", "tensorflow.compat.v1.ones_initializer", "tensorflow.compat.v1.get_variable"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.LayerNormalization.call": ["tensorflow.math.rsqrt", "tensorflow.square", "tensorflow.reduce_mean"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.PrePostProcessingWrapper.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.LayerNormalization.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.PrePostProcessingWrapper.__call__": ["tensorflow.cast", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.nn.dropout", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.LayerNormalization.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.EncoderStack.call": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.enumerate", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.DecoderStack.call": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.transformer.LayerNormalization.__init__", "<builtin>.enumerate", "tensorflow.compat.v1.variable_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.attention_layer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.attention_layer.Attention.__init__": ["<builtin>.ValueError", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.compat.v1.layers.Dense", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.attention_layer.Attention.split_heads": ["tensorflow.reshape", "tensorflow.transpose", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.attention_layer.Attention.combine_heads": ["tensorflow.reshape", "tensorflow.transpose", "tensorflow.shape", "tensorflow.compat.v1.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.attention_layer.Attention.call": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.attention_layer.Attention.combine_heads", "tensorflow.cast", "tensorflow.nn.dropout", "tensorflow.concat", "mlperf_compliance.mlperf_log.transformer_print", "tensorflow.nn.softmax", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.attention_layer.Attention.split_heads", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_mlperf.inference.int8.transformer.model.attention_layer.SelfAttention.call": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.optimization": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.optimization.create_optimizer": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.optimization.AdamWeightDecayOptimizer.apply_gradients", "tensorflow.contrib.tpu.CrossShardOptimizer", "tensorflow.compat.v1.trainable_variables", "<builtin>.zip", "tensorflow.group", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.gradients", "tensorflow.constant", "tensorflow.clip_by_global_norm", "tensorflow.compat.v1.train.polynomial_decay", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.optimization.AdamWeightDecayOptimizer.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.optimization.AdamWeightDecayOptimizer.__init__": ["<builtin>.super"], "tensorflow.gradients": [], "tensorflow.clip_by_global_norm": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.optimization.AdamWeightDecayOptimizer.apply_gradients": ["tensorflow.square", "tensorflow.sqrt", "tensorflow.group", "tensorflow.compat.v1.get_variable", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.optimization.AdamWeightDecayOptimizer._do_use_weight_decay", "tensorflow.zeros_initializer", "tensorflow.multiply", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.optimization.AdamWeightDecayOptimizer._get_variable_name"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.optimization.AdamWeightDecayOptimizer._get_variable_name": ["re.match"], "tensorflow.zeros_initializer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.optimization.AdamWeightDecayOptimizer._do_use_weight_decay": ["re.search"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.validate_case_matches_checkpoint": ["<builtin>.ValueError", "re.match"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.convert_to_unicode": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.printable_text": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.load_vocab": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.convert_to_unicode", "tensorflow.compat.v1.gfile.GFile", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.convert_by_vocab": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.convert_tokens_to_ids": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.convert_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.whitespace_tokenize": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.FullTokenizer.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.load_vocab", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.WordpieceTokenizer.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.WordpieceTokenizer.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.FullTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer.tokenize", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.WordpieceTokenizer.tokenize"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.whitespace_tokenize", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer._run_split_on_punc", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer._tokenize_chinese_chars", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer._clean_text", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer._run_strip_accents"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.WordpieceTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.convert_to_unicode", "<builtin>.len", "<builtin>.list", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.whitespace_tokenize"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.FullTokenizer.convert_tokens_to_ids": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.FullTokenizer.convert_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer._clean_text": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization._is_control", "<builtin>.ord", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization._is_whitespace"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer._tokenize_chinese_chars": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer._is_chinese_char", "<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer._run_strip_accents": ["unicodedata.category", "unicodedata.normalize"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer._run_split_on_punc": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization._is_punctuation", "<builtin>.list"], "unicodedata.normalize": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization._is_punctuation": ["unicodedata.category", "<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization.BasicTokenizer._is_chinese_char": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization._is_control": ["unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.tokenization._is_whitespace": ["unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier": ["tensorflow.compat.v1.flags.DEFINE_bool", "tensorflow.compat.v1.disable_v2_behavior", "tensorflow.compat.v1.flags.DEFINE_float", "tensorflow.compat.v1.flags.DEFINE_integer", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.flags.DEFINE_string"], "tensorflow.compat.v1.flags.DEFINE_string": [], "tensorflow.compat.v1.flags.DEFINE_bool": [], "tensorflow.compat.v1.flags.DEFINE_integer": [], "tensorflow.compat.v1.flags.DEFINE_float": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.LoggerHook.begin": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.LoggerHook.before_run": ["datetime.datetime.now"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.LoggerHook.after_run": ["<builtin>.print", "datetime.datetime.now"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.LoggerHook.end": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.InputExample.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.InputFeatures.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor.get_train_examples": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor.get_dev_examples": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor.get_test_examples": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor.get_labels": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor._read_tsv": ["tensorflow.compat.v1.gfile.Open", "csv.reader"], "tensorflow.compat.v1.gfile.Open": [], "csv.reader": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.XnliProcessor.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.XnliProcessor.get_train_examples": ["inference.fp32.tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor._read_tsv", "os.path.join", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.InputExample.__init__"], "inference.fp32.tokenization.convert_to_unicode": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.XnliProcessor.get_dev_examples": ["inference.fp32.tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor._read_tsv", "os.path.join", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.InputExample.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.XnliProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MnliProcessor.get_train_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MnliProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MnliProcessor._create_examples": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.InputExample.__init__", "inference.fp32.tokenization.convert_to_unicode", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MnliProcessor.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MnliProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MnliProcessor.get_test_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MnliProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MnliProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MrpcProcessor.get_train_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor._read_tsv", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MrpcProcessor._create_examples"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MrpcProcessor._create_examples": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.InputExample.__init__", "inference.fp32.tokenization.convert_to_unicode", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MrpcProcessor.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor._read_tsv", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MrpcProcessor._create_examples"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MrpcProcessor.get_test_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor._read_tsv", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MrpcProcessor._create_examples"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.MrpcProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.ColaProcessor.get_train_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor._read_tsv", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.ColaProcessor._create_examples"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.ColaProcessor._create_examples": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.InputExample.__init__", "inference.fp32.tokenization.convert_to_unicode", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.ColaProcessor.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor._read_tsv", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.ColaProcessor._create_examples"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.ColaProcessor.get_test_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.DataProcessor._read_tsv", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.ColaProcessor._create_examples"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.ColaProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.convert_single_example": ["<builtin>.len", "inference.fp32.tokenization.printable_text", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.InputFeatures.__init__", "<builtin>.enumerate", "<builtin>.str", "tensorflow.compat.v1.logging.info", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier._truncate_seq_pair"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier._truncate_seq_pair": ["<builtin>.len"], "inference.fp32.tokenization.printable_text": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.file_based_convert_examples_to_features": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.file_based_convert_examples_to_features.create_int_feature", "<builtin>.len", "tensorflow.compat.v1.python_io.TFRecordWriter", "<builtin>.enumerate", "collections.OrderedDict", "tensorflow.train.Features", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.convert_single_example", "tensorflow.train.Example", "<builtin>.int", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.file_based_convert_examples_to_features.create_int_feature": ["tensorflow.train.Feature", "<builtin>.list", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.file_based_input_fn_builder": ["tensorflow.io.FixedLenFeature"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.file_based_input_fn_builder._decode_record": ["tensorflow.io.parse_single_example", "tensorflow.compat.v1.to_int32", "<builtin>.list"], "tensorflow.compat.v1.to_int32": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.file_based_input_fn_builder.input_fn": ["tensorflow.data.TFRecordDataset", "tensorflow.compat.v1.data.experimental.map_and_batch_with_legacy_function"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.file_based_input_fn_builder.input_fn.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.file_based_input_fn_builder._decode_record"], "tensorflow.compat.v1.data.experimental.map_and_batch_with_legacy_function": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.create_model": ["tensorflow.nn.dropout", "tensorflow.reduce_sum", "tensorflow.compat.v1.truncated_normal_initializer", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "inference.fp32.modeling.BertModel", "tensorflow.compat.v1.zeros_initializer", "tensorflow.nn.softmax", "tensorflow.compat.v1.variable_scope", "tensorflow.nn.log_softmax", "tensorflow.nn.bias_add", "tensorflow.matmul"], "inference.fp32.modeling.BertModel": [], "tensorflow.compat.v1.truncated_normal_initializer": [], "tensorflow.nn.bias_add": [], "tensorflow.nn.log_softmax": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.model_fn_builder.model_fn": ["tensorflow.cast", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "tensorflow.compat.v1.train.init_from_checkpoint", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.create_model", "tensorflow.compat.v1.trainable_variables", "inference.fp32.optimization.create_optimizer", "tensorflow.shape", "inference.fp32.modeling.get_assignment_map_from_checkpoint", "tensorflow.ones", "tensorflow.compat.v1.logging.info", "<builtin>.sorted"], "inference.fp32.modeling.get_assignment_map_from_checkpoint": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.train.Scaffold", "tensorflow.train.init_from_checkpoint"], "tensorflow.train.init_from_checkpoint": [], "tensorflow.train.Scaffold": [], "tensorflow.compat.v1.train.init_from_checkpoint": [], "inference.fp32.optimization.create_optimizer": [], "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.model_fn_builder.model_fn.metric_fn": ["tensorflow.compat.v1.metrics.accuracy", "tensorflow.compat.v1.metrics.mean", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.input_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.input_fn_builder.input_fn": ["<builtin>.len", "tensorflow.constant", "tensorflow.data.Dataset.from_tensor_slices"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.convert_examples_to_features": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.convert_single_example", "<builtin>.len", "tensorflow.compat.v1.logging.info", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.main": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.file_based_input_fn_builder", "tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "tensorflow.compat.v1.gfile.GFile", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.model_fn_builder", "inference.fp32.tokenization.FullTokenizer", "tensorflow.compat.v1.gfile.MakeDirs", "<builtin>.ValueError", "tensorflow.compat.v1.flags.FLAGS.task_name.lower", "<builtin>.str", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.run_classifier.file_based_convert_examples_to_features", "<builtin>.sorted", "<builtin>.len", "os.path.join", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "inference.fp32.modeling.BertConfig.from_json_file", "tensorflow.contrib.cluster_resolver.TPUClusterResolver", "time.time", "<builtin>.int", "inference.fp32.tokenization.validate_case_matches_checkpoint", "<builtin>.enumerate"], "inference.fp32.tokenization.validate_case_matches_checkpoint": [], "inference.fp32.modeling.BertConfig.from_json_file": [], "tensorflow.compat.v1.flags.FLAGS.task_name.lower": [], "inference.fp32.tokenization.FullTokenizer": [], "tensorflow.compat.v1.estimator.tpu.TPUConfig": [], "tensorflow.compat.v1.estimator.tpu.RunConfig": [], "tensorflow.compat.v1.estimator.tpu.TPUEstimator": [], "tensorflow.compat.v1.flags.mark_flag_as_required": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertConfig.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertConfig.from_dict": ["six.iteritems", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertConfig.__init__"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertConfig.from_json_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertConfig.from_dict", "json.loads", "tensorflow.compat.v1.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertConfig.to_dict": ["copy.deepcopy"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertConfig.to_json_string": ["json.dumps", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertConfig.to_dict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertModel.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.embedding_postprocessor", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.get_activation", "copy.deepcopy", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.create_initializer", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.embedding_lookup", "tensorflow.compat.v1.layers.dense", "tensorflow.ones", "tensorflow.squeeze", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.get_shape_list", "tensorflow.compat.v1.variable_scope", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.create_attention_mask_from_input_mask", "tensorflow.zeros", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.transformer_model"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.get_shape_list": ["tensorflow.shape", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.assert_rank"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.embedding_lookup": ["tensorflow.expand_dims", "tensorflow.gather", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.create_initializer", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.get_shape_list", "tensorflow.reshape", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.embedding_postprocessor": ["<builtin>.range", "<builtin>.len", "tensorflow.compat.v1.assert_less_equal", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.create_initializer", "<builtin>.ValueError", "tensorflow.slice", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.get_shape_list", "tensorflow.control_dependencies", "tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.layer_norm_and_dropout", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.create_attention_mask_from_input_mask": ["tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.get_shape_list", "tensorflow.ones", "tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.get_activation": ["<builtin>.ValueError", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.transformer_model": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.reshape_from_matrix", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.create_initializer", "<builtin>.ValueError", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.attention_layer", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.get_shape_list", "tensorflow.compat.v1.variable_scope", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.reshape_to_matrix", "<builtin>.int", "tensorflow.compat.v1.layers.dense", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.dropout", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.layer_norm"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.create_initializer": ["tensorflow.compat.v1.truncated_normal_initializer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertModel.get_pooled_output": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertModel.get_sequence_output": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertModel.get_all_encoder_layers": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertModel.get_embedding_output": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.BertModel.get_embedding_table": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.gelu": ["numpy.sqrt", "tensorflow.tanh", "tensorflow.pow"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.get_assignment_map_from_checkpoint": ["tensorflow.train.list_variables", "re.match", "collections.OrderedDict"], "tensorflow.train.list_variables": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.dropout": ["tensorflow.nn.dropout"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.layer_norm": ["tensorflow.compat.v1.keras.layers.LayerNormalization.__init__", "tensorflow.compat.v1.get_variable", "tensorflow.compat.v1.variable_scope", "tensorflow.ones_initializer", "tensorflow.zeros_initializer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.layer_norm.bert_layer_norm.call": ["<builtin>.super"], "tensorflow.compat.v1.keras.layers.LayerNormalization.__init__": [], "tensorflow.ones_initializer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.layer_norm_and_dropout": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.layer_norm", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.dropout"], "tensorflow.compat.v1.assert_less_equal": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.attention_layer": ["tensorflow.cast", "tensorflow.expand_dims", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.create_initializer", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.attention_layer.transpose_for_scores", "tensorflow.transpose", "tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.get_shape_list", "math.sqrt", "<builtin>.float", "tensorflow.compat.v1.layers.dense", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.reshape_to_matrix", "tensorflow.nn.softmax", "tensorflow.multiply", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.dropout", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.attention_layer.transpose_for_scores": ["tensorflow.reshape", "tensorflow.transpose"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.reshape_to_matrix": ["<builtin>.ValueError", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.reshape_from_matrix": ["tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.get_shape_list", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.bert.inference.fp32.modeling.assert_rank": ["tensorflow.get_variable_scope", "<builtin>.str", "<builtin>.ValueError", "<builtin>.isinstance"], "tensorflow.get_variable_scope": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.compute_bleu": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.compute_bleu.UnicodeRegex.__init__", "tensorflow.compat.v1.logging.set_verbosity", "absl.app.run", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.compute_bleu.define_compute_bleu_flags"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.compute_bleu.UnicodeRegex.__init__": ["re.compile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.compute_bleu.UnicodeRegex.property_chars"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.compute_bleu.UnicodeRegex.property_chars": ["<builtin>.range", "six.unichr", "unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.compute_bleu.bleu_tokenize": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.compute_bleu.bleu_wrapper": ["utils.tokenizer.native_to_unicode", "<builtin>.len", "utils.metrics.compute_bleu", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.compute_bleu.bleu_tokenize", "tensorflow.io.gfile.GFile"], "utils.tokenizer.native_to_unicode": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.compute_bleu.main": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.compute_bleu.bleu_wrapper", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.compute_bleu.define_compute_bleu_flags": ["absl.flags.DEFINE_enum", "absl.flags.DEFINE_string", "official.utils.flags.core.help_wrap", "absl.flags.mark_flag_as_required"], "absl.flags.mark_flag_as_required": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.infer_ab": ["tensorflow.python.platform.app.run", "tensorflow.python.platform.flags.DEFINE_bool", "tensorflow.python.platform.flags.DEFINE_string", "tensorflow.python.platform.flags.DEFINE_integer"], "tensorflow.python.platform.flags.DEFINE_string": [], "tensorflow.python.platform.flags.DEFINE_bool": [], "tensorflow.python.platform.flags.DEFINE_integer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.infer_ab.input_generator_ts": ["<builtin>.len", "<builtin>.enumerate", "tensorflow.io.gfile.GFile", "utils.tokenizer.Subtokenizer", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.infer_ab.input_generator_ts.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.infer_ab.input_generator_ws": ["<builtin>.len", "<builtin>.enumerate", "tensorflow.io.gfile.GFile", "utils.tokenizer.Subtokenizer", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.infer_ab.input_generator_ws.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.infer_ab._trim_and_decode": ["<builtin>.list", "utils.tokenizer.Subtokenizer"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.infer_ab.main": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.infer_ab.input_generator_ts", "tensorflow.Graph", "<builtin>.len", "<builtin>.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.RunMetadata", "google.protobuf.text_format.Merge", "<builtin>.enumerate", "tensorflow.io.gfile.GFile", "tensorflow.import_graph_def", "time.time", "<builtin>.open", "timeit.default_timer", "tensorflow.compat.v1.Session", "tensorflow.core.framework.graph_pb2.GraphDef", "tensorflow.compat.v1.RunOptions", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.infer_ab._trim_and_decode"], "timeit.default_timer": [], "tensorflow.python.platform.app.run": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._pad_tensors_to_same_length": ["tensorflow.pad", "tensorflow.shape", "tensorflow.maximum", "tensorflow.name_scope"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.padded_cross_entropy_loss": ["tensorflow.cast", "tensorflow.nn.softmax_cross_entropy_with_logits_v2", "tensorflow.log", "tensorflow.to_float", "tensorflow.name_scope", "tensorflow.one_hot", "tensorflow.not_equal", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._pad_tensors_to_same_length"], "tensorflow.nn.softmax_cross_entropy_with_logits_v2": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._convert_to_eval_metric": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._convert_to_eval_metric.problem_metric_fn": ["tensorflow.metrics.mean", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.padded_accuracy_top5", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.padded_neg_log_perplexity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.padded_sequence_accuracy", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.padded_accuracy"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.padded_neg_log_perplexity": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.padded_cross_entropy_loss"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.padded_accuracy": ["tensorflow.variable_scope", "tensorflow.to_float", "tensorflow.not_equal", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._pad_tensors_to_same_length", "tensorflow.equal", "tensorflow.to_int32", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.padded_accuracy_top5": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.padded_accuracy_topk"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.padded_sequence_accuracy": ["<builtin>.range", "<builtin>.len", "<builtin>.list", "tensorflow.reduce_sum", "tensorflow.variable_scope", "tensorflow.to_float", "tensorflow.not_equal", "tensorflow.minimum", "tensorflow.constant", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._pad_tensors_to_same_length", "tensorflow.to_int32", "tensorflow.argmax"], "tensorflow.metrics.mean": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.get_eval_metrics": ["six.iteritems", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._convert_to_eval_metric", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._convert_to_eval_metric.problem_metric_fn"], "tensorflow.variable_scope": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.padded_accuracy_topk": ["tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.variable_scope", "tensorflow.to_float", "tensorflow.shape", "tensorflow.nn.top_k", "tensorflow.not_equal", "tensorflow.zeros_like", "tensorflow.minimum", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._pad_tensors_to_same_length", "tensorflow.equal", "tensorflow.to_int32"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.bleu_score": ["tensorflow.constant", "tensorflow.py_func", "tensorflow.to_int32", "tensorflow.argmax"], "tensorflow.py_func": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._get_ngrams_with_counter": ["collections.Counter", "<builtin>.len", "<builtin>.tuple", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.compute_bleu": ["<builtin>.dict", "<builtin>.len", "numpy.float32", "<builtin>.zip", "<builtin>.min", "<builtin>.sum", "six.moves.xrange", "math.exp", "<builtin>.float", "math.log", "<builtin>.max", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._get_ngrams_with_counter"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.rouge_2_fscore": ["tensorflow.constant", "tensorflow.py_func", "tensorflow.to_int32", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._get_ngrams": ["<builtin>.range", "<builtin>.set", "<builtin>.len", "<builtin>.tuple"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.rouge_n": ["<builtin>.len", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._get_ngrams", "numpy.mean", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.rouge_l_fscore": ["tensorflow.constant", "tensorflow.py_func", "tensorflow.to_int32", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics.rouge_l_sentence_level": ["<builtin>.len", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._f_lcs", "numpy.mean", "<builtin>.float", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._len_lcs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._len_lcs": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._lcs", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._f_lcs": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.metrics._lcs": ["<builtin>.dict", "<builtin>.len", "<builtin>.range", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer": ["six.unichr", "unicodedata.category", "six.moves.xrange", "<builtin>.set", "re.compile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.Subtokenizer.__init__": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._list_to_index_dict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._generate_alphabet_dict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._load_vocab_file", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._load_vocab_file": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.native_to_unicode", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._generate_alphabet_dict": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._list_to_index_dict": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.Subtokenizer.init_from_files": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._count_tokens", "<builtin>.len", "tensorflow.io.gfile.exists", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._generate_subtokens_with_target_vocab_size", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.Subtokenizer.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._save_vocab_file", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._generate_alphabet_dict", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._count_tokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.native_to_unicode", "collections.defaultdict", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._split_string_to_tokens", "<builtin>.int", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._generate_subtokens_with_target_vocab_size": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._generate_subtokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._save_vocab_file": ["tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._unicode_to_native"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.Subtokenizer.encode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._split_string_to_tokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.native_to_unicode", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.Subtokenizer._token_to_subtoken_ids"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.native_to_unicode": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._split_string_to_tokens": ["<builtin>.len", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.Subtokenizer._token_to_subtoken_ids": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._escape_token", "<builtin>.hash", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._split_token_to_subtokens"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._escape_token": ["<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._split_token_to_subtokens": ["<builtin>.len", "<builtin>.min", "six.moves.xrange"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.Subtokenizer.decode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.Subtokenizer._subtoken_ids_to_tokens", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._join_tokens_to_string", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._unicode_to_native"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer.Subtokenizer._subtoken_ids_to_tokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._unescape_token"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._join_tokens_to_string": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._unicode_to_native": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._unescape_token": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._unescape_token.match": ["six.unichr", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._generate_subtokens": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._count_and_gen_subtokens", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._list_to_index_dict", "six.moves.xrange", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._gen_new_subtoken_list", "<builtin>.list", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._generate_subtokens", "<builtin>.abs", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._generate_subtokens_with_target_vocab_size.bisect", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._count_and_gen_subtokens": ["<builtin>.len", "six.moves.xrange", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._escape_token", "six.iteritems", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._split_token_to_subtokens", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._filter_and_bucket_subtokens": ["six.iteritems", "<builtin>.len", "<builtin>.set"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._gen_new_subtoken_list": ["six.moves.xrange", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer._filter_and_bucket_subtokens", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer": ["tensorflow.io.gfile.GFile", "tempfile.NamedTemporaryFile", "official.transformer.utils.tokenizer.Subtokenizer"], "official.transformer.utils.tokenizer.Subtokenizer": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.SubtokenizerTest.test_encode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer", "tensorflow.test.TestCase.assertEqual"], "tensorflow.test.TestCase.assertEqual": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.SubtokenizerTest.test_decode": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer", "tensorflow.test.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.SubtokenizerTest.test_subtoken_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.SubtokenizerTest._init_subtokenizer", "tensorflow.test.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.StringHelperTest.test_split_string_to_tokens": ["official.transformer.utils.tokenizer._split_string_to_tokens", "tensorflow.test.TestCase.assertEqual"], "official.transformer.utils.tokenizer._split_string_to_tokens": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.StringHelperTest.test_join_tokens_to_string": ["official.transformer.utils.tokenizer._join_tokens_to_string", "tensorflow.test.TestCase.assertEqual"], "official.transformer.utils.tokenizer._join_tokens_to_string": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.StringHelperTest.test_escape_token": ["<builtin>.set", "official.transformer.utils.tokenizer._escape_token", "tensorflow.test.TestCase.assertEqual"], "official.transformer.utils.tokenizer._escape_token": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.StringHelperTest.test_unescape_token": ["official.transformer.utils.tokenizer._unescape_token", "tensorflow.test.TestCase.assertEqual"], "official.transformer.utils.tokenizer._unescape_token": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.StringHelperTest.test_list_to_index_dict": ["tensorflow.test.TestCase.assertDictEqual", "official.transformer.utils.tokenizer._list_to_index_dict"], "official.transformer.utils.tokenizer._list_to_index_dict": [], "tensorflow.test.TestCase.assertDictEqual": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.StringHelperTest.test_split_token_to_subtokens": ["official.transformer.utils.tokenizer._split_token_to_subtokens", "tensorflow.test.TestCase.assertEqual"], "official.transformer.utils.tokenizer._split_token_to_subtokens": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.StringHelperTest.test_generate_alphabet_dict": ["tensorflow.test.TestCase.assertIn", "official.transformer.utils.tokenizer._generate_alphabet_dict"], "official.transformer.utils.tokenizer._generate_alphabet_dict": [], "tensorflow.test.TestCase.assertIn": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.StringHelperTest.test_count_and_gen_subtokens": ["tensorflow.test.TestCase.assertDictEqual", "<builtin>.set", "tensorflow.test.TestCase.assertIsInstance", "official.transformer.utils.tokenizer._count_and_gen_subtokens"], "official.transformer.utils.tokenizer._count_and_gen_subtokens": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.StringHelperTest.test_filter_and_bucket_subtokens": ["<builtin>.len", "official.transformer.utils.tokenizer._filter_and_bucket_subtokens", "<builtin>.set", "tensorflow.test.TestCase.assertEqual", "collections.defaultdict"], "official.transformer.utils.tokenizer._filter_and_bucket_subtokens": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.StringHelperTest.test_gen_new_subtoken_list": ["<builtin>.len", "tensorflow.test.TestCase.assertIn", "tensorflow.test.TestCase.assertNotIn", "official.transformer.utils.tokenizer._gen_new_subtoken_list", "<builtin>.set", "tensorflow.test.TestCase.assertEqual", "collections.defaultdict"], "official.transformer.utils.tokenizer._gen_new_subtoken_list": [], "tensorflow.test.TestCase.assertNotIn": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.utils.tokenizer_test.StringHelperTest.test_generate_subtokens": ["tensorflow.test.TestCase.assertIn", "<builtin>.set", "official.transformer.utils.tokenizer._generate_subtokens", "tensorflow.test.TestCase.assertEqual"], "official.transformer.utils.tokenizer._generate_subtokens": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.hyperparams_flags": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.hyperparams_flags.define_common_hparams_flags": ["absl.flags.DEFINE_integer", "absl.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.hyperparams_flags.initialize_common_flags": ["official.utils.flags.core.define_device", "official.utils.flags.core.define_performance", "official.utils.flags.core.define_distribution", "absl.flags.DEFINE_string", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.hyperparams_flags.define_common_hparams_flags", "official.utils.flags.core.define_base"], "official.utils.flags.core.define_distribution": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.hyperparams_flags.strategy_flags_dict": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.hyperparams_flags.hparam_flags_dict": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._base": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._base.define_base": ["official.utils.flags._conventions.help_wrap", "absl.flags.DEFINE_integer", "absl.flags.DEFINE_float", "absl.flags.DEFINE_string", "absl.flags.DEFINE_list", "absl.flags.DEFINE_boolean"], "official.utils.flags._conventions.help_wrap": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._base.get_num_gpus": ["<builtin>.sum", "tensorflow.python.client.device_lib.list_local_devices"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.flags_test": ["unittest.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.flags_test.define_flags": ["official.utils.flags.core.define_base", "official.utils.flags.core.define_benchmark", "official.utils.flags.core.define_performance", "official.utils.flags.core.define_image"], "official.utils.flags.core.define_image": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.flags_test.BaseTester.setUpClass": ["<builtin>.super", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.flags_test.define_flags"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.flags_test.BaseTester.test_default_setting": ["<builtin>.dict", "official.utils.flags.core.set_defaults", "official.utils.flags.core.parse_flags", "absl.flags.FLAGS.get_flag_value"], "official.utils.flags.core.parse_flags": [], "absl.flags.FLAGS.get_flag_value": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.flags_test.BaseTester.test_benchmark_setting": ["<builtin>.dict", "official.utils.flags.core.set_defaults", "official.utils.flags.core.parse_flags", "absl.flags.FLAGS.get_flag_value"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.flags_test.BaseTester.test_booleans": ["official.utils.flags.core.parse_flags"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.flags_test.BaseTester.test_parse_dtype_info": ["unittest.TestCase.assertRaises", "official.utils.flags.core.get_loss_scale", "unittest.TestCase.assertEqual", "official.utils.flags.core.parse_flags", "official.utils.flags.core.get_tf_dtype"], "official.utils.flags.core.get_tf_dtype": [], "official.utils.flags.core.get_loss_scale": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.flags_test.BaseTester.test_get_nondefault_flags_as_str": ["<builtin>.dict", "official.utils.flags.core.set_defaults", "<builtin>.len", "unittest.TestCase.assertEqual", "official.utils.flags.core.get_nondefault_flags_as_str", "official.utils.flags.core.parse_flags"], "official.utils.flags.core.get_nondefault_flags_as_str": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.core": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.core.register_key_flags_in_core"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.core.set_defaults": ["absl.flags.FLAGS.set_default"], "absl.flags.FLAGS.set_default": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.core.parse_flags": ["absl.app.parse_flags_with_usage", "absl.flags.FLAGS.unparse_flags"], "absl.flags.FLAGS.unparse_flags": [], "absl.app.parse_flags_with_usage": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.core.register_key_flags_in_core": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.core.register_key_flags_in_core.core_fn": ["official.utils.flags._distribution.define_distribution", "official.utils.flags._misc.define_image", "absl.flags.declare_key_flag", "official.utils.flags._performance.define_performance", "official.utils.flags._benchmark.define_benchmark", "official.utils.flags._device.define_device", "official.utils.flags._base.define_base"], "official.utils.flags._device.define_device": [], "official.utils.flags._distribution.define_distribution": [], "official.utils.flags._misc.define_image": [], "official.utils.flags._base.define_base": [], "official.utils.flags._performance.define_performance": [], "official.utils.flags._benchmark.define_benchmark": [], "absl.flags.declare_key_flag": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.core._get_nondefault_flags_as_dict": ["<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.core.get_nondefault_flags_as_str": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags.core._get_nondefault_flags_as_dict", "<builtin>.isinstance", "<builtin>.sorted", "six.moves.shlex_quote"], "six.moves.shlex_quote": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._benchmark": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._benchmark.define_benchmark": ["absl.flags.multi_flags_validator", "official.utils.flags._conventions.help_wrap", "absl.flags.DEFINE_integer", "absl.flags.DEFINE_string", "absl.flags.DEFINE_enum"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._benchmark.define_benchmark._check_benchmark_log_dir": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._conventions": ["functools.partial", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._conventions._stdout_utf8"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._conventions._stdout_utf8": ["codecs.lookup"], "codecs.lookup": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._conventions.help_wrap": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._device": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._device.require_cloud_storage": ["absl.flags.multi_flags_validator"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._device.require_cloud_storage._path_check": ["tensorflow.compat.v1.logging.error"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._device.define_device": ["absl.flags.DEFINE_integer", "absl.flags.DEFINE_string", "official.utils.flags._conventions.help_wrap"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._performance": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._performance.get_tf_dtype": ["<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._performance.get_loss_scale": ["<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._performance.define_performance": ["absl.flags.validator", "absl.flags.multi_flags_validator", "official.utils.flags._conventions.help_wrap", "absl.flags.DEFINE_integer", "absl.flags.DEFINE_bool", "absl.flags.DEFINE_string", "absl.flags.DEFINE_boolean", "multiprocessing.cpu_count", "absl.flags.DEFINE_enum"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._performance.define_performance._check_loss_scale": ["<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._performance.define_performance._check_fp16_implementation": ["absl.flags.ValidationError"], "absl.flags.ValidationError": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._distribution": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._distribution.define_distribution": ["absl.flags.DEFINE_integer", "absl.flags.DEFINE_string", "official.utils.flags._conventions.help_wrap"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._misc": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.flags._misc.define_image": ["absl.flags.DEFINE_enum", "official.utils.flags._conventions.help_wrap"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper": ["<builtin>.dict"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper.get_train_hooks": ["<builtin>.ValueError", "tensorflow.compat.v1.logging.warning"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper.get_logging_tensor_hook": ["tensorflow.estimator.LoggingTensorHook"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper.get_profiler_hook": ["tensorflow.estimator.ProfilerHook"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper.get_examples_per_second_hook": ["official.utils.logs.hooks.ExamplesPerSecondHook", "official.utils.logs.logger.get_benchmark_logger"], "official.utils.logs.hooks.ExamplesPerSecondHook": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper.get_logging_metric_hook": ["official.utils.logs.logger.get_benchmark_logger", "official.utils.logs.metric_hook.LoggingMetricHook"], "official.utils.logs.metric_hook.LoggingMetricHook": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper.get_step_counter_hook": ["tensorflow.estimator.StepCounterHook"], "tensorflow.estimator.StepCounterHook": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks.ExamplesPerSecondHook.__init__": ["<builtin>.ValueError", "official.utils.logs.logger.BaseBenchmarkLogger", "tensorflow.estimator.SecondOrStepTimer"], "official.utils.logs.logger.BaseBenchmarkLogger": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks.ExamplesPerSecondHook.begin": ["<builtin>.RuntimeError", "tensorflow.compat.v1.train.get_global_step"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks.ExamplesPerSecondHook.before_run": ["tensorflow.estimator.SessionRunArgs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks.ExamplesPerSecondHook.after_run": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest.setUp": ["official.utils.testing.mock_lib.MockBenchmarkLogger", "<builtin>.super", "tensorflow.test.TestCase.get_temp_dir", "tempfile.mkdtemp"], "tensorflow.test.TestCase.get_temp_dir": [], "official.utils.testing.mock_lib.MockBenchmarkLogger": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest.tearDown": ["tensorflow.io.gfile.rmtree", "<builtin>.super", "tensorflow.test.TestCase.get_temp_dir"], "tensorflow.io.gfile.rmtree": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest.test_illegal_args": ["official.utils.logs.metric_hook.LoggingMetricHook", "tensorflow.test.TestCase.assertRaisesRegexp"], "tensorflow.test.TestCase.assertRaisesRegexp": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest.test_print_at_end_only": ["<builtin>.range", "<builtin>.len", "tensorflow.Graph", "tensorflow.compat.v1.global_variables_initializer", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.test.TestCase.assertRegexpMatches", "tensorflow.constant", "tensorflow.test.TestCase.assertEqual", "tensorflow.python.training.monitored_session._HookedSession", "tensorflow.compat.v1.Session", "official.utils.logs.metric_hook.LoggingMetricHook"], "tensorflow.python.training.monitored_session._HookedSession": [], "tensorflow.test.TestCase.assertRegexpMatches": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest.test_global_step_not_found": ["tensorflow.test.TestCase.assertRaisesRegexp", "tensorflow.Graph", "tensorflow.constant", "official.utils.logs.metric_hook.LoggingMetricHook"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest.test_log_tensors": ["<builtin>.range", "<builtin>.len", "tensorflow.Graph", "tensorflow.compat.v1.global_variables_initializer", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.test.TestCase.assertRegexpMatches", "<builtin>.str", "tensorflow.constant", "tensorflow.test.TestCase.assertEqual", "tensorflow.python.training.monitored_session._HookedSession", "tensorflow.compat.v1.Session", "official.utils.logs.metric_hook.LoggingMetricHook"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest._validate_print_every_n_steps": ["<builtin>.range", "tensorflow.compat.v1.global_variables_initializer", "tensorflow.test.TestCase.assertRegexpMatches", "tensorflow.constant", "tensorflow.test.TestCase.assertEqual", "tensorflow.python.training.monitored_session._HookedSession", "<builtin>.str", "official.utils.logs.metric_hook.LoggingMetricHook"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest.test_print_every_n_steps": ["tensorflow.compat.v1.Session", "tensorflow.Graph", "tensorflow.compat.v1.train.get_or_create_global_step", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest._validate_print_every_n_steps"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest.test_print_every_n_steps_and_end": ["tensorflow.compat.v1.Session", "tensorflow.Graph", "tensorflow.compat.v1.train.get_or_create_global_step", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest._validate_print_every_n_steps"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest._validate_print_every_n_secs": ["tensorflow.compat.v1.global_variables_initializer", "tensorflow.test.TestCase.assertRegexpMatches", "tensorflow.constant", "tensorflow.test.TestCase.assertEqual", "tensorflow.python.training.monitored_session._HookedSession", "time.sleep", "<builtin>.str", "official.utils.logs.metric_hook.LoggingMetricHook"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest.test_print_every_n_secs": ["tensorflow.compat.v1.Session", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest._validate_print_every_n_secs", "tensorflow.Graph", "tensorflow.compat.v1.train.get_or_create_global_step"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest.test_print_every_n_secs_and_end": ["tensorflow.compat.v1.Session", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook_test.LoggingMetricHookTest._validate_print_every_n_secs", "tensorflow.Graph", "tensorflow.compat.v1.train.get_or_create_global_step"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test.BaseTest.setUp": ["tensorflow.compat.v1.disable_eager_execution", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test.BaseTest.test_raise_in_non_list_names": ["official.utils.logs.hooks_helper.get_train_hooks", "unittest.TestCase.assertRaises"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test.BaseTest.test_raise_in_invalid_names": ["official.utils.logs.hooks_helper.get_train_hooks", "unittest.TestCase.assertRaises"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test.BaseTest.validate_train_hook_name": ["unittest.TestCase.assertEqual", "<builtin>.len", "official.utils.logs.hooks_helper.get_train_hooks", "unittest.TestCase.assertIsInstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test.BaseTest.test_get_train_hooks_logging_tensor_hook": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test.BaseTest.validate_train_hook_name"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test.BaseTest.test_get_train_hooks_profiler_hook": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test.BaseTest.validate_train_hook_name"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test.BaseTest.test_get_train_hooks_examples_per_second_hook": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test.BaseTest.validate_train_hook_name"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test.BaseTest.test_get_logging_metric_hook": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_helper_test.BaseTest.validate_train_hook_name"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.__init__", "os.geteuid", "tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.ncf_print", "os.getenv", "re.compile", "collections.namedtuple"], "os.geteuid": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.parse_line": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.unparse_line": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.get_mlperf_log": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.get_mlperf_log.test_mlperf_log_pip_version"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.get_mlperf_log.test_mlperf_log_pip_version": ["<builtin>.tuple", "pkg_resources.get_distribution", "tensorflow.compat.v1.logging.warning", "<builtin>.str", "<builtin>.int"], "pkg_resources.get_distribution": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.Tags.__init__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.Tags.__getattr__": ["<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.__init__": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.Tags.__init__", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.get_mlperf_log"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.__call__": ["<builtin>.ImportError"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.__enter__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.__exit__": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.log_file": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.enabled": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.ncf_print": ["mlperf_compliance.mlperf_log.ncf_print"], "mlperf_compliance.mlperf_log.ncf_print": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.Logger.set_ncf_root": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.mlperf_helper.clear_system_caches": ["<builtin>.ValueError", "subprocess.call"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook.LoggingMetricHook.__init__": ["<builtin>.ValueError", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook.LoggingMetricHook.begin": ["<builtin>.RuntimeError", "<builtin>.super", "tensorflow.compat.v1.train.get_global_step"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook.LoggingMetricHook.after_run": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook.LoggingMetricHook._log_metric"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook.LoggingMetricHook._log_metric": ["tensorflow.estimator.LoggingTensorHook._timer.update_last_triggered_step"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook.LoggingMetricHook.end": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.metric_hook.LoggingMetricHook._log_metric"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger": ["threading.Lock", "contextlib.contextmanager"], "threading.Lock": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.config_benchmark_logger": ["official.benchmark.benchmark_uploader.BigQueryUploader", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkBigQueryLogger.__init__", "<builtin>.hasattr", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkFileLogger.__init__", "uuid.uuid4", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkFileLogger.__init__": ["os.path.join", "<builtin>.super", "tensorflow.io.gfile.makedirs", "tensorflow.io.gfile.isdir", "tensorflow.io.gfile.GFile"], "official.benchmark.benchmark_uploader.BigQueryUploader": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkBigQueryLogger.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.get_benchmark_logger": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.config_benchmark_logger"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.benchmark_context": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkBigQueryLogger.on_finish", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkFileLogger.on_finish", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BaseBenchmarkLogger.on_finish", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.config_benchmark_logger"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkBigQueryLogger.on_finish": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BaseBenchmarkLogger.on_finish": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkFileLogger.on_finish": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BaseBenchmarkLogger.log_evaluation_result": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkFileLogger.log_metric", "<builtin>.type", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkBigQueryLogger.log_metric", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BaseBenchmarkLogger.log_metric", "tensorflow.compat.v1.logging.warning", "<builtin>.isinstance", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkBigQueryLogger.log_metric": ["six.moves._thread.start_new_thread", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._process_metric_to_json"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BaseBenchmarkLogger.log_metric": ["tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._process_metric_to_json"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkFileLogger.log_metric": ["tensorflow.compat.v1.logging.warning", "json.dump", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._process_metric_to_json"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._process_metric_to_json": ["<builtin>.type", "datetime.datetime.utcnow", "tensorflow.compat.v1.logging.warning", "<builtin>.float", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._convert_to_json_dict", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BaseBenchmarkLogger.log_run_info": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._gather_run_info", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._gather_run_info": ["datetime.datetime.utcnow", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_tensorflow_info", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_test_environment", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_memory_info", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_tensorflow_environment_variables", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_cpu_info", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_run_params"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkFileLogger.log_run_info": ["json.dump", "os.path.join", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._gather_run_info", "tensorflow.compat.v1.logging.warning", "tensorflow.io.gfile.GFile"], "six.moves._thread.start_new_thread": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger.BenchmarkBigQueryLogger.log_run_info": ["six.moves._thread.start_new_thread", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._gather_run_info"], "datetime.datetime.utcnow": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_tensorflow_info": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_tensorflow_environment_variables": ["<builtin>.sorted", "os.environ.items"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_run_params": ["<builtin>.sorted", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_run_params.process_param"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_cpu_info": ["tensorflow.compat.v1.logging.warn", "cpuinfo.get_cpu_info", "multiprocessing.cpu_count"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_memory_info": ["tensorflow.compat.v1.logging.warn", "psutil.virtual_memory"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_test_environment": ["official.utils.logs.cloud_lib.on_gcp"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._convert_to_json_dict": ["<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._collect_run_params.process_param": ["<builtin>.str", "<builtin>.type"], "official.utils.logs.cloud_lib.on_gcp": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger._parse_gpu_model": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test": ["tensorflow.test.main", "tensorflow.compat.v1.logging.set_verbosity"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest.setUp": ["tensorflow.Graph", "tensorflow.compat.v1.train.create_global_step", "tensorflow.compat.v1.train.get_global_step", "official.utils.testing.mock_lib.MockBenchmarkLogger", "tensorflow.compat.v1.assign_add"], "tensorflow.compat.v1.train.create_global_step": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest.test_raise_in_both_secs_and_steps": ["official.utils.logs.hooks.ExamplesPerSecondHook", "tensorflow.test.TestCase.assertRaises"], "tensorflow.test.TestCase.assertRaises": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest.test_raise_in_none_secs_and_steps": ["official.utils.logs.hooks.ExamplesPerSecondHook", "tensorflow.test.TestCase.assertRaises"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest._validate_log_every_n_steps": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest._assert_metrics", "official.utils.logs.hooks.ExamplesPerSecondHook", "tensorflow.compat.v1.train.MonitoredSession", "tensorflow.compat.v1.train.ChiefSessionCreator", "tensorflow.test.TestCase.assertFalse", "tensorflow.test.TestCase.assertEqual"], "tensorflow.compat.v1.train.ChiefSessionCreator": [], "tensorflow.compat.v1.train.MonitoredSession": [], "tensorflow.test.TestCase.assertFalse": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest._assert_metrics": ["tensorflow.test.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest.test_examples_per_sec_every_1_steps": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest._validate_log_every_n_steps"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest.test_examples_per_sec_every_5_steps": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest._validate_log_every_n_steps"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest.test_examples_per_sec_every_1_steps_with_warm_steps": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest._validate_log_every_n_steps"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest.test_examples_per_sec_every_5_steps_with_warm_steps": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest._validate_log_every_n_steps"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest._validate_log_every_n_secs": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest._assert_metrics", "official.utils.logs.hooks.ExamplesPerSecondHook", "tensorflow.compat.v1.train.MonitoredSession", "tensorflow.compat.v1.train.ChiefSessionCreator", "tensorflow.test.TestCase.assertFalse", "time.sleep"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest.test_examples_per_sec_every_1_secs": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest._validate_log_every_n_secs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest.test_examples_per_sec_every_5_secs": ["...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.hooks_test.ExamplesPerSecondHookTest._validate_log_every_n_secs"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.cloud_lib": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.cloud_lib.on_gcp": ["requests.get"], "requests.get": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.cloud_lib_test": ["unittest.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.cloud_lib_test.CloudLibTest": ["mock.patch"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.cloud_lib_test.CloudLibTest.test_on_gcp": ["mock.MagicMock", "unittest.TestCase.assertEqual", "official.utils.logs.cloud_lib.on_gcp"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.cloud_lib_test.CloudLibTest.test_not_on_gcp": ["unittest.TestCase.assertEqual", "requests.exceptions.ConnectionError", "official.utils.logs.cloud_lib.on_gcp"], "requests.exceptions.ConnectionError": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkLoggerTest.setUpClass": ["official.utils.flags.core.define_benchmark", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkLoggerTest.test_get_default_benchmark_logger": ["absl.testing.flagsaver.flagsaver", "tensorflow.test.TestCase.assertIsInstance", "official.utils.logs.logger.get_benchmark_logger"], "absl.testing.flagsaver.flagsaver": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkLoggerTest.test_config_base_benchmark_logger": ["absl.testing.flagsaver.flagsaver", "tensorflow.test.TestCase.assertIsInstance", "official.utils.logs.logger.get_benchmark_logger", "official.utils.logs.logger.config_benchmark_logger"], "official.utils.logs.logger.config_benchmark_logger": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkLoggerTest.test_config_benchmark_file_logger": ["absl.testing.flagsaver.flagsaver", "tensorflow.test.TestCase.assertIsInstance", "official.utils.logs.logger.get_benchmark_logger", "official.utils.logs.logger.config_benchmark_logger"], "unittest.skipIf": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkLoggerTest": ["mock.patch", "unittest.skipIf", "mock.patch.object"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkLoggerTest.test_config_benchmark_bigquery_logger": ["absl.testing.flagsaver.flagsaver", "tensorflow.test.TestCase.assertIsInstance", "official.utils.logs.logger.get_benchmark_logger", "official.utils.logs.logger.config_benchmark_logger"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkLoggerTest.test_benchmark_context": ["mock.MagicMock", "official.utils.logs.logger.benchmark_context", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkLoggerTest.test_benchmark_context_failure": ["mock.MagicMock", "<builtin>.RuntimeError", "official.utils.logs.logger.benchmark_context", "tensorflow.test.TestCase.assertRaises"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BaseBenchmarkLoggerTest.setUp": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BaseBenchmarkLoggerTest.setUp.mock_log": ["tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BaseBenchmarkLoggerTest.tearDown": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BaseBenchmarkLoggerTest.test_log_metric": ["<builtin>.str", "official.utils.logs.logger.BaseBenchmarkLogger", "tensorflow.test.TestCase.assertRegexpMatches"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.setUp": ["<builtin>.dict", "os.environ.clear", "<builtin>.super"], "os.environ.clear": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.tearDown": ["tensorflow.io.gfile.rmtree", "os.environ.clear", "<builtin>.super", "tensorflow.test.TestCase.get_temp_dir", "os.environ.update"], "os.environ.update": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.test_create_logging_dir": ["official.utils.logs.logger.BenchmarkFileLogger", "os.path.join", "tensorflow.test.TestCase.assertFalse", "tensorflow.test.TestCase.assertTrue", "tensorflow.test.TestCase.get_temp_dir", "tensorflow.io.gfile.isdir"], "official.utils.logs.logger.BenchmarkFileLogger": [], "tensorflow.test.TestCase.assertTrue": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.test_log_metric": ["tensorflow.io.gfile.exists", "official.utils.logs.logger.BenchmarkFileLogger", "tempfile.mkdtemp", "os.path.join", "json.loads", "tensorflow.test.TestCase.get_temp_dir", "tensorflow.test.TestCase.assertEqual", "tensorflow.test.TestCase.assertTrue", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.test_log_multiple_metrics": ["tensorflow.io.gfile.exists", "official.utils.logs.logger.BenchmarkFileLogger", "tempfile.mkdtemp", "os.path.join", "json.loads", "tensorflow.test.TestCase.get_temp_dir", "tensorflow.test.TestCase.assertEqual", "tensorflow.test.TestCase.assertTrue", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.test_log_non_number_value": ["tensorflow.io.gfile.exists", "official.utils.logs.logger.BenchmarkFileLogger", "tempfile.mkdtemp", "os.path.join", "tensorflow.test.TestCase.assertFalse", "tensorflow.test.TestCase.get_temp_dir", "tensorflow.constant"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.test_log_evaluation_result": ["tensorflow.io.gfile.exists", "official.utils.logs.logger.BenchmarkFileLogger", "tempfile.mkdtemp", "os.path.join", "json.loads", "tensorflow.test.TestCase.get_temp_dir", "tensorflow.test.TestCase.assertEqual", "tensorflow.test.TestCase.assertTrue", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.test_log_evaluation_result_with_invalid_type": ["tensorflow.io.gfile.exists", "official.utils.logs.logger.BenchmarkFileLogger", "tempfile.mkdtemp", "os.path.join", "tensorflow.test.TestCase.assertFalse", "tensorflow.test.TestCase.get_temp_dir"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest": ["mock.patch"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.test_log_run_info": ["tensorflow.io.gfile.exists", "official.utils.logs.logger.BenchmarkFileLogger", "tempfile.mkdtemp", "os.path.join", "json.loads", "tensorflow.test.TestCase.get_temp_dir", "tensorflow.test.TestCase.assertEqual", "tensorflow.test.TestCase.assertTrue", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.test_collect_tensorflow_info": ["tensorflow.test.TestCase.assertNotEqual", "official.utils.logs.logger._collect_tensorflow_info", "tensorflow.test.TestCase.assertEqual"], "official.utils.logs.logger._collect_tensorflow_info": [], "tensorflow.test.TestCase.assertNotEqual": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.test_collect_run_params": ["<builtin>.len", "official.utils.logs.logger._collect_run_params", "tensorflow.test.TestCase.assertIn", "tensorflow.constant", "tensorflow.test.TestCase.assertEqual"], "official.utils.logs.logger._collect_run_params": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.test_collect_tensorflow_environment_variables": ["tensorflow.test.TestCase.assertEqual", "tensorflow.test.TestCase.assertIsNotNone", "official.utils.logs.logger._collect_tensorflow_environment_variables"], "official.utils.logs.logger._collect_tensorflow_environment_variables": [], "tensorflow.test.TestCase.assertIsNotNone": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkFileLoggerTest.test_collect_memory_info": ["official.utils.logs.logger._collect_memory_info", "tensorflow.test.TestCase.assertIsNotNone"], "official.utils.logs.logger._collect_memory_info": [], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkBigQueryLoggerTest.setUp": ["<builtin>.dict", "os.environ.clear", "<builtin>.super", "mock.MagicMock"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkBigQueryLoggerTest.tearDown": ["tensorflow.io.gfile.rmtree", "os.environ.clear", "<builtin>.super", "tensorflow.test.TestCase.get_temp_dir", "os.environ.update"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkBigQueryLoggerTest.test_log_metric": ["time.sleep"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkBigQueryLoggerTest": ["mock.patch"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkBigQueryLoggerTest.test_log_run_info": ["time.sleep"], "...repos_filtered.IntelAI.models.models.language_translation.tensorflow.transformer_lt_official.inference.fp32.official.utils.logs.logger_test.BenchmarkBigQueryLoggerTest.test_on_finish": ["time.sleep"], "...repos_filtered.IntelAI.models.models.language_modeling": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier_with_tfhub": ["tensorflow.flags.DEFINE_string", "tensorflow.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run"], "tensorflow.flags.DEFINE_string": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier_with_tfhub.create_model": ["tensorflow_hub.Module", "<builtin>.dict", "tensorflow.nn.dropout", "tensorflow.reduce_sum", "tensorflow.compat.v1.truncated_normal_initializer", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "<builtin>.set", "tensorflow.compat.v1.zeros_initializer", "tensorflow.nn.softmax", "tensorflow.compat.v1.variable_scope", "tensorflow.nn.log_softmax", "tensorflow.nn.bias_add", "tensorflow.matmul"], "tensorflow_hub.Module": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier_with_tfhub.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier_with_tfhub.model_fn_builder.model_fn": ["tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier_with_tfhub.create_model", "optimization.create_optimizer", "tensorflow.compat.v1.logging.info", "<builtin>.sorted"], "optimization.create_optimizer": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier_with_tfhub.model_fn_builder.model_fn.metric_fn": ["tensorflow.compat.v1.metrics.accuracy", "tensorflow.compat.v1.metrics.mean", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier_with_tfhub.create_tokenizer_from_hub_module": ["tensorflow_hub.Module", "tensorflow.compat.v1.Session", "tensorflow.Graph", "tokenization.FullTokenizer"], "tokenization.FullTokenizer": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier_with_tfhub.main": ["tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "run_classifier.convert_examples_to_features", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info", "run_classifier.input_fn_builder", "run_classifier.file_based_input_fn_builder", "<builtin>.ValueError", "tensorflow.flags.FLAGS.task_name.lower", "tensorflow.io.gfile.makedirs", "<builtin>.str", "<builtin>.sorted", "<builtin>.len", "os.path.join", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "<builtin>.int", "run_classifier.file_based_convert_examples_to_features", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier_with_tfhub.create_tokenizer_from_hub_module", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier_with_tfhub.model_fn_builder"], "tensorflow.flags.FLAGS.task_name.lower": [], "run_classifier.convert_examples_to_features": [], "run_classifier.input_fn_builder": [], "run_classifier.file_based_convert_examples_to_features": [], "run_classifier.file_based_input_fn_builder": [], "tensorflow.flags.mark_flag_as_required": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.BertModelTester.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.BertModelTester.create_model": ["modeling.BertModel", "modeling.BertConfig", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.ids_tensor"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.ids_tensor": ["<builtin>.range", "random.Random", "tensorflow.constant"], "modeling.BertConfig": [], "modeling.BertModel": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.BertModelTester.check_output": ["tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.test_default": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.BertModelTester.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.run_tester"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.run_tester": ["tensorflow.compat.v1.global_variables_initializer", "tensorflow.group", "tensorflow.compat.v1.local_variables_initializer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.BertModelTester.create_model", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.BertModelTester.check_output", "tensorflow.test.TestCase.test_session", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.assert_all_tensors_reachable"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.test_config_to_json_string": ["modeling.BertConfig", "json.loads", "tensorflow.test.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.assert_all_tensors_reachable": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.get_unreachable_ops", "re.compile", "<builtin>.len", "tensorflow.test.TestCase.assertEqual"], "random.Random": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.get_unreachable_ops": ["<builtin>.str", "collections.defaultdict", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.flatten_recursive"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.flatten_recursive": ["six.iteritems", "<builtin>.isinstance", "<builtin>.list", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling_test.BertModelTest.flatten_recursive"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features": ["tensorflow.flags.DEFINE_string", "tensorflow.flags.DEFINE_bool", "tensorflow.flags.mark_flag_as_required", "tensorflow.flags.DEFINE_integer", "tensorflow.compat.v1.app.run"], "tensorflow.flags.DEFINE_integer": [], "tensorflow.flags.DEFINE_bool": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.InputExample.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.InputFeatures.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.input_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.input_fn_builder.input_fn": ["<builtin>.len", "tensorflow.constant", "tensorflow.data.Dataset.from_tensor_slices"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.model_fn_builder.model_fn": ["modeling.BertModel", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "tensorflow.compat.v1.train.init_from_checkpoint", "<builtin>.ValueError", "tensorflow.compat.v1.trainable_variables", "<builtin>.enumerate", "modeling.get_assignment_map_from_checkpoint", "tensorflow.compat.v1.logging.info"], "modeling.get_assignment_map_from_checkpoint": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.train.Scaffold"], "tensorflow.compat.v1.train.Scaffold": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.convert_examples_to_features": ["<builtin>.len", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.InputFeatures.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features._truncate_seq_pair", "tokenization.printable_text", "<builtin>.str", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features._truncate_seq_pair": ["<builtin>.len"], "tokenization.printable_text": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.read_examples": ["tensorflow.io.gfile.GFile", "re.match", "tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.InputExample.__init__"], "tokenization.convert_to_unicode": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.main": ["tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.input_fn_builder", "json.dumps", "tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.read_examples", "tensorflow.flags.FLAGS.layers.split", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.convert_examples_to_features", "collections.OrderedDict", "<builtin>.float", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "<builtin>.round", "<builtin>.int", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.extract_features.model_fn_builder", "codecs.getwriter", "<builtin>.enumerate", "modeling.BertConfig.from_json_file", "tokenization.FullTokenizer"], "tensorflow.flags.FLAGS.layers.split": [], "modeling.BertConfig.from_json_file": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization_test.OptimizationTest.test_adam": ["<builtin>.range", "tensorflow.square", "tensorflow.test.TestCase.assertAllClose", "tensorflow.compat.v1.constant_initializer", "tensorflow.compat.v1.trainable_variables", "<builtin>.zip", "tensorflow.compat.v1.global_variables_initializer", "tensorflow.group", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "optimization.AdamWeightDecayOptimizer", "tensorflow.compat.v1.local_variables_initializer", "tensorflow.gradients", "tensorflow.constant", "tensorflow.test.TestCase.test_session"], "tensorflow.compat.v1.constant_initializer": [], "optimization.AdamWeightDecayOptimizer": [], "tensorflow.test.TestCase.assertAllClose": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.create_optimizer": ["<builtin>.zip", "tensorflow.group", "tensorflow.math.equal", "tensorflow.compat.v1.train.Optimizer.compute_gradients", "tensorflow.compat.v1.train.polynomial_decay", "tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.AdamWeightDecayOptimizer.__init__", "tensorflow.compat.v1.trainable_variables", "tensorflow.constant", "tensorflow.clip_by_global_norm", "tensorflow.compat.v1.tpu.CrossShardOptimizer", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.zeros_initializer", "<builtin>.list", "tensorflow.cond", "tensorflow.identity", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.AdamWeightDecayOptimizer.apply_gradients", "<builtin>.enumerate", "tensorflow.compat.v1.get_variable", "tensorflow.gradients", "horovod.tensorflow.DistributedOptimizer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.AdamWeightDecayOptimizer.__init__": ["<builtin>.super"], "tensorflow.compat.v1.tpu.CrossShardOptimizer": [], "tensorflow.compat.v1.train.Optimizer.compute_gradients": [], "tensorflow.math.equal": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.create_optimizer.<lambda1>": ["tensorflow.ones_like"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.create_optimizer.<lambda2>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.create_optimizer.<lambda3>": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.create_optimizer.<lambda4>": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.create_optimizer.applyGrads": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.AdamWeightDecayOptimizer.apply_gradients", "<builtin>.zip", "tensorflow.convert_to_tensor", "horovod.tensorflow.allreduce", "<builtin>.isinstance", "<builtin>.list"], "horovod.tensorflow.allreduce": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.AdamWeightDecayOptimizer.apply_gradients": ["tensorflow.square", "tensorflow.sqrt", "tensorflow.group", "tensorflow.compat.v1.get_variable", "tensorflow.compat.v1.zeros_initializer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.AdamWeightDecayOptimizer._do_use_weight_decay", "tensorflow.multiply", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.AdamWeightDecayOptimizer._get_variable_name"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.create_optimizer.<lambda5>": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.create_optimizer.applyGrads"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.create_optimizer.<lambda6>": ["tensorflow.no_op"], "tensorflow.no_op": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.create_optimizer.<lambda7>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.create_optimizer.<lambda8>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.AdamWeightDecayOptimizer._get_variable_name": ["re.match"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.optimization.AdamWeightDecayOptimizer._do_use_weight_decay": ["re.search"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization_test.TokenizationTest.test_full_tokenizer": ["os.unlink", "tokenization.FullTokenizer", "tempfile.NamedTemporaryFile", "tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization_test.TokenizationTest.test_chinese": ["tokenization.BasicTokenizer", "tensorflow.test.TestCase.assertAllEqual"], "tokenization.BasicTokenizer": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization_test.TokenizationTest.test_basic_tokenizer_lower": ["tokenization.BasicTokenizer", "tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization_test.TokenizationTest.test_basic_tokenizer_no_lower": ["tokenization.BasicTokenizer", "tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization_test.TokenizationTest.test_wordpiece_tokenizer": ["tensorflow.test.TestCase.assertAllEqual", "tokenization.WordpieceTokenizer", "<builtin>.enumerate"], "tokenization.WordpieceTokenizer": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization_test.TokenizationTest.test_convert_tokens_to_ids": ["tensorflow.test.TestCase.assertAllEqual", "tokenization.convert_tokens_to_ids", "<builtin>.enumerate"], "tokenization.convert_tokens_to_ids": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization_test.TokenizationTest.test_is_whitespace": ["tokenization._is_whitespace", "tensorflow.test.TestCase.assertTrue", "tensorflow.test.TestCase.assertFalse"], "tokenization._is_whitespace": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization_test.TokenizationTest.test_is_control": ["tokenization._is_control", "tensorflow.test.TestCase.assertTrue", "tensorflow.test.TestCase.assertFalse"], "tokenization._is_control": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization_test.TokenizationTest.test_is_punctuation": ["tokenization._is_punctuation", "tensorflow.test.TestCase.assertTrue", "tensorflow.test.TestCase.assertFalse"], "tokenization._is_punctuation": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad": ["horovod.tensorflow.size", "tensorflow.compat.v1.flags.DEFINE_bool", "<builtin>.print", "tensorflow.compat.v1.flags.DEFINE_float", "tensorflow.compat.v1.flags.DEFINE_integer", "collections.namedtuple", "tensorflow.compat.v1.flags.mark_flag_as_required", "horovod.tensorflow.init", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.SquadExample.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.SquadExample.__str__": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.SquadExample.__repr__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.SquadExample.__repr__": ["tokenization.printable_text"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.InputFeatures.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.read_squad_examples": ["tokenization.whitespace_tokenize", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.SquadExample.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.read_squad_examples.is_whitespace", "<builtin>.ValueError", "tensorflow.compat.v1.logging.warning", "json.load", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.read_squad_examples.is_whitespace": ["<builtin>.ord"], "tokenization.whitespace_tokenize": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.convert_examples_to_features": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.InputFeatures.__init__", "<builtin>.len", "<builtin>.min", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.FeatureWriter.process_feature", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad._improve_answer_span", "<builtin>.enumerate", "six.iteritems", "collections.namedtuple", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad._check_is_max_context", "tokenization.printable_text", "<builtin>.str", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.main.append_feature", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad._improve_answer_span": ["<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad._check_is_max_context": ["<builtin>.min", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.main.append_feature": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.FeatureWriter.process_feature"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.FeatureWriter.process_feature": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.FeatureWriter.process_feature.create_int_feature", "tensorflow.train.Features", "tensorflow.train.Example", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.create_model": ["modeling.BertModel", "modeling.get_shape_list", "tensorflow.compat.v1.truncated_normal_initializer", "tensorflow.compat.v1.get_variable", "tensorflow.transpose", "tensorflow.compat.v1.zeros_initializer", "tensorflow.unstack", "tensorflow.reshape", "tensorflow.nn.bias_add", "tensorflow.matmul"], "modeling.get_shape_list": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.model_fn_builder.model_fn": ["tensorflow.cast", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.create_model", "modeling.get_shape_list", "tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.trainable_variables", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.model_fn_builder.model_fn.compute_loss", "<builtin>.ValueError", "tensorflow.compat.v1.tpu.bfloat16_scope", "generic_ops.logTheLossHook", "optimization.create_optimizer", "modeling.get_assignment_map_from_checkpoint", "tensorflow.compat.v1.logging.info", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.train.Scaffold"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.model_fn_builder.model_fn.compute_loss": ["tensorflow.one_hot", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.nn.log_softmax"], "generic_ops.logTheLossHook": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.input_fn_builder": ["tensorflow.io.FixedLenFeature"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.input_fn_builder._decode_record": ["tensorflow.cast", "tensorflow.io.parse_single_example", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.input_fn_builder.input_fn": ["tensorflow.data.TFRecordDataset", "tensorflow.data.experimental.map_and_batch"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.input_fn_builder.input_fn.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.input_fn_builder._decode_record"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.write_predictions": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad._get_best_indexes", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.get_final_text", "<builtin>.enumerate", "collections.OrderedDict", "tensorflow.io.gfile.GFile", "json.dumps", "collections.namedtuple", "<builtin>.sorted", "collections.defaultdict", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad._compute_softmax", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad._get_best_indexes": ["<builtin>.sorted", "<builtin>.len", "<builtin>.range", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.write_predictions.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.get_final_text": ["<builtin>.len", "tokenization.BasicTokenizer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.get_final_text._strip_spaces", "six.iteritems", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad._compute_softmax": ["math.exp"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.get_final_text._strip_spaces": ["<builtin>.len", "<builtin>.enumerate", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad._get_best_indexes.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.FeatureWriter.__init__": ["tensorflow.io.TFRecordWriter"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.FeatureWriter.process_feature.create_int_feature": ["tensorflow.train.Feature", "<builtin>.list", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.FeatureWriter.close": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.validate_flags_or_throw": ["tokenization.validate_case_matches_checkpoint", "<builtin>.ValueError", "tensorflow.compat.v1.disable_v2_behavior"], "tokenization.validate_case_matches_checkpoint": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.main": ["horovod.tensorflow.size", "tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "horovod.tensorflow.rank", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.validate_flags_or_throw", "tensorflow.compat.v1.logging.info", "tensorflow.io.gfile.makedirs", "<builtin>.float", "<builtin>.str", "<builtin>.len", "os.path.join", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.train.ProfilerHook", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "math.sqrt", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.FeatureWriter.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.input_fn_builder", "tensorflow.compat.v1.disable_eager_execution", "horovod.tensorflow.BroadcastGlobalVariablesHook", "<builtin>.int", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.write_predictions", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.FeatureWriter.close", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.read_squad_examples", "random.Random", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.model_fn_builder", "modeling.BertConfig.from_json_file", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_squad.convert_examples_to_features", "<builtin>.exit", "tokenization.FullTokenizer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.validate_case_matches_checkpoint": ["<builtin>.ValueError", "re.match"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.convert_to_unicode": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.printable_text": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.load_vocab": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.convert_to_unicode", "tensorflow.io.gfile.GFile", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.convert_by_vocab": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.convert_tokens_to_ids": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.convert_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.whitespace_tokenize": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.FullTokenizer.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.WordpieceTokenizer.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.load_vocab", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.WordpieceTokenizer.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.FullTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer.tokenize", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.WordpieceTokenizer.tokenize"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer._run_strip_accents", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer._clean_text", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer._run_split_on_punc", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.whitespace_tokenize", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer._tokenize_chinese_chars"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.WordpieceTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.convert_to_unicode", "<builtin>.len", "<builtin>.list", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.whitespace_tokenize"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.FullTokenizer.convert_tokens_to_ids": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.FullTokenizer.convert_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer._clean_text": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization._is_whitespace", "<builtin>.ord", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization._is_control"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer._tokenize_chinese_chars": ["<builtin>.ord", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer._is_chinese_char"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer._run_strip_accents": ["unicodedata.category", "unicodedata.normalize"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer._run_split_on_punc": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization._is_punctuation", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization._is_punctuation": ["unicodedata.category", "<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization.BasicTokenizer._is_chinese_char": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization._is_control": ["unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.tokenization._is_whitespace": ["unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining": ["horovod.tensorflow.size", "tensorflow.compat.v1.flags.DEFINE_bool", "<builtin>.print", "tensorflow.compat.v1.flags.DEFINE_float", "tensorflow.compat.v1.flags.DEFINE_integer", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run", "horovod.tensorflow.init", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.model_fn_builder.model_fn": ["modeling.BertModel", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.get_masked_lm_output", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "generic_ops.set_global_precision", "tensorflow.compat.v1.train.init_from_checkpoint", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.get_next_sentence_output", "tensorflow.compat.v1.trainable_variables", "<builtin>.ValueError", "tensorflow.compat.v1.tpu.bfloat16_scope", "generic_ops.logTheLossHook", "optimization.create_optimizer", "modeling.get_assignment_map_from_checkpoint", "tensorflow.compat.v1.logging.info", "<builtin>.sorted"], "generic_ops.set_global_precision": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.get_masked_lm_output": ["modeling.layer_norm", "tensorflow.reduce_sum", "modeling.get_activation", "modeling.create_initializer", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.get_variable", "tensorflow.reshape", "tensorflow.one_hot", "tensorflow.compat.v1.zeros_initializer", "generic_ops.i_cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.gather_indexes", "tensorflow.compat.v1.layers.dense", "tensorflow.nn.log_softmax", "tensorflow.nn.bias_add", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.get_next_sentence_output": ["tensorflow.reduce_sum", "modeling.create_initializer", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "generic_ops.i_cast", "tensorflow.compat.v1.zeros_initializer", "tensorflow.nn.log_softmax", "tensorflow.compat.v1.variable_scope", "tensorflow.reshape", "tensorflow.nn.bias_add", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.train.Scaffold"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.model_fn_builder.model_fn.metric_fn": ["tensorflow.reshape", "tensorflow.compat.v1.metrics.accuracy", "tensorflow.compat.v1.metrics.mean", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.gather_indexes": ["tensorflow.reshape", "modeling.get_shape_list", "tensorflow.range", "tensorflow.gather"], "modeling.get_activation": [], "modeling.create_initializer": [], "modeling.layer_norm": [], "generic_ops.i_cast": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.input_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.input_fn_builder.input_fn": ["<builtin>.len", "tensorflow.data.experimental.parallel_interleave", "tensorflow.io.FixedLenFeature", "<builtin>.min", "tensorflow.data.TFRecordDataset", "tensorflow.constant", "tensorflow.data.experimental.map_and_batch", "tensorflow.data.Dataset.from_tensor_slices"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.input_fn_builder.input_fn.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining._decode_record"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining._decode_record": ["tensorflow.cast", "tensorflow.io.parse_single_example", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.logBatchSizeInfo": ["<builtin>.str", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.main": ["horovod.tensorflow.size", "tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "horovod.tensorflow.rank", "tensorflow.compat.v1.disable_v2_behavior", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.input_fn_builder", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info", "tensorflow.compat.v1.flags.FLAGS.input_file.split", "generic_ops.set_global_precision", "<builtin>.ValueError", "tensorflow.io.gfile.makedirs", "<builtin>.str", "<builtin>.sorted", "os.path.join", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.train.ProfilerHook", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "math.sqrt", "horovod.tensorflow.BroadcastGlobalVariablesHook", "tensorflow.compat.v1.disable_eager_execution", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.logBatchSizeInfo", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_pretraining.model_fn_builder", "tensorflow.io.gfile.glob", "tensorflow.compat.v1.tpu.bfloat16_scope", "modeling.BertConfig.from_json_file"], "tensorflow.compat.v1.flags.FLAGS.input_file.split": [], "tensorflow.io.gfile.glob": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier": ["horovod.tensorflow.size", "tensorflow.compat.v1.flags.DEFINE_bool", "<builtin>.print", "tensorflow.compat.v1.flags.DEFINE_float", "tensorflow.compat.v1.flags.DEFINE_integer", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run", "horovod.tensorflow.init", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.InputExample.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.InputFeatures.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor.get_train_examples": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor.get_dev_examples": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor.get_test_examples": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor.get_labels": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor._read_tsv": ["tensorflow.io.gfile.GFile", "csv.reader"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.XnliProcessor.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.XnliProcessor.get_train_examples": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.InputExample.__init__", "tokenization.convert_to_unicode", "os.path.join", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.XnliProcessor.get_dev_examples": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.InputExample.__init__", "tokenization.convert_to_unicode", "os.path.join", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.XnliProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MnliProcessor.get_train_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MnliProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MnliProcessor._create_examples": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.InputExample.__init__", "tokenization.convert_to_unicode", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MnliProcessor.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MnliProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MnliProcessor.get_test_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MnliProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MnliProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MrpcProcessor.get_train_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MrpcProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MrpcProcessor._create_examples": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.InputExample.__init__", "tokenization.convert_to_unicode", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MrpcProcessor.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MrpcProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MrpcProcessor.get_test_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MrpcProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.MrpcProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.ColaProcessor.get_train_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.ColaProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.ColaProcessor._create_examples": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.InputExample.__init__", "tokenization.convert_to_unicode", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.ColaProcessor.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.ColaProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.ColaProcessor.get_test_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.ColaProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.ColaProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.convert_single_example": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.InputFeatures.__init__", "<builtin>.enumerate", "tokenization.printable_text", "<builtin>.str", "tensorflow.compat.v1.logging.info", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier._truncate_seq_pair"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier._truncate_seq_pair": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.file_based_convert_examples_to_features": ["<builtin>.len", "tensorflow.io.TFRecordWriter", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.convert_single_example", "<builtin>.enumerate", "collections.OrderedDict", "tensorflow.train.Features", "tensorflow.train.Example", "<builtin>.int", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.file_based_convert_examples_to_features.create_int_feature", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.file_based_convert_examples_to_features.create_int_feature": ["tensorflow.train.Feature", "<builtin>.list", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.file_based_input_fn_builder": ["tensorflow.io.FixedLenFeature"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.file_based_input_fn_builder._decode_record": ["tensorflow.cast", "tensorflow.io.parse_single_example", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.file_based_input_fn_builder.input_fn": ["tensorflow.data.TFRecordDataset", "tensorflow.data.experimental.map_and_batch"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.file_based_input_fn_builder.input_fn.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.file_based_input_fn_builder._decode_record"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.create_model": ["modeling.BertModel", "tensorflow.nn.dropout", "tensorflow.reduce_sum", "tensorflow.compat.v1.truncated_normal_initializer", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "tensorflow.compat.v1.zeros_initializer", "generic_ops.i_cast", "generic_ops.softmax", "tensorflow.compat.v1.variable_scope", "tensorflow.nn.log_softmax", "tensorflow.nn.bias_add", "tensorflow.matmul"], "generic_ops.softmax": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.create_model_top": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.create_model", "generic_ops.r_cast", "tensorflow.compat.v1.tpu.bfloat16_scope"], "generic_ops.r_cast": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.model_fn_builder.model_fn": ["tensorflow.cast", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "tensorflow.compat.v1.train.init_from_checkpoint", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.create_model_top", "tensorflow.compat.v1.trainable_variables", "tensorflow.shape", "tensorflow.ones", "generic_ops.logTheLossHook", "optimization.create_optimizer", "modeling.get_assignment_map_from_checkpoint", "tensorflow.compat.v1.logging.info", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.train.Scaffold"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.model_fn_builder.model_fn.metric_fn": ["tensorflow.compat.v1.metrics.accuracy", "tensorflow.compat.v1.metrics.mean", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.input_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.input_fn_builder.input_fn": ["<builtin>.len", "tensorflow.constant", "tensorflow.data.Dataset.from_tensor_slices"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.convert_examples_to_features": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.convert_single_example", "<builtin>.len", "tensorflow.compat.v1.logging.info", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.main": ["horovod.tensorflow.size", "tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "horovod.tensorflow.rank", "tensorflow.compat.v1.disable_v2_behavior", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.file_based_input_fn_builder", "tensorflow.io.gfile.makedirs", "tensorflow.compat.v1.flags.FLAGS.task_name.lower", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.file_based_convert_examples_to_features", "<builtin>.str", "<builtin>.sorted", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.run_classifier.model_fn_builder", "os.path.join", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.train.ProfilerHook", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "math.sqrt", "horovod.tensorflow.BroadcastGlobalVariablesHook", "tensorflow.compat.v1.disable_eager_execution", "<builtin>.int", "<builtin>.enumerate", "tokenization.validate_case_matches_checkpoint", "modeling.BertConfig.from_json_file", "<builtin>.exit", "tokenization.FullTokenizer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data": ["tensorflow.compat.v1.flags.DEFINE_bool", "tensorflow.compat.v1.flags.DEFINE_float", "collections.namedtuple", "tensorflow.compat.v1.flags.DEFINE_integer", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.TrainingInstance.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.TrainingInstance.__str__": ["<builtin>.str", "tokenization.printable_text"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.TrainingInstance.__repr__": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.TrainingInstance.__str__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.write_instance_to_example_files": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.create_float_feature", "<builtin>.len", "tensorflow.io.TFRecordWriter", "<builtin>.enumerate", "collections.OrderedDict", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.create_int_feature", "tensorflow.train.Features", "tensorflow.train.Example", "tokenization.printable_text", "<builtin>.str", "<builtin>.list", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.create_int_feature": ["tensorflow.train.Feature", "<builtin>.list", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.create_float_feature": ["tensorflow.train.Feature", "tensorflow.train.FloatList", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.create_training_instances": ["<builtin>.range", "<builtin>.len", "tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.create_instances_from_document", "tensorflow.io.gfile.GFile", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.create_instances_from_document": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.TrainingInstance.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.truncate_seq_pair", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.create_masked_lm_predictions"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.truncate_seq_pair": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.create_masked_lm_predictions": ["<builtin>.len", "<builtin>.min", "<builtin>.enumerate", "<builtin>.set", "<builtin>.round", "<builtin>.sorted", "<builtin>.int", "<builtin>.list", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.create_masked_lm_predictions.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.main": ["tensorflow.compat.v1.flags.FLAGS.input_file.split", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.io.gfile.glob", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.create_training_instances", "tensorflow.compat.v1.flags.FLAGS.output_file.split", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.create_pretraining_data.write_instance_to_example_files", "random.Random", "tokenization.FullTokenizer", "tensorflow.compat.v1.logging.info"], "tensorflow.compat.v1.flags.FLAGS.output_file.split": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops": ["tensorflow.keras.mixed_precision.Policy"], "tensorflow.keras.mixed_precision.Policy": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.set_global_precision": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.set_rprecision", "tensorflow.keras.mixed_precision.Policy"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.set_rprecision": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.get_keras_policy": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.set_global_flags": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.i_cast": ["tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.r_cast": ["tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.multiply": ["tensorflow.multiply", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.r_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.mzip": ["<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.r_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.tanh": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.r_cast", "tensorflow.tanh", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.i_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.softmax": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.r_cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.i_cast", "tensorflow.nn.softmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.layer_norm": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.get_keras_policy", "tensorflow.keras.layers.LayerNormalization"], "tensorflow.keras.layers.LayerNormalization": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.gelu": ["tensorflow.nn.gelu", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.r_cast", "numpy.sqrt", "tensorflow.tanh", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.i_cast", "tensorflow.pow"], "tensorflow.nn.gelu": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.generic_ops.logTheLossHook": ["tensorflow.compat.v1.train.LoggingTensorHook"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertConfig.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertConfig.from_dict": ["six.iteritems", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertConfig.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertConfig.from_json_file": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertConfig.from_dict", "tensorflow.io.gfile.GFile", "json.loads"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertConfig.to_dict": ["copy.deepcopy"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertConfig.to_json_string": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertConfig.to_dict", "json.dumps"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertConfig.set_additional_options": ["tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertConfig.new_scope_settings": ["tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertModel.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.transformer_model", "generic_ops.set_global_precision", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_shape_list", "copy.deepcopy", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.create_initializer", "tensorflow.compat.v1.layers.dense", "tensorflow.ones", "tensorflow.squeeze", "generic_ops.set_global_flags", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.embedding_lookup", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.embedding_postprocessor", "tensorflow.compat.v1.variable_scope", "tensorflow.zeros", "generic_ops.r_cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.create_attention_mask_from_input_mask", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_activation"], "generic_ops.set_global_flags": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_shape_list": ["tensorflow.shape", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.assert_rank"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.embedding_lookup": ["tensorflow.expand_dims", "tensorflow.gather", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_shape_list", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.create_initializer", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "tensorflow.reshape", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.embedding_postprocessor": ["<builtin>.range", "<builtin>.len", "tensorflow.compat.v1.assert_less_equal", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_shape_list", "tensorflow.slice", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.layer_norm_and_dropout", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.create_initializer", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "tensorflow.control_dependencies", "tensorflow.reshape", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.create_attention_mask_from_input_mask": ["tensorflow.reshape", "tensorflow.ones", "tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_shape_list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_activation": ["<builtin>.ValueError", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.transformer_model": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_shape_list", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.dropout", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.create_initializer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.attention_layer", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.reshape_to_matrix", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.reshape_from_matrix", "tensorflow.compat.v1.variable_scope", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.layer_norm", "<builtin>.int", "tensorflow.compat.v1.layers.dense"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.create_initializer": ["tensorflow.compat.v1.truncated_normal_initializer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertModel.get_pooled_output": ["tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertModel.get_sequence_output": ["tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertModel.get_all_encoder_layers": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertModel.get_embedding_output": ["generic_ops.r_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.BertModel.get_embedding_table": ["generic_ops.r_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_remaps": ["re.compile"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.apply_remaps": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.check_model_validity": ["<builtin>.ValueError", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_assignment_map_from_checkpoint": ["re.match", "tensorflow.train.list_variables", "collections.OrderedDict", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.apply_remaps", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.check_model_validity", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_remaps"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.dropout": ["tensorflow.nn.dropout"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.layer_norm": ["generic_ops.layer_norm"], "generic_ops.layer_norm": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.layer_norm_and_dropout": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.dropout", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.layer_norm"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.attention_layer": ["tensorflow.cast", "tensorflow.expand_dims", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_shape_list", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.attention_layer.transpose_for_scores", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.dropout", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.create_initializer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.reshape_to_matrix", "tensorflow.transpose", "math.sqrt", "generic_ops.softmax", "<builtin>.float", "tensorflow.compat.v1.layers.dense", "tensorflow.reshape", "tensorflow.multiply", "generic_ops.r_cast", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.attention_layer.transpose_for_scores": ["tensorflow.reshape", "tensorflow.transpose"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.reshape_to_matrix": ["<builtin>.ValueError", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.reshape_from_matrix": ["tensorflow.reshape", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.get_shape_list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.bfloat16.modeling.assert_rank": ["<builtin>.ValueError", "<builtin>.str", "<builtin>.isinstance", "tensorflow.compat.v1.get_variable_scope"], "tensorflow.compat.v1.get_variable_scope": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier_with_tfhub": ["tensorflow.flags.DEFINE_string", "tensorflow.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier_with_tfhub.create_model": ["tensorflow_hub.Module", "<builtin>.dict", "tensorflow.nn.dropout", "tensorflow.reduce_sum", "tensorflow.compat.v1.truncated_normal_initializer", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "<builtin>.set", "tensorflow.compat.v1.zeros_initializer", "tensorflow.nn.softmax", "tensorflow.compat.v1.variable_scope", "tensorflow.nn.log_softmax", "tensorflow.nn.bias_add", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier_with_tfhub.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier_with_tfhub.model_fn_builder.model_fn": ["tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "<builtin>.ValueError", "tensorflow.compat.v1.logging.info", "optimization.create_optimizer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier_with_tfhub.create_model", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier_with_tfhub.model_fn_builder.model_fn.metric_fn": ["tensorflow.compat.v1.metrics.accuracy", "tensorflow.compat.v1.metrics.mean", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier_with_tfhub.create_tokenizer_from_hub_module": ["tensorflow_hub.Module", "tensorflow.compat.v1.Session", "tensorflow.Graph", "tokenization.FullTokenizer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier_with_tfhub.main": ["tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "run_classifier.convert_examples_to_features", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info", "run_classifier.input_fn_builder", "run_classifier.file_based_input_fn_builder", "<builtin>.ValueError", "tensorflow.flags.FLAGS.task_name.lower", "tensorflow.io.gfile.makedirs", "<builtin>.str", "<builtin>.sorted", "<builtin>.len", "os.path.join", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier_with_tfhub.model_fn_builder", "<builtin>.int", "run_classifier.file_based_convert_examples_to_features", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier_with_tfhub.create_tokenizer_from_hub_module"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.BertModelTester.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.BertModelTester.create_model": ["modeling.BertModel", "modeling.BertConfig", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.ids_tensor"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.ids_tensor": ["<builtin>.range", "random.Random", "tensorflow.constant"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.BertModelTester.check_output": ["tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.test_default": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.run_tester", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.BertModelTester.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.run_tester": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.assert_all_tensors_reachable", "tensorflow.compat.v1.global_variables_initializer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.BertModelTester.create_model", "tensorflow.group", "tensorflow.compat.v1.local_variables_initializer", "tensorflow.test.TestCase.test_session", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.BertModelTester.check_output"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.test_config_to_json_string": ["modeling.BertConfig", "json.loads", "tensorflow.test.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.assert_all_tensors_reachable": ["<builtin>.len", "re.compile", "tensorflow.test.TestCase.assertEqual", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.get_unreachable_ops"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.get_unreachable_ops": ["<builtin>.str", "collections.defaultdict", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.flatten_recursive"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.flatten_recursive": ["six.iteritems", "<builtin>.isinstance", "<builtin>.list", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling_test.BertModelTest.flatten_recursive"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features": ["tensorflow.flags.DEFINE_string", "tensorflow.flags.DEFINE_bool", "tensorflow.flags.mark_flag_as_required", "tensorflow.flags.DEFINE_integer", "tensorflow.compat.v1.app.run"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.InputExample.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.InputFeatures.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.input_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.input_fn_builder.input_fn": ["<builtin>.len", "tensorflow.constant", "tensorflow.data.Dataset.from_tensor_slices"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.model_fn_builder.model_fn": ["modeling.BertModel", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "tensorflow.compat.v1.train.init_from_checkpoint", "<builtin>.ValueError", "tensorflow.compat.v1.trainable_variables", "<builtin>.enumerate", "modeling.get_assignment_map_from_checkpoint", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.train.Scaffold"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.convert_examples_to_features": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features._truncate_seq_pair", "<builtin>.enumerate", "tokenization.printable_text", "<builtin>.str", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.InputFeatures.__init__", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features._truncate_seq_pair": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.read_examples": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.InputExample.__init__", "tensorflow.io.gfile.GFile", "re.match", "tokenization.convert_to_unicode"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.main": ["tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "json.dumps", "tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.read_examples", "tensorflow.flags.FLAGS.layers.split", "collections.OrderedDict", "<builtin>.float", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.model_fn_builder", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.convert_examples_to_features", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "<builtin>.round", "<builtin>.int", "codecs.getwriter", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.extract_features.input_fn_builder", "<builtin>.enumerate", "modeling.BertConfig.from_json_file", "tokenization.FullTokenizer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization_test.OptimizationTest.test_adam": ["<builtin>.range", "tensorflow.square", "tensorflow.test.TestCase.assertAllClose", "tensorflow.compat.v1.constant_initializer", "tensorflow.compat.v1.trainable_variables", "<builtin>.zip", "tensorflow.compat.v1.global_variables_initializer", "tensorflow.group", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "optimization.AdamWeightDecayOptimizer", "tensorflow.compat.v1.local_variables_initializer", "tensorflow.gradients", "tensorflow.constant", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.create_optimizer": ["<builtin>.zip", "tensorflow.group", "tensorflow.math.equal", "tensorflow.compat.v1.train.Optimizer.compute_gradients", "tensorflow.compat.v1.train.polynomial_decay", "tensorflow.cast", "tensorflow.compat.v1.trainable_variables", "tensorflow.constant", "tensorflow.clip_by_global_norm", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.AdamWeightDecayOptimizer.__init__", "tensorflow.compat.v1.tpu.CrossShardOptimizer", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.zeros_initializer", "<builtin>.list", "tensorflow.cond", "tensorflow.identity", "<builtin>.enumerate", "tensorflow.compat.v1.get_variable", "tensorflow.gradients", "horovod.tensorflow.DistributedOptimizer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.AdamWeightDecayOptimizer.apply_gradients"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.AdamWeightDecayOptimizer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.create_optimizer.<lambda1>": ["tensorflow.ones_like"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.create_optimizer.<lambda2>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.create_optimizer.<lambda3>": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.create_optimizer.<lambda4>": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.create_optimizer.applyGrads": ["<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.AdamWeightDecayOptimizer.apply_gradients", "tensorflow.convert_to_tensor", "horovod.tensorflow.allreduce", "<builtin>.isinstance", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.AdamWeightDecayOptimizer.apply_gradients": ["tensorflow.square", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.AdamWeightDecayOptimizer._do_use_weight_decay", "tensorflow.sqrt", "tensorflow.group", "tensorflow.compat.v1.get_variable", "tensorflow.compat.v1.zeros_initializer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.AdamWeightDecayOptimizer._get_variable_name", "tensorflow.multiply"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.create_optimizer.<lambda5>": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.create_optimizer.applyGrads"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.create_optimizer.<lambda6>": ["tensorflow.no_op"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.create_optimizer.<lambda7>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.create_optimizer.<lambda8>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.AdamWeightDecayOptimizer._get_variable_name": ["re.match"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.optimization.AdamWeightDecayOptimizer._do_use_weight_decay": ["re.search"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization_test.TokenizationTest.test_full_tokenizer": ["os.unlink", "tokenization.FullTokenizer", "tempfile.NamedTemporaryFile", "tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization_test.TokenizationTest.test_chinese": ["tokenization.BasicTokenizer", "tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization_test.TokenizationTest.test_basic_tokenizer_lower": ["tokenization.BasicTokenizer", "tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization_test.TokenizationTest.test_basic_tokenizer_no_lower": ["tokenization.BasicTokenizer", "tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization_test.TokenizationTest.test_wordpiece_tokenizer": ["tensorflow.test.TestCase.assertAllEqual", "tokenization.WordpieceTokenizer", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization_test.TokenizationTest.test_convert_tokens_to_ids": ["tensorflow.test.TestCase.assertAllEqual", "tokenization.convert_tokens_to_ids", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization_test.TokenizationTest.test_is_whitespace": ["tokenization._is_whitespace", "tensorflow.test.TestCase.assertTrue", "tensorflow.test.TestCase.assertFalse"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization_test.TokenizationTest.test_is_control": ["tokenization._is_control", "tensorflow.test.TestCase.assertTrue", "tensorflow.test.TestCase.assertFalse"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization_test.TokenizationTest.test_is_punctuation": ["tokenization._is_punctuation", "tensorflow.test.TestCase.assertTrue", "tensorflow.test.TestCase.assertFalse"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad": ["horovod.tensorflow.size", "tensorflow.compat.v1.flags.DEFINE_bool", "<builtin>.print", "tensorflow.compat.v1.flags.DEFINE_float", "tensorflow.compat.v1.flags.DEFINE_integer", "collections.namedtuple", "tensorflow.compat.v1.flags.mark_flag_as_required", "horovod.tensorflow.init", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.SquadExample.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.SquadExample.__str__": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.SquadExample.__repr__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.SquadExample.__repr__": ["tokenization.printable_text"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.InputFeatures.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.read_squad_examples": ["tokenization.whitespace_tokenize", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.SquadExample.__init__", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.read_squad_examples.is_whitespace", "tensorflow.compat.v1.logging.warning", "json.load", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.read_squad_examples.is_whitespace": ["<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.convert_examples_to_features": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.InputFeatures.__init__", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.main.append_feature", "<builtin>.min", "<builtin>.enumerate", "six.iteritems", "collections.namedtuple", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.FeatureWriter.process_feature", "tokenization.printable_text", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad._check_is_max_context", "<builtin>.str", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad._improve_answer_span", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad._improve_answer_span": ["<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad._check_is_max_context": ["<builtin>.min", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.FeatureWriter.process_feature": ["tensorflow.train.Features", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.FeatureWriter.process_feature.create_int_feature", "tensorflow.train.Example", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.main.append_feature": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.FeatureWriter.process_feature"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.create_model": ["modeling.BertModel", "modeling.get_shape_list", "tensorflow.compat.v1.truncated_normal_initializer", "tensorflow.compat.v1.get_variable", "tensorflow.transpose", "tensorflow.compat.v1.zeros_initializer", "tensorflow.unstack", "tensorflow.reshape", "tensorflow.nn.bias_add", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.model_fn_builder.model_fn": ["tensorflow.cast", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "modeling.get_shape_list", "tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.trainable_variables", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.create_model", "<builtin>.ValueError", "tensorflow.compat.v1.tpu.bfloat16_scope", "generic_ops.logTheLossHook", "optimization.create_optimizer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.model_fn_builder.model_fn.compute_loss", "modeling.get_assignment_map_from_checkpoint", "tensorflow.compat.v1.logging.info", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.train.Scaffold"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.model_fn_builder.model_fn.compute_loss": ["tensorflow.one_hot", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.nn.log_softmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.input_fn_builder": ["tensorflow.io.FixedLenFeature"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.input_fn_builder._decode_record": ["tensorflow.cast", "tensorflow.io.parse_single_example", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.input_fn_builder.input_fn": ["tensorflow.data.TFRecordDataset", "tensorflow.data.experimental.map_and_batch"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.input_fn_builder.input_fn.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.input_fn_builder._decode_record"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.write_predictions": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.get_final_text", "<builtin>.len", "<builtin>.enumerate", "collections.OrderedDict", "tensorflow.io.gfile.GFile", "json.dumps", "collections.namedtuple", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad._get_best_indexes", "<builtin>.sorted", "collections.defaultdict", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad._compute_softmax", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad._get_best_indexes": ["<builtin>.sorted", "<builtin>.len", "<builtin>.range", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.write_predictions.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.get_final_text": ["<builtin>.len", "tokenization.BasicTokenizer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.get_final_text._strip_spaces", "six.iteritems", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad._compute_softmax": ["math.exp"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.get_final_text._strip_spaces": ["<builtin>.len", "<builtin>.enumerate", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad._get_best_indexes.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.FeatureWriter.__init__": ["tensorflow.io.TFRecordWriter"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.FeatureWriter.process_feature.create_int_feature": ["tensorflow.train.Feature", "<builtin>.list", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.FeatureWriter.close": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.validate_flags_or_throw": ["tokenization.validate_case_matches_checkpoint", "<builtin>.ValueError", "tensorflow.compat.v1.disable_v2_behavior"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.main": ["horovod.tensorflow.size", "tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "horovod.tensorflow.rank", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.validate_flags_or_throw", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.model_fn_builder", "tensorflow.io.gfile.makedirs", "<builtin>.float", "<builtin>.str", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.convert_examples_to_features", "<builtin>.len", "os.path.join", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.train.ProfilerHook", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "math.sqrt", "horovod.tensorflow.BroadcastGlobalVariablesHook", "tensorflow.compat.v1.disable_eager_execution", "<builtin>.int", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.write_predictions", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.FeatureWriter.close", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.FeatureWriter.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.read_squad_examples", "random.Random", "modeling.BertConfig.from_json_file", "<builtin>.exit", "tokenization.FullTokenizer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_squad.input_fn_builder"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.validate_case_matches_checkpoint": ["<builtin>.ValueError", "re.match"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.convert_to_unicode": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.printable_text": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.load_vocab": ["tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.convert_to_unicode", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.convert_by_vocab": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.convert_tokens_to_ids": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.convert_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.whitespace_tokenize": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.FullTokenizer.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.load_vocab", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.WordpieceTokenizer.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.WordpieceTokenizer.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.FullTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer.tokenize", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.WordpieceTokenizer.tokenize"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer._tokenize_chinese_chars", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer._run_split_on_punc", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer._run_strip_accents", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.whitespace_tokenize", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer._clean_text"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.WordpieceTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.whitespace_tokenize", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.convert_to_unicode", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.FullTokenizer.convert_tokens_to_ids": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.FullTokenizer.convert_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer._clean_text": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization._is_control", "<builtin>.ord", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization._is_whitespace"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer._tokenize_chinese_chars": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer._is_chinese_char", "<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer._run_strip_accents": ["unicodedata.category", "unicodedata.normalize"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer._run_split_on_punc": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization._is_punctuation", "<builtin>.len", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization._is_punctuation": ["unicodedata.category", "<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization.BasicTokenizer._is_chinese_char": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization._is_control": ["unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.tokenization._is_whitespace": ["unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining": ["horovod.tensorflow.size", "tensorflow.compat.v1.flags.DEFINE_bool", "<builtin>.print", "tensorflow.compat.v1.flags.DEFINE_float", "tensorflow.compat.v1.flags.DEFINE_integer", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run", "horovod.tensorflow.init", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.model_fn_builder.model_fn": ["modeling.BertModel", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.get_next_sentence_output", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.trainable_variables", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.get_masked_lm_output", "generic_ops.logTheLossHook", "optimization.create_optimizer", "modeling.get_assignment_map_from_checkpoint", "tensorflow.compat.v1.logging.info", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.get_masked_lm_output": ["modeling.layer_norm", "generic_ops.matmul", "tensorflow.reduce_sum", "modeling.get_activation", "modeling.create_initializer", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.get_variable", "tensorflow.reshape", "tensorflow.one_hot", "tensorflow.compat.v1.zeros_initializer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.gather_indexes", "generic_ops.i_cast", "tensorflow.compat.v1.layers.dense", "tensorflow.nn.log_softmax", "tensorflow.nn.bias_add"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.get_next_sentence_output": ["generic_ops.matmul", "tensorflow.reduce_sum", "modeling.create_initializer", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "tensorflow.compat.v1.zeros_initializer", "generic_ops.i_cast", "tensorflow.nn.log_softmax", "tensorflow.compat.v1.variable_scope", "tensorflow.reshape", "tensorflow.nn.bias_add"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.train.Scaffold"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.model_fn_builder.model_fn.metric_fn": ["tensorflow.reshape", "tensorflow.compat.v1.metrics.accuracy", "tensorflow.compat.v1.metrics.mean", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.gather_indexes": ["tensorflow.reshape", "modeling.get_shape_list", "tensorflow.range", "tensorflow.gather"], "generic_ops.matmul": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.input_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.input_fn_builder.input_fn": ["<builtin>.len", "tensorflow.data.experimental.parallel_interleave", "tensorflow.io.FixedLenFeature", "<builtin>.min", "tensorflow.data.TFRecordDataset", "tensorflow.constant", "tensorflow.data.experimental.map_and_batch", "tensorflow.data.Dataset.from_tensor_slices"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.input_fn_builder.input_fn.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining._decode_record"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining._decode_record": ["tensorflow.cast", "tensorflow.io.parse_single_example", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.logBatchSizeInfo": ["<builtin>.str", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.main": ["horovod.tensorflow.size", "tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "<builtin>.print", "horovod.tensorflow.rank", "tensorflow.compat.v1.disable_v2_behavior", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.input_fn_builder", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info", "tensorflow.compat.v1.flags.FLAGS.input_file.split", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.model_fn_builder", "tensorflow.io.gfile.makedirs", "<builtin>.str", "<builtin>.sorted", "os.path.join", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.train.ProfilerHook", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "math.sqrt", "horovod.tensorflow.BroadcastGlobalVariablesHook", "tensorflow.compat.v1.disable_eager_execution", "tensorflow.io.gfile.glob", "tensorflow.compat.v1.tpu.bfloat16_scope", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_pretraining.logBatchSizeInfo", "modeling.BertConfig.from_json_file", "generic_ops.set_rprecision"], "generic_ops.set_rprecision": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier": ["horovod.tensorflow.size", "tensorflow.compat.v1.flags.DEFINE_bool", "<builtin>.print", "tensorflow.compat.v1.flags.DEFINE_float", "tensorflow.compat.v1.flags.DEFINE_integer", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run", "horovod.tensorflow.init", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.InputExample.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.InputFeatures.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor.get_train_examples": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor.get_dev_examples": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor.get_test_examples": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor.get_labels": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor._read_tsv": ["tensorflow.io.gfile.GFile", "csv.reader"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.XnliProcessor.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.XnliProcessor.get_train_examples": ["tokenization.convert_to_unicode", "os.path.join", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.InputExample.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.XnliProcessor.get_dev_examples": ["tokenization.convert_to_unicode", "os.path.join", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.InputExample.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.XnliProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MnliProcessor.get_train_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MnliProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MnliProcessor._create_examples": ["tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.InputExample.__init__", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MnliProcessor.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MnliProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MnliProcessor.get_test_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MnliProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MnliProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MrpcProcessor.get_train_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MrpcProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MrpcProcessor._create_examples": ["tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.InputExample.__init__", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MrpcProcessor.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MrpcProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MrpcProcessor.get_test_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MrpcProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.MrpcProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.ColaProcessor.get_train_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.ColaProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.ColaProcessor._create_examples": ["tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.InputExample.__init__", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.ColaProcessor.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.ColaProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.ColaProcessor.get_test_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.ColaProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.ColaProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.convert_single_example": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier._truncate_seq_pair", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.InputFeatures.__init__", "<builtin>.enumerate", "tokenization.printable_text", "<builtin>.str", "<builtin>.isinstance", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier._truncate_seq_pair": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.file_based_convert_examples_to_features": ["<builtin>.len", "tensorflow.io.TFRecordWriter", "<builtin>.enumerate", "collections.OrderedDict", "tensorflow.train.Features", "tensorflow.train.Example", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.file_based_convert_examples_to_features.create_int_feature", "<builtin>.int", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.convert_single_example", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.file_based_convert_examples_to_features.create_int_feature": ["tensorflow.train.Feature", "<builtin>.list", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.file_based_input_fn_builder": ["tensorflow.io.FixedLenFeature"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.file_based_input_fn_builder._decode_record": ["tensorflow.cast", "tensorflow.io.parse_single_example", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.file_based_input_fn_builder.input_fn": ["tensorflow.data.TFRecordDataset", "tensorflow.data.experimental.map_and_batch"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.file_based_input_fn_builder.input_fn.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.file_based_input_fn_builder._decode_record"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.create_model": ["modeling.BertModel", "tensorflow.nn.dropout", "generic_ops.matmul", "tensorflow.reduce_sum", "tensorflow.compat.v1.truncated_normal_initializer", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "tensorflow.compat.v1.zeros_initializer", "generic_ops.softmax", "tensorflow.nn.log_softmax", "tensorflow.compat.v1.variable_scope", "tensorflow.nn.bias_add"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.create_model_top": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.create_model", "tensorflow.contrib.tpu.bfloat16_scope", "generic_ops.r_cast"], "tensorflow.contrib.tpu.bfloat16_scope": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.model_fn_builder.model_fn": ["tensorflow.cast", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "tensorflow.compat.v1.train.init_from_checkpoint", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.create_model_top", "tensorflow.compat.v1.trainable_variables", "tensorflow.shape", "tensorflow.ones", "generic_ops.logTheLossHook", "optimization.create_optimizer", "modeling.get_assignment_map_from_checkpoint", "tensorflow.compat.v1.logging.info", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.train.Scaffold"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.model_fn_builder.model_fn.metric_fn": ["tensorflow.compat.v1.metrics.accuracy", "tensorflow.compat.v1.metrics.mean", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.input_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.input_fn_builder.input_fn": ["<builtin>.len", "tensorflow.constant", "tensorflow.data.Dataset.from_tensor_slices"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.convert_examples_to_features": ["<builtin>.len", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.convert_single_example", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.main": ["horovod.tensorflow.size", "tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "horovod.tensorflow.rank", "tensorflow.compat.v1.disable_v2_behavior", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.file_based_input_fn_builder", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info", "<builtin>.ValueError", "tensorflow.io.gfile.makedirs", "tensorflow.compat.v1.flags.FLAGS.task_name.lower", "<builtin>.str", "<builtin>.sorted", "<builtin>.len", "os.path.join", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.train.ProfilerHook", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "math.sqrt", "horovod.tensorflow.BroadcastGlobalVariablesHook", "tensorflow.compat.v1.disable_eager_execution", "<builtin>.int", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.model_fn_builder", "<builtin>.enumerate", "tokenization.validate_case_matches_checkpoint", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.run_classifier.file_based_convert_examples_to_features", "modeling.BertConfig.from_json_file", "<builtin>.exit", "tokenization.FullTokenizer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data": ["tensorflow.compat.v1.flags.DEFINE_bool", "tensorflow.compat.v1.flags.DEFINE_float", "collections.namedtuple", "tensorflow.compat.v1.flags.DEFINE_integer", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.TrainingInstance.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.TrainingInstance.__str__": ["<builtin>.str", "tokenization.printable_text"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.TrainingInstance.__repr__": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.TrainingInstance.__str__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.write_instance_to_example_files": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.create_float_feature", "tensorflow.io.TFRecordWriter", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.create_int_feature", "<builtin>.enumerate", "collections.OrderedDict", "tensorflow.train.Features", "tensorflow.train.Example", "tokenization.printable_text", "<builtin>.str", "<builtin>.list", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.create_int_feature": ["tensorflow.train.Feature", "<builtin>.list", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.create_float_feature": ["tensorflow.train.Feature", "tensorflow.train.FloatList", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.create_training_instances": ["<builtin>.range", "<builtin>.len", "tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.create_instances_from_document", "tensorflow.io.gfile.GFile", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.create_instances_from_document": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.truncate_seq_pair", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.TrainingInstance.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.create_masked_lm_predictions"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.truncate_seq_pair": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.create_masked_lm_predictions": ["<builtin>.len", "<builtin>.min", "<builtin>.enumerate", "<builtin>.set", "<builtin>.round", "<builtin>.sorted", "<builtin>.int", "<builtin>.list", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.create_masked_lm_predictions.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.main": ["tensorflow.compat.v1.flags.FLAGS.input_file.split", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.io.gfile.glob", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.create_training_instances", "tensorflow.compat.v1.flags.FLAGS.output_file.split", "random.Random", "tokenization.FullTokenizer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.create_pretraining_data.write_instance_to_example_files", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.set_rprecision": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.set_global_flags": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.i_cast": ["tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.r_cast": ["tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.matmul": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.r_cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.i_cast", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.multiply": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.r_cast", "tensorflow.multiply"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.mzip": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.r_cast", "<builtin>.zip"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.tanh": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.r_cast", "tensorflow.tanh", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.i_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.softmax": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.r_cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.i_cast", "tensorflow.nn.softmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.layer_norm": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.r_cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.i_cast", "tensorflow.keras.layers.LayerNormalization"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.gelu": ["tensorflow.nn.gelu", "numpy.sqrt", "tensorflow.tanh", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.i_cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.r_cast", "tensorflow.pow"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.generic_ops.logTheLossHook": ["tensorflow.compat.v1.train.LoggingTensorHook"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertConfig.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertConfig.from_dict": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertConfig.__init__", "six.iteritems"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertConfig.from_json_file": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertConfig.from_dict", "tensorflow.io.gfile.GFile", "json.loads"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertConfig.to_dict": ["copy.deepcopy"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertConfig.to_json_string": ["json.dumps", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertConfig.to_dict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertConfig.set_additional_options": ["tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertModel.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.embedding_lookup", "copy.deepcopy", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.embedding_postprocessor", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_shape_list", "tensorflow.compat.v1.layers.dense", "tensorflow.ones", "tensorflow.squeeze", "generic_ops.set_global_flags", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.create_attention_mask_from_input_mask", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.transformer_model", "generic_ops.set_rprecision", "tensorflow.compat.v1.variable_scope", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_activation", "tensorflow.zeros", "generic_ops.r_cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.create_initializer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_shape_list": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.assert_rank", "tensorflow.shape", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.embedding_lookup": ["tensorflow.expand_dims", "tensorflow.matmul", "tensorflow.gather", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_shape_list", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.create_initializer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.embedding_postprocessor": ["<builtin>.range", "<builtin>.len", "tensorflow.matmul", "tensorflow.compat.v1.assert_less_equal", "tensorflow.slice", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_shape_list", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "tensorflow.control_dependencies", "tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.layer_norm_and_dropout", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.create_initializer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.create_attention_mask_from_input_mask": ["tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_shape_list", "tensorflow.ones", "tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_activation": ["<builtin>.ValueError", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.transformer_model": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.dropout", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.attention_layer", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_shape_list", "tensorflow.concat", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.layer_norm", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.reshape_from_matrix", "tensorflow.compat.v1.variable_scope", "<builtin>.int", "tensorflow.compat.v1.layers.dense", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.reshape_to_matrix", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.create_initializer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.create_initializer": ["tensorflow.compat.v1.truncated_normal_initializer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertModel.get_pooled_output": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertModel.get_sequence_output": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertModel.get_all_encoder_layers": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertModel.get_embedding_output": ["generic_ops.r_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.BertModel.get_embedding_table": ["generic_ops.r_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_remaps": ["re.compile"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.apply_remaps": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.check_model_validity": ["<builtin>.ValueError", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_assignment_map_from_checkpoint": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_remaps", "re.match", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.check_model_validity", "tensorflow.train.list_variables", "collections.OrderedDict", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.apply_remaps"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.dropout": ["tensorflow.nn.dropout"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.layer_norm": ["generic_ops.layer_norm"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.layer_norm_and_dropout": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.dropout", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.layer_norm"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.attention_layer": ["tensorflow.cast", "tensorflow.expand_dims", "<builtin>.len", "generic_ops.matmul", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.dropout", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.attention_layer.transpose_for_scores", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_shape_list", "tensorflow.transpose", "math.sqrt", "generic_ops.softmax", "generic_ops.r_cast", "<builtin>.float", "tensorflow.compat.v1.layers.dense", "tensorflow.reshape", "tensorflow.multiply", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.reshape_to_matrix", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.create_initializer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.attention_layer.transpose_for_scores": ["tensorflow.reshape", "tensorflow.transpose"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.reshape_to_matrix": ["<builtin>.ValueError", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.reshape_from_matrix": ["tensorflow.reshape", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.get_shape_list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.training.fp32.modeling.assert_rank": ["<builtin>.ValueError", "<builtin>.str", "<builtin>.isinstance", "tensorflow.compat.v1.get_variable_scope"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_squad": ["tensorflow.compat.v1.flags.DEFINE_bool", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.disable_v2_behavior"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_squad.SquadExporter.__init__": ["tensorflow.compat.v1.placeholder", "os.path.join", "tensorflow.compat.v1.Session", "os.path.exists", "tensorflow.compat.v1.train.Saver", "os.mkdir", "modeling.BertConfig.from_json_file", "run_squad.create_model_top", "tensorflow.train.latest_checkpoint"], "run_squad.create_model_top": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_squad.SquadExporter.__enter__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_squad.SquadExporter.__exit__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_squad.SquadExporter.export": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_squad.SquadExporter.export_frozen_graph", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_squad.SquadExporter.export_saved_model"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_squad.SquadExporter.export_saved_model": ["tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def", "tensorflow.compat.v1.saved_model.build_tensor_info", "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_squad.SquadExporter.export_frozen_graph": ["<builtin>.range", "<builtin>.len", "os.path.join", "tensorflow.compat.v1.graph_util.convert_variables_to_constants", "tensorflow.compat.v1.gfile.GFile"], "tensorflow.compat.v1.saved_model.build_tensor_info": [], "tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def": [], "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_squad.main": ["tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_squad.SquadExporter.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier_with_tfhub": ["tensorflow.flags.DEFINE_string", "tensorflow.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier_with_tfhub.create_model": ["tensorflow_hub.Module", "<builtin>.dict", "tensorflow.nn.dropout", "tensorflow.reduce_sum", "tensorflow.compat.v1.truncated_normal_initializer", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "<builtin>.set", "tensorflow.compat.v1.zeros_initializer", "tensorflow.nn.softmax", "tensorflow.compat.v1.variable_scope", "tensorflow.nn.log_softmax", "tensorflow.nn.bias_add", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier_with_tfhub.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier_with_tfhub.model_fn_builder.model_fn": ["tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier_with_tfhub.create_model", "<builtin>.ValueError", "optimization.create_optimizer", "tensorflow.compat.v1.logging.info", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier_with_tfhub.model_fn_builder.model_fn.metric_fn": ["tensorflow.compat.v1.metrics.accuracy", "tensorflow.compat.v1.metrics.mean", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier_with_tfhub.create_tokenizer_from_hub_module": ["tensorflow_hub.Module", "tensorflow.compat.v1.Session", "tensorflow.Graph", "tokenization.FullTokenizer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier_with_tfhub.main": ["tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "run_classifier.convert_examples_to_features", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier_with_tfhub.create_tokenizer_from_hub_module", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier_with_tfhub.model_fn_builder", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info", "run_classifier.input_fn_builder", "run_classifier.file_based_input_fn_builder", "<builtin>.ValueError", "tensorflow.flags.FLAGS.task_name.lower", "tensorflow.io.gfile.makedirs", "<builtin>.str", "<builtin>.sorted", "<builtin>.len", "os.path.join", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "<builtin>.int", "run_classifier.file_based_convert_examples_to_features"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.BertModelTester.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.BertModelTester.create_model": ["modeling.BertModel", "modeling.BertConfig", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.ids_tensor"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.ids_tensor": ["<builtin>.range", "random.Random", "tensorflow.constant"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.BertModelTester.check_output": ["tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.test_default": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.run_tester", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.BertModelTester.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.run_tester": ["tensorflow.compat.v1.global_variables_initializer", "tensorflow.group", "tensorflow.compat.v1.local_variables_initializer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.assert_all_tensors_reachable", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.BertModelTester.create_model", "tensorflow.test.TestCase.test_session", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.BertModelTester.check_output"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.test_config_to_json_string": ["modeling.BertConfig", "json.loads", "tensorflow.test.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.assert_all_tensors_reachable": ["<builtin>.len", "re.compile", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.get_unreachable_ops", "tensorflow.test.TestCase.assertEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.get_unreachable_ops": ["<builtin>.str", "collections.defaultdict", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.flatten_recursive"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.flatten_recursive": ["six.iteritems", "<builtin>.isinstance", "<builtin>.list", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling_test.BertModelTest.flatten_recursive"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features": ["tensorflow.flags.DEFINE_string", "tensorflow.flags.DEFINE_bool", "tensorflow.flags.mark_flag_as_required", "tensorflow.flags.DEFINE_integer", "tensorflow.compat.v1.app.run"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.InputExample.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.InputFeatures.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.input_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.input_fn_builder.input_fn": ["<builtin>.len", "tensorflow.constant", "tensorflow.data.Dataset.from_tensor_slices"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.model_fn_builder.model_fn": ["modeling.BertModel", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "tensorflow.compat.v1.train.init_from_checkpoint", "<builtin>.ValueError", "tensorflow.compat.v1.trainable_variables", "<builtin>.enumerate", "modeling.get_assignment_map_from_checkpoint", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.train.Scaffold"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.convert_examples_to_features": ["<builtin>.len", "<builtin>.enumerate", "tokenization.printable_text", "<builtin>.str", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features._truncate_seq_pair", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.InputFeatures.__init__", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features._truncate_seq_pair": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.read_examples": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.InputExample.__init__", "tensorflow.io.gfile.GFile", "re.match", "tokenization.convert_to_unicode"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.main": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.input_fn_builder", "tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "json.dumps", "tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.convert_examples_to_features", "tensorflow.flags.FLAGS.layers.split", "collections.OrderedDict", "<builtin>.float", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.read_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.extract_features.model_fn_builder", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "<builtin>.round", "<builtin>.int", "codecs.getwriter", "<builtin>.enumerate", "modeling.BertConfig.from_json_file", "tokenization.FullTokenizer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization_test.OptimizationTest.test_adam": ["<builtin>.range", "tensorflow.square", "tensorflow.test.TestCase.assertAllClose", "tensorflow.compat.v1.constant_initializer", "tensorflow.compat.v1.trainable_variables", "<builtin>.zip", "tensorflow.compat.v1.global_variables_initializer", "tensorflow.group", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "optimization.AdamWeightDecayOptimizer", "tensorflow.compat.v1.local_variables_initializer", "tensorflow.gradients", "tensorflow.constant", "tensorflow.test.TestCase.test_session"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.evaluate", "json.dumps", "<builtin>.open", "json.load", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.normalize_answer": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.normalize_answer.remove_punc", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.normalize_answer.remove_articles", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.normalize_answer.white_space_fix", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.normalize_answer.lower"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.normalize_answer.remove_articles": ["re.sub"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.normalize_answer.white_space_fix": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.normalize_answer.remove_punc": ["<builtin>.set"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.normalize_answer.lower": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.f1_score": ["collections.Counter", "<builtin>.sum", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.normalize_answer", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.exact_match_score": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.normalize_answer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.metric_max_over_ground_truths": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.f1_score", "<builtin>.max", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.exact_match_score"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.evaluate": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.metric_max_over_ground_truths", "<builtin>.list", "<builtin>.map"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.evaluate-v1.1.evaluate.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.create_optimizer": ["<builtin>.zip", "tensorflow.group", "tensorflow.math.equal", "tensorflow.compat.v1.train.Optimizer.compute_gradients", "tensorflow.compat.v1.train.polynomial_decay", "tensorflow.cast", "tensorflow.compat.v1.trainable_variables", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.AdamWeightDecayOptimizer.__init__", "tensorflow.constant", "tensorflow.clip_by_global_norm", "tensorflow.compat.v1.tpu.CrossShardOptimizer", "tensorflow.compat.v1.train.get_or_create_global_step", "tensorflow.zeros_initializer", "<builtin>.list", "tensorflow.cond", "tensorflow.identity", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.AdamWeightDecayOptimizer.apply_gradients", "<builtin>.enumerate", "tensorflow.compat.v1.get_variable", "tensorflow.gradients"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.AdamWeightDecayOptimizer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.create_optimizer.<lambda1>": ["tensorflow.ones_like"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.create_optimizer.<lambda2>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.create_optimizer.<lambda3>": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.create_optimizer.<lambda4>": ["<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.create_optimizer.applyGrads": ["<builtin>.zip", "<builtin>.list", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.AdamWeightDecayOptimizer.apply_gradients"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.AdamWeightDecayOptimizer.apply_gradients": ["tensorflow.cast", "tensorflow.square", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.AdamWeightDecayOptimizer._do_use_weight_decay", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.AdamWeightDecayOptimizer._get_variable_name", "tensorflow.sqrt", "tensorflow.group", "generic_ops.multiply", "tensorflow.compat.v1.get_variable", "tensorflow.compat.v1.zeros_initializer", "tensorflow.multiply"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.create_optimizer.<lambda5>": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.create_optimizer.applyGrads"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.create_optimizer.<lambda6>": ["tensorflow.no_op"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.create_optimizer.<lambda7>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.create_optimizer.<lambda8>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.AdamWeightDecayOptimizer._get_variable_name": ["re.match"], "generic_ops.multiply": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.optimization.AdamWeightDecayOptimizer._do_use_weight_decay": ["re.search"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization_test": ["tensorflow.test.main"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization_test.TokenizationTest.test_full_tokenizer": ["os.unlink", "tokenization.FullTokenizer", "tempfile.NamedTemporaryFile", "tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization_test.TokenizationTest.test_chinese": ["tokenization.BasicTokenizer", "tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization_test.TokenizationTest.test_basic_tokenizer_lower": ["tokenization.BasicTokenizer", "tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization_test.TokenizationTest.test_basic_tokenizer_no_lower": ["tokenization.BasicTokenizer", "tensorflow.test.TestCase.assertAllEqual"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization_test.TokenizationTest.test_wordpiece_tokenizer": ["tensorflow.test.TestCase.assertAllEqual", "tokenization.WordpieceTokenizer", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization_test.TokenizationTest.test_convert_tokens_to_ids": ["tensorflow.test.TestCase.assertAllEqual", "tokenization.convert_tokens_to_ids", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization_test.TokenizationTest.test_is_whitespace": ["tokenization._is_whitespace", "tensorflow.test.TestCase.assertTrue", "tensorflow.test.TestCase.assertFalse"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization_test.TokenizationTest.test_is_control": ["tokenization._is_control", "tensorflow.test.TestCase.assertTrue", "tensorflow.test.TestCase.assertFalse"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization_test.TokenizationTest.test_is_punctuation": ["tokenization._is_punctuation", "tensorflow.test.TestCase.assertTrue", "tensorflow.test.TestCase.assertFalse"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad": ["tensorflow.compat.v1.flags.DEFINE_bool", "tensorflow.compat.v1.flags.DEFINE_float", "collections.namedtuple", "tensorflow.compat.v1.flags.DEFINE_integer", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.UpdateGlobalStepHook.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.UpdateGlobalStepHook.begin": ["<builtin>.RuntimeError", "tensorflow.compat.v1.get_default_graph", "tensorflow.python.training.training_util.get_global_step", "tensorflow.python.ops.state_ops.assign_add"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.UpdateGlobalStepHook.after_create_session": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.UpdateGlobalStepHook.before_run": ["tensorflow.python.training.session_run_hook.SessionRunArgs"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.UpdateGlobalStepHook.after_run": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.SquadExample.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.SquadExample.__str__": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.SquadExample.__repr__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.SquadExample.__repr__": ["tokenization.printable_text"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.InputFeatures.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.read_squad_examples": ["tokenization.whitespace_tokenize", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.read_squad_examples.is_whitespace", "<builtin>.len", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.SquadExample.__init__", "tensorflow.compat.v1.logging.warning", "json.load", "tensorflow.io.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.read_squad_examples.is_whitespace": ["<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.convert_examples_to_features": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad._improve_answer_span", "<builtin>.min", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.FeatureWriter.process_feature", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.main.append_feature", "six.iteritems", "collections.namedtuple", "tokenization.printable_text", "<builtin>.str", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.InputFeatures.__init__", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad._check_is_max_context"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad._improve_answer_span": ["<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad._check_is_max_context": ["<builtin>.min", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.FeatureWriter.process_feature": ["tensorflow.train.Features", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.FeatureWriter.process_feature.create_int_feature", "tensorflow.train.Example", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.main.append_feature": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.FeatureWriter.process_feature"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.create_model": ["modeling.BertModel", "modeling.get_shape_list", "tensorflow.identity", "tensorflow.compat.v1.truncated_normal_initializer", "tensorflow.compat.v1.get_variable", "tensorflow.transpose", "tensorflow.compat.v1.zeros_initializer", "tensorflow.unstack", "tensorflow.reshape", "tensorflow.nn.bias_add", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.create_model_top": ["tensorflow.graph_util.import_graph_def", "<builtin>.print", "tensorflow.compat.v1.GraphDef", "tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.create_model"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.model_fn_builder.model_fn": ["tensorflow.cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.create_model_top", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "modeling.get_shape_list", "tensorflow.compat.v1.train.init_from_checkpoint", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.model_fn_builder.model_fn.compute_loss", "tensorflow.compat.v1.trainable_variables", "<builtin>.ValueError", "tensorflow.compat.v1.tpu.bfloat16_scope", "generic_ops.logTheLossHook", "optimization.create_optimizer", "modeling.get_assignment_map_from_checkpoint", "tensorflow.compat.v1.logging.info", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.train.Scaffold"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.model_fn_builder.model_fn.compute_loss": ["tensorflow.one_hot", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.nn.log_softmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.input_fn_builder": ["tensorflow.io.FixedLenFeature"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.input_fn_builder._decode_record": ["tensorflow.cast", "tensorflow.io.parse_single_example", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.input_fn_builder.input_fn": ["tensorflow.data.TFRecordDataset", "tensorflow.data.experimental.map_and_batch"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.input_fn_builder.input_fn.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.input_fn_builder._decode_record"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.write_predictions": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad._get_best_indexes", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad._compute_softmax", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.get_final_text", "<builtin>.enumerate", "collections.OrderedDict", "tensorflow.io.gfile.GFile", "json.dumps", "collections.namedtuple", "<builtin>.sorted", "collections.defaultdict", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad._get_best_indexes": ["<builtin>.sorted", "<builtin>.len", "<builtin>.range", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.write_predictions.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.get_final_text": ["<builtin>.len", "tokenization.BasicTokenizer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.get_final_text._strip_spaces", "six.iteritems", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad._compute_softmax": ["math.exp"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.get_final_text._strip_spaces": ["<builtin>.len", "<builtin>.enumerate", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad._get_best_indexes.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.FeatureWriter.__init__": ["tensorflow.io.TFRecordWriter"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.FeatureWriter.process_feature.create_int_feature": ["tensorflow.train.Feature", "<builtin>.list", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.FeatureWriter.close": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.validate_flags_or_throw": ["tokenization.validate_case_matches_checkpoint", "<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.do_benchmark": ["<builtin>.range", "threading.Thread", "tensorflow.Graph", "<builtin>.ValueError", "tensorflow.compat.v1.ConfigProto", "<builtin>.sum", "<builtin>.print", "tensorflow.compat.v1.GraphDef", "os.getenv", "tensorflow.import_graph_def", "<builtin>.open", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.do_benchmark.run_model", "tensorflow.compat.v1.Session", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.do_benchmark.create_feed_dict": ["<builtin>.range", "<builtin>.len", "numpy.vstack", "numpy.ones", "numpy.pad", "numpy.random.randint"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.do_benchmark.run_model": ["<builtin>.range", "<builtin>.print", "time.time", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.do_benchmark.create_feed_dict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.main": ["tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.convert_examples_to_features", "<builtin>.print", "tensorflow.python.training.basic_session_run_hooks.ProfilerHook", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.write_predictions", "tensorflow.io.gfile.makedirs", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.input_fn_builder", "<builtin>.float", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.do_benchmark", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.read_squad_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.FeatureWriter.__init__", "<builtin>.len", "os.path.join", "tensorflow.compat.v1.ConfigProto", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.model_fn_builder", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.train.ProfilerHook", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.UpdateGlobalStepHook.__init__", "time.time", "tensorflow.compat.v1.disable_eager_execution", "<builtin>.int", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.FeatureWriter.close", "random.Random", "modeling.BertConfig.from_json_file", "<builtin>.exit", "tokenization.FullTokenizer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_squad.validate_flags_or_throw"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.validate_case_matches_checkpoint": ["<builtin>.ValueError", "re.match"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.convert_to_unicode": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.printable_text": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.load_vocab": ["tensorflow.io.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.convert_to_unicode", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.convert_by_vocab": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.convert_tokens_to_ids": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.convert_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.whitespace_tokenize": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.FullTokenizer.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.load_vocab", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.WordpieceTokenizer.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.WordpieceTokenizer.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.FullTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer.tokenize", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.WordpieceTokenizer.tokenize"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer._run_split_on_punc", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.whitespace_tokenize", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer._clean_text", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer._run_strip_accents", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer._tokenize_chinese_chars", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.convert_to_unicode"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.WordpieceTokenizer.tokenize": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.whitespace_tokenize", "<builtin>.list", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.convert_to_unicode"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.FullTokenizer.convert_tokens_to_ids": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.FullTokenizer.convert_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer._clean_text": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization._is_whitespace", "<builtin>.ord", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization._is_control"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer._tokenize_chinese_chars": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer._is_chinese_char", "<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer._run_strip_accents": ["unicodedata.category", "unicodedata.normalize"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer._run_split_on_punc": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization._is_punctuation", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization._is_punctuation": ["unicodedata.category", "<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization.BasicTokenizer._is_chinese_char": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization._is_control": ["unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.tokenization._is_whitespace": ["unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_classifier": ["tensorflow.compat.v1.flags.DEFINE_bool", "tensorflow.compat.v1.disable_v2_behavior", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_classifier.ClassifierExporter.__init__": ["<builtin>.len", "tensorflow.compat.v1.placeholder", "<builtin>.ValueError", "os.path.join", "run_classifier.create_model_top", "os.path.exists", "tensorflow.compat.v1.train.Saver", "os.mkdir", "tensorflow.compat.v1.flags.FLAGS.task_name.lower", "modeling.BertConfig.from_json_file", "tensorflow.compat.v1.Session", "tensorflow.train.latest_checkpoint"], "run_classifier.create_model_top": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_classifier.ClassifierExporter.__enter__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_classifier.ClassifierExporter.__exit__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_classifier.ClassifierExporter.export": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_classifier.ClassifierExporter.export_frozen_graph", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_classifier.ClassifierExporter.export_saved_model"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_classifier.ClassifierExporter.export_saved_model": ["tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def", "tensorflow.compat.v1.saved_model.build_tensor_info", "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_classifier.ClassifierExporter.export_frozen_graph": ["<builtin>.range", "<builtin>.len", "os.path.join", "tensorflow.compat.v1.graph_util.convert_variables_to_constants", "tensorflow.compat.v1.gfile.GFile"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_classifier.main": ["tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.export_classifier.ClassifierExporter.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining": ["tensorflow.compat.v1.flags.DEFINE_bool", "tensorflow.compat.v1.flags.DEFINE_float", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.flags.DEFINE_integer", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.model_fn_builder.model_fn": ["modeling.BertModel", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.trainable_variables", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.get_masked_lm_output", "tensorflow.compat.v1.tpu.bfloat16_scope", "generic_ops.logTheLossHook", "optimization.create_optimizer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.get_next_sentence_output", "generic_ops.set_rprecision", "modeling.get_assignment_map_from_checkpoint", "tensorflow.compat.v1.logging.info", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.get_masked_lm_output": ["modeling.layer_norm", "generic_ops.matmul", "tensorflow.reduce_sum", "modeling.create_initializer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.gather_indexes", "tensorflow.compat.v1.variable_scope", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "tensorflow.compat.v1.zeros_initializer", "generic_ops.i_cast", "tensorflow.nn.log_softmax", "modeling.get_activation", "tensorflow.reshape", "tensorflow.nn.bias_add", "tensorflow.compat.v1.layers.dense"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.get_next_sentence_output": ["generic_ops.matmul", "tensorflow.reduce_sum", "modeling.create_initializer", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "tensorflow.compat.v1.zeros_initializer", "generic_ops.i_cast", "tensorflow.nn.log_softmax", "tensorflow.compat.v1.variable_scope", "tensorflow.reshape", "tensorflow.nn.bias_add"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.train.Scaffold"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.model_fn_builder.model_fn.metric_fn": ["tensorflow.reshape", "tensorflow.compat.v1.metrics.accuracy", "tensorflow.compat.v1.metrics.mean", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.gather_indexes": ["tensorflow.reshape", "modeling.get_shape_list", "tensorflow.range", "tensorflow.gather"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.input_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.input_fn_builder.input_fn": ["<builtin>.len", "tensorflow.data.experimental.parallel_interleave", "tensorflow.io.FixedLenFeature", "<builtin>.min", "tensorflow.data.TFRecordDataset", "tensorflow.constant", "tensorflow.data.experimental.map_and_batch", "tensorflow.data.Dataset.from_tensor_slices"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.input_fn_builder.input_fn.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining._decode_record"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining._decode_record": ["tensorflow.cast", "tensorflow.io.parse_single_example", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.logBatchSizeInfo": ["<builtin>.str", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.main": ["tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info", "tensorflow.compat.v1.flags.FLAGS.input_file.split", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.logBatchSizeInfo", "tensorflow.io.gfile.makedirs", "<builtin>.str", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.model_fn_builder", "<builtin>.sorted", "os.path.join", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.train.ProfilerHook", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "tensorflow.compat.v1.disable_eager_execution", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_pretraining.input_fn_builder", "tensorflow.io.gfile.glob", "tensorflow.compat.v1.tpu.bfloat16_scope", "generic_ops.set_rprecision", "modeling.BertConfig.from_json_file"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier": ["tensorflow.compat.v1.flags.DEFINE_bool", "tensorflow.compat.v1.flags.DEFINE_float", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.flags.DEFINE_integer", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.LoggerHook.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.LoggerHook.begin": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.LoggerHook.before_run": ["datetime.datetime.now"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.LoggerHook.after_run": ["<builtin>.print", "datetime.datetime.now"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.LoggerHook.end": ["<builtin>.print"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.InputExample.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.InputFeatures.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor.get_train_examples": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor.get_dev_examples": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor.get_test_examples": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor.get_labels": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor._read_tsv": ["tensorflow.io.gfile.GFile", "csv.reader"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.XnliProcessor.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.XnliProcessor.get_train_examples": ["tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.InputExample.__init__", "os.path.join", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.XnliProcessor.get_dev_examples": ["tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.InputExample.__init__", "os.path.join", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.XnliProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MnliProcessor.get_train_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor._read_tsv", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MnliProcessor._create_examples"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MnliProcessor._create_examples": ["tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.InputExample.__init__", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MnliProcessor.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor._read_tsv", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MnliProcessor._create_examples"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MnliProcessor.get_test_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor._read_tsv", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MnliProcessor._create_examples"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MnliProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MrpcProcessor.get_train_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MrpcProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MrpcProcessor._create_examples": ["tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.InputExample.__init__", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MrpcProcessor.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MrpcProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MrpcProcessor.get_test_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MrpcProcessor._create_examples", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor._read_tsv"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.MrpcProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.ColaProcessor.get_train_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor._read_tsv", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.ColaProcessor._create_examples"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.ColaProcessor._create_examples": ["tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.InputExample.__init__", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.ColaProcessor.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor._read_tsv", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.ColaProcessor._create_examples"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.ColaProcessor.get_test_examples": ["os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.DataProcessor._read_tsv", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.ColaProcessor._create_examples"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.ColaProcessor.get_labels": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.convert_single_example": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier._truncate_seq_pair", "<builtin>.enumerate", "tokenization.printable_text", "<builtin>.str", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.InputFeatures.__init__", "<builtin>.isinstance", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier._truncate_seq_pair": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.file_based_convert_examples_to_features": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.file_based_convert_examples_to_features.create_int_feature", "<builtin>.len", "tensorflow.io.TFRecordWriter", "<builtin>.enumerate", "collections.OrderedDict", "tensorflow.train.Features", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.convert_single_example", "tensorflow.train.Example", "<builtin>.int", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.file_based_convert_examples_to_features.create_int_feature": ["tensorflow.train.Feature", "<builtin>.list", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.file_based_input_fn_builder": ["tensorflow.io.FixedLenFeature"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.file_based_input_fn_builder._decode_record": ["tensorflow.cast", "tensorflow.io.parse_single_example", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.file_based_input_fn_builder.input_fn": ["tensorflow.data.TFRecordDataset", "tensorflow.data.experimental.map_and_batch"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.file_based_input_fn_builder.input_fn.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.file_based_input_fn_builder._decode_record"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.create_model": ["modeling.BertModel", "tensorflow.nn.dropout", "tensorflow.reduce_sum", "tensorflow.compat.v1.truncated_normal_initializer", "tensorflow.reduce_mean", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "tensorflow.compat.v1.zeros_initializer", "generic_ops.softmax", "tensorflow.nn.log_softmax", "tensorflow.compat.v1.variable_scope", "tensorflow.nn.bias_add", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.create_model_top": ["tensorflow.graph_util.import_graph_def", "tensorflow.compat.v1.GraphDef", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.create_model", "tensorflow.compat.v1.tpu.bfloat16_scope", "tensorflow.io.gfile.GFile", "generic_ops.r_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.model_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.model_fn_builder.model_fn": ["tensorflow.cast", "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec", "tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.trainable_variables", "tensorflow.shape", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.create_model_top", "tensorflow.ones", "generic_ops.logTheLossHook", "optimization.create_optimizer", "modeling.get_assignment_map_from_checkpoint", "tensorflow.compat.v1.logging.info", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.model_fn_builder.model_fn.tpu_scaffold": ["tensorflow.compat.v1.train.init_from_checkpoint", "tensorflow.compat.v1.train.Scaffold"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.model_fn_builder.model_fn.metric_fn": ["tensorflow.compat.v1.metrics.accuracy", "tensorflow.compat.v1.metrics.mean", "tensorflow.argmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.input_fn_builder": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.input_fn_builder.input_fn": ["<builtin>.len", "tensorflow.constant", "tensorflow.data.Dataset.from_tensor_slices"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.convert_examples_to_features": ["<builtin>.len", "tensorflow.compat.v1.logging.info", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.convert_single_example", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.main": ["tensorflow.compat.v1.estimator.tpu.RunConfig", "tensorflow.compat.v1.estimator.tpu.TPUConfig", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.LoggerHook.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.file_based_input_fn_builder", "tensorflow.io.gfile.GFile", "tensorflow.compat.v1.logging.info", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.file_based_convert_examples_to_features", "tensorflow.estimator.ProfilerHook", "tensorflow.io.gfile.makedirs", "tensorflow.compat.v1.flags.FLAGS.task_name.lower", "<builtin>.str", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.run_classifier.model_fn_builder", "<builtin>.sorted", "<builtin>.len", "os.path.join", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.estimator.tpu.TPUEstimator", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.train.ProfilerHook", "tensorflow.distribute.cluster_resolver.TPUClusterResolver", "tensorflow.compat.v1.disable_eager_execution", "<builtin>.int", "<builtin>.enumerate", "tokenization.validate_case_matches_checkpoint", "modeling.BertConfig.from_json_file", "<builtin>.exit", "tokenization.FullTokenizer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data": ["tensorflow.compat.v1.flags.DEFINE_bool", "tensorflow.compat.v1.flags.DEFINE_float", "collections.namedtuple", "tensorflow.compat.v1.flags.DEFINE_integer", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.TrainingInstance.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.TrainingInstance.__str__": ["<builtin>.str", "tokenization.printable_text"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.TrainingInstance.__repr__": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.TrainingInstance.__str__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.write_instance_to_example_files": ["<builtin>.len", "tensorflow.io.TFRecordWriter", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.create_float_feature", "<builtin>.enumerate", "collections.OrderedDict", "tensorflow.train.Features", "tensorflow.train.Example", "tokenization.printable_text", "<builtin>.str", "tensorflow.compat.v1.logging.info", "<builtin>.list", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.create_int_feature"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.create_int_feature": ["tensorflow.train.Feature", "<builtin>.list", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.create_float_feature": ["tensorflow.train.Feature", "tensorflow.train.FloatList", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.create_training_instances": ["<builtin>.range", "<builtin>.len", "tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.create_instances_from_document", "tensorflow.io.gfile.GFile", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.create_instances_from_document": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.create_masked_lm_predictions", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.truncate_seq_pair", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.TrainingInstance.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.truncate_seq_pair": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.create_masked_lm_predictions": ["<builtin>.len", "<builtin>.min", "<builtin>.enumerate", "<builtin>.set", "<builtin>.round", "<builtin>.sorted", "<builtin>.int", "<builtin>.list", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.create_masked_lm_predictions.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.main": ["tensorflow.compat.v1.flags.FLAGS.input_file.split", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.create_training_instances", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.io.gfile.glob", "tensorflow.compat.v1.flags.FLAGS.output_file.split", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.create_pretraining_data.write_instance_to_example_files", "random.Random", "tokenization.FullTokenizer", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops": ["tensorflow.keras.mixed_precision.Policy"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.set_global_precision": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.set_rprecision", "tensorflow.keras.mixed_precision.Policy"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.set_rprecision": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.get_keras_policy": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.set_global_flags": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.i_cast": ["tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.r_cast": ["tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.multiply": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.r_cast", "tensorflow.multiply"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.mzip": ["<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.r_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.tanh": ["tensorflow.tanh", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.r_cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.i_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.softmax": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.r_cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.i_cast", "tensorflow.nn.softmax"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.layer_norm": ["tensorflow.keras.layers.LayerNormalization", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.get_keras_policy"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.gelu": ["tensorflow.nn.gelu", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.r_cast", "numpy.sqrt", "tensorflow.tanh", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.i_cast", "tensorflow.pow"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.generic_ops.logTheLossHook": ["tensorflow.compat.v1.train.LoggingTensorHook"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertConfig.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertConfig.from_dict": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertConfig.__init__", "six.iteritems"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertConfig.from_json_file": ["tensorflow.io.gfile.GFile", "json.loads", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertConfig.from_dict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertConfig.to_dict": ["copy.deepcopy"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertConfig.to_json_string": ["json.dumps", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertConfig.to_dict"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertModel.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.transformer_model", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.embedding_lookup", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_activation", "generic_ops.set_global_precision", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_shape_list", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.create_initializer", "copy.deepcopy", "tensorflow.compat.v1.layers.dense", "tensorflow.ones", "tensorflow.squeeze", "generic_ops.set_global_flags", "tensorflow.compat.v1.variable_scope", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.embedding_postprocessor", "tensorflow.zeros", "generic_ops.r_cast", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.create_attention_mask_from_input_mask"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_shape_list": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.assert_rank", "tensorflow.shape", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.embedding_lookup": ["tensorflow.expand_dims", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_shape_list", "tensorflow.gather", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.create_initializer", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.embedding_postprocessor": ["<builtin>.range", "<builtin>.len", "tensorflow.compat.v1.assert_less_equal", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_shape_list", "tensorflow.slice", "<builtin>.ValueError", "tensorflow.compat.v1.get_variable", "tensorflow.one_hot", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.layer_norm_and_dropout", "tensorflow.control_dependencies", "tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.create_initializer", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.create_attention_mask_from_input_mask": ["tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_shape_list", "tensorflow.ones", "tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_activation": ["<builtin>.ValueError", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.transformer_model": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.attention_layer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_shape_list", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.layer_norm", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.dropout", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.reshape_from_matrix", "tensorflow.concat", "<builtin>.int", "tensorflow.compat.v1.variable_scope", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.reshape_to_matrix", "tensorflow.compat.v1.layers.dense", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.create_initializer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.create_initializer": ["tensorflow.compat.v1.truncated_normal_initializer"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertModel.get_pooled_output": ["tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertModel.get_sequence_output": ["tensorflow.cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertModel.get_all_encoder_layers": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertModel.get_embedding_output": ["generic_ops.r_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.BertModel.get_embedding_table": ["generic_ops.r_cast"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_remaps": ["re.compile"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.apply_remaps": [], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.check_model_validity": ["<builtin>.ValueError", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_assignment_map_from_checkpoint": ["re.match", "tensorflow.train.list_variables", "collections.OrderedDict", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.apply_remaps", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.check_model_validity", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_remaps"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.dropout": ["tensorflow.nn.dropout"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.layer_norm": ["generic_ops.layer_norm"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.layer_norm_and_dropout": ["...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.dropout", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.layer_norm"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.attention_layer": ["tensorflow.cast", "tensorflow.expand_dims", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_shape_list", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.dropout", "tensorflow.multiply", "tensorflow.transpose", "math.sqrt", "generic_ops.softmax", "generic_ops.r_cast", "<builtin>.float", "tensorflow.compat.v1.layers.dense", "tensorflow.reshape", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.reshape_to_matrix", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.create_initializer", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.attention_layer.transpose_for_scores", "tensorflow.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.attention_layer.transpose_for_scores": ["tensorflow.reshape", "tensorflow.transpose"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.reshape_to_matrix": ["<builtin>.ValueError", "tensorflow.reshape"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.reshape_from_matrix": ["tensorflow.reshape", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.get_shape_list"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_large.inference.modeling.assert_rank": ["<builtin>.ValueError", "<builtin>.str", "<builtin>.isinstance", "tensorflow.compat.v1.get_variable_scope"], "...repos_filtered.IntelAI.models.models.language_modeling.tensorflow.bert_base": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.lamb": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.lamb.log_lamb_rs": ["torch.tensor", "collections.defaultdict"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.lamb.Lamb.__init__": ["<builtin>.ValueError", "<builtin>.dict", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.lamb.Lamb.step": ["<builtin>.len", "<builtin>.RuntimeError", "torch.zeros_like"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.main", "<builtin>.tuple", "transformers.MODEL_MAPPING.keys", "logging.getLogger", "<builtin>.list"], "transformers.MODEL_MAPPING.keys": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.WorkerInitObj.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.WorkerInitObj.__call__": ["random.seed", "numpy.random.seed"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.get_eval_batchsize_per_worker": ["torch.distributed.is_initialized"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.create_pretraining_dataset": ["torch.utils.data.DataLoader", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.pretraining_dataset.__init__", "torch.utils.data.RandomSampler"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.pretraining_dataset.__init__": ["numpy.asarray", "h5py.File"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.create_eval_dataset": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.pretraining_dataset.__init__", "torch.utils.data.Dataset.extend", "<builtin>.len", "torch.utils.data.SequentialSampler", "os.path.isfile", "torch.utils.data.DataLoader", "os.path.join", "torch.distributed.is_initialized", "os.listdir", "<builtin>.sorted"], "torch.utils.data.Dataset.extend": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.pretraining_dataset.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.pretraining_dataset.__getitem__": ["torch.zeros", "<builtin>.enumerate", "torch.count_nonzero", "numpy.asarray", "torch.from_numpy"], "torch.count_nonzero": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.parse_args": ["os.makedirs", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.found_resume_checkpoint": ["os.path.join", "<builtin>.len", "glob.glob"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.setup_training": ["os.makedirs", "torch.distributed.get_rank", "torch.device", "<builtin>.print", "torch.distributed.init_process_group", "<builtin>.ValueError", "os.path.exists", "os.environ.get", "torch.distributed.get_world_size", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.prepare_model_and_optimizer": ["schedulers.LinearWarmupPolyDecayScheduler", "transformers.AutoModelForPreTraining.from_pretrained", "transformers.AutoConfig.from_pretrained", "intel_extension_for_pytorch.optim._lamb.Lamb", "<builtin>.any", "transformers.AutoModelForPreTraining.from_config", "<builtin>.int", "<builtin>.bool", "<builtin>.list"], "transformers.AutoConfig.from_pretrained": [], "transformers.AutoModelForPreTraining.from_pretrained": [], "transformers.AutoModelForPreTraining.from_config": [], "intel_extension_for_pytorch.optim._lamb.Lamb": [], "schedulers.LinearWarmupPolyDecayScheduler": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.take_optimizer_step": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.run_eval": ["torch.distributed.all_reduce", "torch.distributed.is_initialized", "torch.tensor", "torch.no_grad", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.calc_mlm_acc", "torch.cpu.amp.autocast"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.calc_mlm_acc": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.global_batch_size": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.calc_accuracy": ["torch.argmax", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.calc_mlm_acc"], "torch.argmax": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.main": ["torch.nn.parallel.DistributedDataParallel", "<builtin>.print", "intel_extension_for_pytorch.optimize", "numpy.random.seed", "numpy.arange", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.found_resume_checkpoint", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.run_eval", "logging.basicConfig", "utils.is_main_process", "<builtin>.hasattr", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.calc_accuracy", "concurrent.futures.ProcessPoolExecutor", "math.ceil", "<builtin>.float", "os.listdir", "torch.cpu.amp.autocast", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.setup_training", "<builtin>.range", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.global_batch_size", "<builtin>.len", "torch.utils.data.DataLoader", "os.path.join", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.WorkerInitObj.__init__", "os.remove", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.create_eval_dataset", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.parse_args", "time.time", "<builtin>.int", "torch.utils.data.RandomSampler", "torch.save", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.prepare_model_and_optimizer", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.run_pretrain_mlperf.pretraining_dataset.__init__", "os.path.isfile", "torch.distributed.all_reduce", "torch.distributed.is_initialized", "torch.tensor", "<builtin>.sum", "utils.setup_seeds", "torch.manual_seed", "<builtin>.enumerate", "random.Random", "torch.Tensor", "<builtin>.exit", "random.seed"], "logging.basicConfig": [], "utils.setup_seeds": [], "concurrent.futures.ProcessPoolExecutor": [], "utils.is_main_process": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils": ["contextlib.contextmanager"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.convert_weight_names": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.generate_seeds": ["<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.broadcast_seeds": ["torch.distributed.is_initialized", "torch.LongTensor", "torch.distributed.is_available", "torch.distributed.broadcast"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.setup_seeds": ["random.SystemRandom", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.generate_seeds", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.get_world_size", "random.Random", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.get_rank", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.broadcast_seeds"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.get_rank": ["torch.distributed.is_initialized", "torch.distributed.is_available", "torch.distributed.get_rank"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.get_world_size": ["torch.distributed.is_initialized", "<builtin>.print", "torch.distributed.get_world_size", "torch.distributed.is_available"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.barrier": ["torch.cuda.synchronize", "torch.distributed.all_reduce", "torch.distributed.is_initialized", "torch.distributed.is_available", "torch.cuda.FloatTensor"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.set_device": ["torch.cuda.set_device", "torch.device"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.sync_workers": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.get_rank", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.barrier"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.is_main_process": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.get_rank"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.utils.format_step": ["<builtin>.len", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.schedulers": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.schedulers.LRScheduler.__init__": ["<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.super", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.schedulers.LRScheduler.step": ["<builtin>.zip", "torch.optim.lr_scheduler._LRScheduler.get_lr"], "torch.optim.lr_scheduler._LRScheduler.get_lr": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.schedulers.LinearWarmUpScheduler.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.schedulers.LinearWarmUpScheduler.get_lr": ["<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.schedulers.LinearWarmupPolyDecayScheduler.__init__": ["<builtin>.int", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.schedulers.LinearWarmupPolyDecayScheduler.step": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.schedulers.LinearWarmupPolyDecayScheduler.get_lr"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.schedulers.LinearWarmupPolyDecayScheduler.get_lr": ["<builtin>.min"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.chop_hdf5_files": ["<builtin>.range", "h5py.File", "<builtin>.len", "<builtin>.print", "os.path.exists", "numpy.ndarray", "<builtin>.enumerate", "glob.glob", "os.mkdir", "<builtin>.str", "<builtin>.int", "argparse.ArgumentParser", "<builtin>.sorted"], "numpy.ndarray": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization": ["re.compile", "absl.flags.DEFINE_bool"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.preserve_token": ["<builtin>.bool"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.validate_case_matches_checkpoint": ["<builtin>.ValueError", "re.match"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.convert_to_unicode": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.printable_text": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.load_vocab": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.convert_to_unicode", "tensorflow.compat.v1.gfile.GFile", "collections.OrderedDict"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.convert_by_vocab": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.convert_tokens_to_ids": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.convert_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.whitespace_tokenize": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.FullTokenizer.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.load_vocab", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.WordpieceTokenizer.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.WordpieceTokenizer.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.FullTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer.tokenize", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.preserve_token", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.WordpieceTokenizer.tokenize"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer.tokenize": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer._tokenize_chinese_chars", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer._run_strip_accents", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.preserve_token", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer._run_split_on_punc", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.convert_to_unicode", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.whitespace_tokenize", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer._clean_text"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.WordpieceTokenizer.tokenize": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.convert_to_unicode", "<builtin>.list", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.whitespace_tokenize"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.FullTokenizer.convert_tokens_to_ids": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.FullTokenizer.convert_ids_to_tokens": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.convert_by_vocab"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer._clean_text": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization._is_control", "<builtin>.ord", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization._is_whitespace"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer._tokenize_chinese_chars": ["<builtin>.ord", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer._is_chinese_char"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer._run_strip_accents": ["unicodedata.category", "unicodedata.normalize"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer._run_split_on_punc": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization._is_punctuation", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization._is_punctuation": ["unicodedata.category", "<builtin>.ord"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization.BasicTokenizer._is_chinese_char": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization._is_control": ["unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.tokenization._is_whitespace": ["unicodedata.category"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data": ["tensorflow.compat.v1.flags.DEFINE_bool", "tensorflow.compat.v1.flags.DEFINE_float", "collections.namedtuple", "tensorflow.compat.v1.flags.DEFINE_integer", "tensorflow.compat.v1.flags.mark_flag_as_required", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.flags.DEFINE_string"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.TrainingInstance.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.TrainingInstance.__str__": ["<builtin>.str", "tokenization.printable_text"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.TrainingInstance.__repr__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.TrainingInstance.__str__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.write_instance_to_example_files": ["<builtin>.len", "<builtin>.print", "<builtin>.enumerate", "collections.OrderedDict", "tokenization.printable_text", "<builtin>.list", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.create_int_feature": ["tensorflow.train.Feature", "<builtin>.list", "tensorflow.train.Int64List"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.create_float_feature": ["tensorflow.train.Feature", "tensorflow.train.FloatList", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.create_training_instances": ["<builtin>.range", "<builtin>.len", "tokenization.convert_to_unicode", "tensorflow.compat.v1.gfile.GFile", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.create_instances_from_document", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.create_instances_from_document": ["<builtin>.range", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.TrainingInstance.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.truncate_seq_pair", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.create_masked_lm_predictions"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.truncate_seq_pair": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.create_masked_lm_predictions": ["<builtin>.len", "<builtin>.min", "<builtin>.enumerate", "<builtin>.set", "<builtin>.round", "<builtin>.sorted", "<builtin>.int", "<builtin>.list", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.create_masked_lm_predictions.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.main": ["tensorflow.compat.v1.flags.FLAGS.input_file.split", "tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.flags.FLAGS.output_file.split", "tensorflow.compat.v1.gfile.Glob", "random.Random", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.create_training_instances", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.bert_large.training.input_preprocessing.create_pretraining_data.write_instance_to_example_files", "tokenization.FullTokenizer", "tensorflow.compat.v1.logging.info"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.metrics": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.metrics.__levenshtein": ["<builtin>.range", "<builtin>.len", "<builtin>.min", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.metrics.word_error_rate": ["<builtin>.len", "<builtin>.ValueError", "<builtin>.zip", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.metrics.__levenshtein", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.tb_logger": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.tb_logger.DummyLogger.log_scalar": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.tb_logger.DummyLogger.log_params": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.tb_logger.DummyLogger.log_grad": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.tb_logger.DummyLogger.train_end": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.tb_logger.TensorBoardLogger.__init__": ["torch.utils.tensorboard.SummaryWriter", "<builtin>.str"], "torch.utils.tensorboard.SummaryWriter": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.tb_logger.TensorBoardLogger.log_scalar": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.tb_logger.TensorBoardLogger.log_grad": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.tb_logger.TensorBoardLogger.log_params": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.tb_logger.TensorBoardLogger.train_end": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.decoders": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.decoders.TransducerDecoder.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.decoders.TransducerDecoder._pred_step": ["model_rnnt.label_collate"], "model_rnnt.label_collate": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.decoders.TransducerDecoder._joint_step": ["<builtin>.len", "torch.nn.functional.log_softmax"], "torch.nn.functional.log_softmax": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.decoders.TransducerDecoder._get_last_symb": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.decoders.RNNTGreedyDecoder.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.decoders.RNNTGreedyDecoder.decode": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.decoders.RNNTGreedyDecoder._greedy_decode", "torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.decoders.RNNTGreedyDecoder._greedy_decode": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.decoders.TransducerDecoder._pred_step", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.decoders.TransducerDecoder._joint_step", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.decoders.TransducerDecoder._get_last_symb"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.init_weights": ["torch.nn.init.kaiming_uniform_", "<builtin>.type", "<builtin>.ValueError", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_uniform_", "torch.nn.init.kaiming_normal_", "torch.nn.init.zeros_", "torch.nn.init.ones_"], "torch.nn.init.xavier_normal_": [], "torch.nn.init.ones_": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.get_same_padding": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.AudioPreprocessing.__init__": ["torch.nn.Module.__init__", "parts.features.FeatureFactory.from_config"], "torch.nn.Module.__init__": [], "parts.features.FeatureFactory.from_config": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.AudioPreprocessing.forward": ["apex.amp.disable_casts"], "apex.amp.disable_casts": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpectrogramAugmentation.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpecAugment.__init__", "torch.nn.Module.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpecCutoutRegions.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpecCutoutRegions.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpecAugment.__init__": ["<builtin>.super", "torch.nn.Module.get"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpectrogramAugmentation": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpectrogramAugmentation.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpecAugment.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpecCutoutRegions.__init__"], "torch.nn.Module.get": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpecAugment": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpecAugment.forward": ["torch.zeros", "random.uniform", "<builtin>.int", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpecCutoutRegions": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpecCutoutRegions.forward": ["torch.zeros", "random.uniform", "<builtin>.int", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperEncoder.__init__": ["torch.nn.Module.apply", "torch.nn.Module.__init__", "torch.nn.Sequential", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperBlock.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperBlock.__init__": ["<builtin>.range", "<builtin>.len", "torch.nn.ModuleList", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperBlock._get_act_dropout_layer", "<builtin>.super", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperBlock._get_conv_bn_layer", "torch.nn.Sequential", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.get_same_padding"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperEncoder.__init__.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.init_weights"], "torch.nn.Module.apply": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperEncoder.num_weights": ["<builtin>.sum", "torch.nn.Module.parameters"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperEncoder.forward": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperDecoderForCTC.__init__": ["torch.nn.Module.apply", "torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Conv1d"], "torch.nn.Conv1d": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperDecoderForCTC.__init__.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.init_weights"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperDecoderForCTC.num_weights": ["<builtin>.sum", "torch.nn.Module.parameters"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperDecoderForCTC.forward": ["torch.nn.functional.log_softmax"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.Jasper.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.AudioPreprocessing.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpectrogramAugmentation.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperAcousticModel.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperDecoderForCTC.__init__", "torch.nn.Module.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperEncoder.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperAcousticModel.__init__": ["torch.nn.Module.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.Jasper.num_weights": ["<builtin>.sum", "torch.nn.Module.parameters"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.Jasper.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.AudioPreprocessing.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.SpectrogramAugmentation.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperAcousticModel.forward"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperAcousticModel.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperDecoderForCTC.__init__", "torch.nn.Module.transpose", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperEncoder.__init__"], "torch.nn.Module.transpose": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperEncoderDecoder.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperDecoderForCTC.__init__", "torch.nn.Module.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperAcousticModel.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperEncoder.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperEncoderDecoder.num_weights": ["<builtin>.sum", "torch.nn.Module.parameters"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperEncoderDecoder.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperAcousticModel.forward"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.MaskedConv1d.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.MaskedConv1d.get_seq_len": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.MaskedConv1d.forward": ["<builtin>.len", "<builtin>.super", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.MaskedConv1d.get_seq_len", "torch.arange"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperBlock._get_conv_bn_layer": ["torch.nn.BatchNorm1d", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.MaskedConv1d.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperBlock._get_act_dropout_layer": ["torch.nn.Hardtanh", "torch.nn.Dropout"], "torch.nn.BatchNorm1d": [], "torch.nn.Hardtanh": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperBlock.num_weights": ["<builtin>.sum", "torch.nn.Module.parameters"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.JasperBlock.forward": ["<builtin>.isinstance", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.GreedyCTCDecoder.__init__": ["torch.nn.Module.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.GreedyCTCDecoder.forward": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.CTCLossNM.__init__": ["torch.nn.CTCLoss"], "torch.nn.CTCLoss": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model.CTCLossNM.__call__": ["torch.mean"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.optimizers": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.optimizers.AdamW.__init__": ["<builtin>.ValueError", "<builtin>.dict", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.optimizers.AdamW.__setstate__": ["torch.optim.Optimizer.param_groups.setdefault", "<builtin>.super"], "torch.optim.Optimizer.param_groups.setdefault": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.optimizers.AdamW.step": ["<builtin>.len", "torch.mul", "<builtin>.RuntimeError", "math.sqrt", "torch.zeros_like", "torch.max"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.optimizers.Novograd.__init__": ["<builtin>.ValueError", "<builtin>.dict", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.optimizers.Novograd.__setstate__": ["torch.optim.Optimizer.param_groups.setdefault", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.optimizers.Novograd.step": ["torch.zeros", "<builtin>.len", "torch.sum", "<builtin>.RuntimeError", "torch.zeros_like", "torch.pow", "torch.max"], "torch.pow": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.DistributedBucketBatchSampler.__init__": ["<builtin>.len", "torch.distributed.get_rank", "<builtin>.RuntimeError", "torch.distributed.is_available", "math.ceil", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.DistributedBucketBatchSampler.round_up_to", "torch.distributed.get_world_size"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.DistributedBucketBatchSampler.round_up_to": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.DistributedBucketBatchSampler.__iter__": ["<builtin>.range", "numpy.arange", "<builtin>.min", "torch.Generator", "torch.randperm"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.DistributedBucketBatchSampler.__len__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.DistributedBucketBatchSampler.set_epoch": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.data_prefetcher.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.data_prefetcher.preload", "<builtin>.iter", "torch.cuda.Stream"], "torch.cuda.Stream": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.data_prefetcher.preload": ["torch.cuda.stream", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.data_prefetcher.next"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.data_prefetcher.next": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.data_prefetcher.__next__"], "torch.cuda.stream": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.data_prefetcher.__next__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.data_prefetcher.preload", "torch.cuda.current_stream"], "torch.cuda.current_stream": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.data_prefetcher.__iter__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.seq_collate_fn": ["torch.zeros", "<builtin>.len", "torch.stack", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.seq_collate_fn._find_max_len", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.seq_collate_fn._find_max_len": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.AudioToTextDataLayer.__init__": ["<builtin>.len", "torch.utils.data.DataLoader", "torch.device", "parts.features.WaveformFeaturizer.from_config", "<builtin>.print", "<builtin>.RuntimeError", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.DistributedBucketBatchSampler.__init__", "torch.utils.data.distributed.DistributedSampler", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.AudioDataset.__init__"], "parts.features.WaveformFeaturizer.from_config": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.AudioDataset.__init__": ["<builtin>.print", "parts.manifest.Manifest"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.AudioToTextDataLayer.__init__.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.seq_collate_fn"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.AudioToTextDataLayer.__init__.<lambda2>": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.seq_collate_fn"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.AudioToTextDataLayer.__init__.<lambda3>": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.seq_collate_fn"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.AudioToTextDataLayer.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.AudioToTextDataLayer.data_iterator": [], "parts.manifest.Manifest": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.AudioDataset.__getitem__": ["numpy.random.randint", "<builtin>.len", "torch.tensor"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.dataset.AudioDataset.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.loss": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.loss.RNNTLoss.__init__": ["torch.cuda.is_available", "<builtin>.super", "warprnnt_pytorch.RNNTLoss"], "warprnnt_pytorch.RNNTLoss": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.loss.RNNTLoss.forward": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.BnReLUDropout.__init__": ["torch.nn.BatchNorm1d", "torch.nn.ReLU", "<builtin>.super", "torch.nn.Dropout"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.BnReLUDropout.forward": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT._joint_net", "<builtin>.super", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT._encoder", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT._predict"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT._encoder": ["rnn.StackTime", "torch.nn.ModuleDict", "rnn.rnn"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT._predict": ["torch.nn.Embedding", "torch.nn.ModuleDict", "rnn.rnn"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT._joint_net": ["torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Sequential", "torch.nn.Dropout"], "rnn.rnn": [], "rnn.StackTime": [], "torch.nn.ModuleDict": [], "torch.nn.Embedding": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.label_collate", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT.encode", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT.joint", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT.predict"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.label_collate": ["<builtin>.len", "<builtin>.type", "<builtin>.ValueError", "<builtin>.enumerate", "torch.LongTensor", "numpy.full", "<builtin>.isinstance", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT.encode": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT.predict": ["torch.zeros", "torch.cat"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.model_rnnt.RNNT.joint": ["torch.cat"], "numpy.full": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpecCutoutRegions.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpecCutoutRegions": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpecCutoutRegions.forward": ["torch.zeros", "random.uniform", "<builtin>.int", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpecAugment.__init__": ["<builtin>.super", "torch.nn.Module.get"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpecAugment": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpecAugment.forward": ["torch.zeros", "random.uniform", "<builtin>.int", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpectrogramAugmentation.__init__": ["torch.nn.Module.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpecAugment.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpecCutoutRegions.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpectrogramAugmentation": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpectrogramAugmentation.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpecCutoutRegions.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.SpecAugment.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.AudioPreprocessing.__init__": ["torch.nn.Module.__init__", "parts.features.FeatureFactory.from_config"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.preprocessing.AudioPreprocessing.forward": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main", "<builtin>.vars", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.parse_args", "helpers.print_dict"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.lr_decay": ["<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.lr_warmup": ["<builtin>.min"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.save": ["torch.distributed.get_rank", "os.path.join", "torch.distributed.is_initialized", "<builtin>.hasattr", "helpers.print_once", "time.time", "torch.save"], "helpers.print_once": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.evaluator": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.evaluator.evalutaion": ["<builtin>.dict", "<builtin>.print", "helpers.process_evaluation_batch", "helpers.print_once", "torch.no_grad", "helpers.process_evaluation_epoch", "torch.cpu.amp.autocast"], "helpers.process_evaluation_batch": [], "helpers.process_evaluation_epoch": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.train": ["tqdm.tqdm", "<builtin>.len", "time.perf_counter", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<lambda3>", "helpers.monitor_asr_train_progress", "<builtin>.str", "helpers.print_once", "time.time", "torch.profiler.profile", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<lambda1>", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<lambda2>", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.save", "torch.profiler.tensorboard_trace_handler", "torch.cpu.amp.autocast"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<lambda3>": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<lambda1>", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<lambda3>", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<lambda2>", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.lr_warmup"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<lambda2>": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<lambda1>", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<lambda3>", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.lr_decay", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<lambda2>"], "time.perf_counter": [], "helpers.monitor_asr_train_progress": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main": ["helpers.add_blank_label", "toml.load", "torch.nn.parallel.DistributedDataParallel", "<builtin>.print", "decoders.RNNTGreedyDecoder", "dataset.AudioToTextDataLayer", "helpers.print_once", "intel_extension_for_pytorch.optimize", "numpy.random.seed", "torch.load", "torch.distributed.get_rank", "<builtin>.ValueError", "tb_logger.TensorBoardLogger", "helpers.print_dict", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.evaluator", "math.ceil", "os.environ.get", "torch.distributed.get_world_size", "torchvision.transforms.Compose", "<builtin>.len", "preprocessing.SpectrogramAugmentation", "torch.distributed.is_available", "tb_logger.DummyLogger", "loss.RNNTLoss", "optimizers.AdamW", "<builtin>.int", "intel_extension_for_pytorch.nn.utils._model_convert.replace_lstm_with_ipex_lstm", "optimizers.Novograd", "torch.distributed.is_initialized", "torch.distributed.init_process_group", "<builtin>.sum", "model_rnnt.RNNT", "torch.manual_seed", "preprocessing.AudioPreprocessing", "random.seed", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.train"], "toml.load": [], "helpers.add_blank_label": [], "helpers.print_dict": [], "preprocessing.AudioPreprocessing": [], "preprocessing.SpectrogramAugmentation": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<list1>.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<list1>.<lambda2>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<list1>.<lambda3>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<list1>.<lambda4>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<list2>.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<list2>.<lambda2>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.main.<list2>.<lambda3>": [], "dataset.AudioToTextDataLayer": [], "model_rnnt.RNNT": [], "loss.RNNTLoss": [], "optimizers.Novograd": [], "optimizers.AdamW": [], "intel_extension_for_pytorch.nn.utils._model_convert.replace_lstm_with_ipex_lstm": [], "decoders.RNNTGreedyDecoder": [], "tb_logger.TensorBoardLogger": [], "tb_logger.DummyLogger": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.train.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.print_once": ["torch.distributed.is_initialized", "<builtin>.print", "torch.distributed.get_rank"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.add_blank_label": ["<builtin>.ValueError", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.__rnnt_decoder_predictions_tensor": ["<builtin>.range", "<builtin>.dict", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.monitor_asr_train_progress": ["<builtin>.range", "<builtin>.dict", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.print_once", "metrics.word_error_rate", "torch.no_grad", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.__rnnt_decoder_predictions_tensor"], "metrics.word_error_rate": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.__gather_losses": ["torch.mean", "torch.stack"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.__gather_predictions": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.__rnnt_decoder_predictions_tensor"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.__gather_transcripts": ["<builtin>.range", "<builtin>.dict", "<builtin>.len", "<builtin>.zip"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.process_evaluation_batch": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.__gather_losses", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.__gather_predictions", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.__gather_transcripts"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.process_evaluation_epoch": ["torch.stack", "torch.distributed.all_reduce", "metrics.word_error_rate", "torch.distributed.is_initialized", "torch.tensor", "torch.mean", "torch.distributed.get_world_size"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.norm": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.helpers.print_dict": ["<builtin>.len", "<builtin>.print", "<builtin>.max", "<builtin>.str", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.rnn": ["<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.BNRNNSum.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.LstmDrop.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.lnlstm", "torch.jit.script"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.LstmDrop.__init__": ["torch.nn.LSTM", "<builtin>.super", "<builtin>.getattr", "torch.nn.Dropout"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.BNRNNSum.__init__": ["<builtin>.range", "torch.nn.Dropout", "torch.nn.ModuleList", "<builtin>.super", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.RNNLayer.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.lnlstm": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.StackedLSTM.__init__"], "torch.jit.script": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.OverLastDim.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.OverLastDim.forward": ["torch.nn.Module.view", "torch.nn.Module.size", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.OverLastDim.__init__"], "torch.nn.Module.size": [], "torch.nn.Module.view": [], "torch.nn.LSTM": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.LstmDrop.forward": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.RNNLayer.__init__": ["torch.nn.BatchNorm1d", "<builtin>.isinstance", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.OverLastDim.__init__", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.RNNLayer.forward": ["torch.nn.Module.contiguous", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.OverLastDim.__init__", "<builtin>.hasattr"], "torch.nn.Module.contiguous": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.RNNLayer._flatten_parameters": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.BNRNNSum.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.BNRNNSum._parse_hidden_state", "<builtin>.isinstance", "torch.stack"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.BNRNNSum._parse_hidden_state": ["<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.BNRNNSum._flatten_parameters": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.StackTime.__init__": ["<builtin>.int", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.StackTime.forward": ["<builtin>.range", "torch.ceil", "torch.cat", "torch.zeros_like"], "torch.ceil": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.StackedLSTM.__init__": ["<builtin>.super", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.init_stacked_lstm"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.LSTMLayer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.LSTMLayer.forward": ["<builtin>.range", "<builtin>.len", "torch.stack"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.LayerNormLSTMCell.__init__": ["torch.nn.LayerNorm", "<builtin>.super", "torch.nn.Parameter", "torch.randn", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.LayerNormLSTMCell.reset_parameters"], "torch.nn.LayerNorm": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.LayerNormLSTMCell.reset_parameters": ["math.sqrt", "torch.nn.Module.parameters", "torch.nn.init.uniform_"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.LayerNormLSTMCell.forward": ["torch.mm", "torch.sigmoid", "torch.tanh"], "torch.mm": [], "torch.tanh": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.init_stacked_lstm": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.LSTMLayer.__init__", "torch.nn.ModuleList"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.rnn.StackedLSTM.forward": ["torch.zeros"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.multiproc": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.multiproc.main"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.multiproc.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.multiproc.main": ["<builtin>.range", "subprocess.Popen", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.multiproc.parse_args", "<builtin>.print", "os.environ.copy", "time.sleep", "<builtin>.open", "<builtin>.str", "<builtin>.exit"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils.convert_librispeech": ["json.dump", "<builtin>.print", "preprocessing_utils.parallel_preprocess", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils.convert_librispeech.build_input_arr", "<builtin>.open", "argparse.ArgumentParser", "multiprocessing.cpu_count", "pandas.DataFrame"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils.convert_librispeech.build_input_arr": ["<builtin>.dict", "os.path.join", "os.path.relpath", "glob.glob", "<builtin>.open", "os.path.dirname"], "preprocessing_utils.parallel_preprocess": [], "pandas.DataFrame": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils.download_librispeech": ["os.path.join", "<builtin>.print", "download_utils.download_file", "download_utils.md5_checksum", "download_utils.extract", "argparse.ArgumentParser", "pandas.read_csv"], "download_utils.download_file": [], "download_utils.md5_checksum": [], "download_utils.extract": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils.preprocessing_utils": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils.preprocessing_utils.preprocess": ["os.makedirs", "sox.file_info.sample_rate", "os.path.basename", "os.path.join", "os.path.exists", "<builtin>.set", "sox.Transformer", "sox.file_info.info", "os.path.splitext", "<builtin>.list"], "sox.file_info.sample_rate": [], "sox.Transformer": [], "sox.file_info.info": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils.preprocessing_utils.parallel_preprocess": ["tqdm.tqdm", "<builtin>.len", "functools.partial", "multiprocessing.Pool", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils.download_utils": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils.download_utils.download_file": ["tqdm.tqdm", "os.path.isfile", "os.path.join", "<builtin>.print", "requests.get", "os.rename", "<builtin>.open", "<builtin>.int"], "os.rename": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils.download_utils.md5_checksum": ["<builtin>.iter", "hashlib.md5", "<builtin>.open"], "hashlib.md5": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils.download_utils.md5_checksum.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.utils.download_utils.extract": ["<builtin>.IOError", "tqdm.tqdm", "<builtin>.len", "tarfile.open"], "<builtin>.IOError": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.normalize_string": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.normalize_string.good_token", "text._clean_text"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.normalize_string.good_token": ["<builtin>.set"], "text._clean_text": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.__init__": ["<builtin>.range", "<builtin>.dict", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.parse_transcript", "os.path.join", "<builtin>.print", "<builtin>.min", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.normalize_string", "<builtin>.open", "json.load", "string.punctuation.replace", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.load_transcript", "<builtin>.isinstance", "<builtin>.sorted"], "string.punctuation.replace": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.load_transcript": ["<builtin>.open"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.parse_transcript": ["<builtin>.filter", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.__init__.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.parse_transcript.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.__getitem__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.__len__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.__iter__": ["<builtin>.iter"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.duration": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.filtered_duration": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.manifest.Manifest.data": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.audio_from_file": ["torch.tensor", "segment.AudioSegment.from_file"], "segment.AudioSegment.from_file": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.WaveformFeaturizer.__init__": ["perturb.AudioAugmentor"], "perturb.AudioAugmentor": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.WaveformFeaturizer.max_augmentation_length": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.WaveformFeaturizer.process": ["segment.AudioSegment.from_file", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.WaveformFeaturizer.process_segment"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.WaveformFeaturizer.process_segment": ["torch.tensor"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.WaveformFeaturizer.from_config": ["perturb.AudioAugmentor.from_config", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.WaveformFeaturizer.__init__"], "perturb.AudioAugmentor.from_config": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.normalize_batch": ["torch.zeros", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.splice_frames": ["<builtin>.range", "torch.cat", "torch.zeros_like"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.SpectrogramFeatures.__init__": ["<builtin>.int", "math.ceil", "<builtin>.super", "math.log2"], "math.log2": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.SpectrogramFeatures.get_seq_len": ["torch.ceil"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.SpectrogramFeatures": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.SpectrogramFeatures.forward": ["<builtin>.NotImplementedError", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.splice_frames", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.SpectrogramFeatures.get_seq_len", "torch.cat", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.normalize_batch", "torch.stft", "torch.randn_like", "<builtin>.hasattr", "torch.sqrt", "torch.log"], "torch.randn_like": [], "torch.stft": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.SpectrogramFeatures.from_config": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.SpectrogramFeatures.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.FilterbankFeatures.__init__": ["librosa.filters.mel", "torch.tensor", "<builtin>.super", "torch.nn.Module.register_buffer", "math.ceil", "math.log2", "<builtin>.int"], "librosa.filters.mel": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.FilterbankFeatures.get_seq_len": ["torch.ceil"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.FilterbankFeatures": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.FilterbankFeatures.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.FilterbankFeatures.fb.to", "<builtin>.NotImplementedError", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.splice_frames", "torch.cat", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.normalize_batch", "torch.stft", "torch.randn_like", "torch.log", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.FilterbankFeatures.get_seq_len", "torch.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.FilterbankFeatures.fb.to": [], "torch.matmul": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.FilterbankFeatures.from_config": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.FilterbankFeatures.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.FeatureFactory.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.features.FeatureFactory.from_config": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment._convert_samples_to_float32", "numpy.mean", "librosa.effects.trim", "librosa.core.resample"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment._convert_samples_to_float32": ["<builtin>.TypeError", "numpy.iinfo"], "librosa.core.resample": [], "librosa.effects.trim": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.__eq__": ["numpy.any", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.__ne__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.__eq__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.__str__": ["<builtin>.type"], "numpy.iinfo": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.from_file": ["<builtin>.int", "soundfile.SoundFile", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.__init__"], "soundfile.SoundFile": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.samples": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.sample_rate": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.num_samples": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.duration": ["<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.rms_db": ["numpy.mean", "numpy.log10"], "numpy.log10": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.gain_db": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.pad": ["numpy.pad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.segment.AudioSegment.subsegment": ["<builtin>.ValueError", "<builtin>.int", "<builtin>.round"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.Perturbation.max_augmentation_length": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.Perturbation.perturb": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.SpeedPerturbation.__init__": ["random.Random"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.SpeedPerturbation.max_augmentation_length": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.SpeedPerturbation.perturb": ["<builtin>.ValueError", "librosa.effects.time_stretch"], "librosa.effects.time_stretch": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.GainPerturbation.__init__": ["random.Random"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.GainPerturbation.perturb": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.ShiftPerturbation.__init__": ["random.Random"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.ShiftPerturbation.perturb": ["<builtin>.int", "<builtin>.abs"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.AudioAugmentor.__init__": ["random.Random"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.AudioAugmentor.perturb": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.AudioAugmentor.max_augmentation_length": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.AudioAugmentor.from_config": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.perturb.AudioAugmentor.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text._clean_text": ["<builtin>.Exception", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.numbers": ["inflect.engine", "re.compile"], "inflect.engine": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.numbers._remove_commas": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.numbers._expand_decimal_point": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.numbers._expand_dollars": ["<builtin>.int", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.numbers._expand_ordinal": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.numbers._expand_number": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.numbers._expand_time": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.numbers.normalize_numbers": ["re.sub"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.symbols": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners": ["re.compile"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.expand_abbreviations": ["re.sub"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.expand_numbers": ["numbers.normalize_numbers"], "numbers.normalize_numbers": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.lowercase": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.collapse_whitespace": ["re.sub"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.convert_to_ascii": ["unidecode.unidecode"], "unidecode.unidecode": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.remove_punctuation": ["re.sub"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.basic_cleaners": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.collapse_whitespace", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.lowercase"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.transliteration_cleaners": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.collapse_whitespace", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.lowercase", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.convert_to_ascii"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.english_cleaners": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.remove_punctuation", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.expand_numbers", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.expand_abbreviations", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.collapse_whitespace", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.convert_to_ascii", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.training.cpu.parts.text.cleaners.lowercase"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.metrics": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.metrics.__levenshtein": ["<builtin>.range", "<builtin>.len", "<builtin>.min", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.metrics.word_error_rate": ["<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.metrics.__levenshtein", "<builtin>.ValueError", "<builtin>.zip", "<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.tb_logger": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.tb_logger.DummyLogger.log_scalar": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.tb_logger.DummyLogger.log_params": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.tb_logger.DummyLogger.log_grad": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.tb_logger.DummyLogger.train_end": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.tb_logger.TensorBoardLogger.__init__": ["torch.utils.tensorboard.SummaryWriter", "<builtin>.str"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.tb_logger.TensorBoardLogger.log_scalar": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.tb_logger.TensorBoardLogger.log_grad": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.tb_logger.TensorBoardLogger.log_params": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.tb_logger.TensorBoardLogger.train_end": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.TransducerDecoder.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.TransducerDecoder._pred_step": ["model_rnnt.label_collate"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.TransducerDecoder._joint_step": ["<builtin>.len", "torch.nn.functional.log_softmax"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.TransducerDecoder._get_last_symb": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders._update_batch": ["<builtin>.range", "<builtin>.list", "torch.zeros_like"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder.decode": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder._greedy_decode_batch_origin", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder._greedy_decode_batch", "time.time", "torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder._greedy_decode_batch": ["<builtin>.range", "torch.empty", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder._pred_step_batch", "torch.zeros", "torch.ops.torch_ipex.rnnt_update_batch", "torch.tensor", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder._joint_step_batch", "torch.zeros_like"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder._greedy_decode_batch_origin": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder._pred_step_batch", "torch.tensor", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder._joint_step_batch", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders._update_batch"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder._greedy_decode": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.TransducerDecoder._joint_step", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.TransducerDecoder._pred_step", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.TransducerDecoder._get_last_symb"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder._pred_step_batch": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.decoders.RNNTGreedyDecoder._joint_step_batch": ["<builtin>.len", "torch.nn.functional.log_softmax"], "torch.ops.torch_ipex.rnnt_update_batch": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.init_weights": ["torch.nn.init.kaiming_uniform_", "<builtin>.type", "<builtin>.ValueError", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_uniform_", "torch.nn.init.kaiming_normal_", "torch.nn.init.zeros_", "torch.nn.init.ones_"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.get_same_padding": ["<builtin>.ValueError"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.AudioPreprocessing.__init__": ["torch.nn.Module.__init__", "parts.features.FeatureFactory.from_config"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.AudioPreprocessing.forward": ["apex.amp.disable_casts"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpectrogramAugmentation.__init__": ["torch.nn.Module.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpecCutoutRegions.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpecAugment.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpecCutoutRegions.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpecAugment.__init__": ["<builtin>.super", "torch.nn.Module.get"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpectrogramAugmentation": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpectrogramAugmentation.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpecCutoutRegions.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpecAugment.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpecAugment": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpecAugment.forward": ["torch.zeros", "random.uniform", "<builtin>.int", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpecCutoutRegions": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpecCutoutRegions.forward": ["torch.zeros", "random.uniform", "<builtin>.int", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperEncoder.__init__": ["torch.nn.Module.apply", "torch.nn.Module.__init__", "torch.nn.Sequential", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperBlock.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperBlock.__init__": ["<builtin>.range", "<builtin>.len", "torch.nn.ModuleList", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.get_same_padding", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperBlock._get_conv_bn_layer", "<builtin>.super", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperBlock._get_act_dropout_layer", "torch.nn.Sequential"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperEncoder.__init__.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.init_weights"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperEncoder.num_weights": ["<builtin>.sum", "torch.nn.Module.parameters"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperEncoder.forward": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperDecoderForCTC.__init__": ["torch.nn.Module.apply", "torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Conv1d"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperDecoderForCTC.__init__.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.init_weights"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperDecoderForCTC.num_weights": ["<builtin>.sum", "torch.nn.Module.parameters"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperDecoderForCTC.forward": ["torch.nn.functional.log_softmax"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.Jasper.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.AudioPreprocessing.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpectrogramAugmentation.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperDecoderForCTC.__init__", "torch.nn.Module.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperEncoder.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperAcousticModel.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperAcousticModel.__init__": ["torch.nn.Module.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.Jasper.num_weights": ["<builtin>.sum", "torch.nn.Module.parameters"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.Jasper.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.SpectrogramAugmentation.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.AudioPreprocessing.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperAcousticModel.forward"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperAcousticModel.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperDecoderForCTC.__init__", "torch.nn.Module.transpose", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperEncoder.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperEncoderDecoder.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperDecoderForCTC.__init__", "torch.nn.Module.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperEncoder.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperAcousticModel.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperEncoderDecoder.num_weights": ["<builtin>.sum", "torch.nn.Module.parameters"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperEncoderDecoder.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperAcousticModel.forward"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.MaskedConv1d.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.MaskedConv1d.get_seq_len": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.MaskedConv1d.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.MaskedConv1d.get_seq_len", "<builtin>.len", "<builtin>.super", "torch.arange"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperBlock._get_conv_bn_layer": ["torch.nn.BatchNorm1d", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.MaskedConv1d.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperBlock._get_act_dropout_layer": ["torch.nn.Hardtanh", "torch.nn.Dropout"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperBlock.num_weights": ["<builtin>.sum", "torch.nn.Module.parameters"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.JasperBlock.forward": ["<builtin>.isinstance", "<builtin>.enumerate"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.GreedyCTCDecoder.__init__": ["torch.nn.Module.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.GreedyCTCDecoder.forward": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.CTCLossNM.__init__": ["torch.nn.CTCLoss"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model.CTCLossNM.__call__": ["torch.mean"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.DistributedBucketBatchSampler.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.DistributedBucketBatchSampler.round_up_to", "<builtin>.len", "torch.distributed.get_rank", "<builtin>.RuntimeError", "torch.distributed.is_available", "math.ceil", "torch.distributed.get_world_size"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.DistributedBucketBatchSampler.round_up_to": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.DistributedBucketBatchSampler.__iter__": ["<builtin>.range", "numpy.arange", "<builtin>.min", "torch.Generator", "torch.randperm"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.DistributedBucketBatchSampler.__len__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.DistributedBucketBatchSampler.set_epoch": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.data_prefetcher.__init__": ["<builtin>.iter", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.data_prefetcher.preload", "torch.cuda.Stream"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.data_prefetcher.preload": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.data_prefetcher.next", "torch.cuda.stream"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.data_prefetcher.next": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.data_prefetcher.__next__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.data_prefetcher.__next__": ["torch.cuda.current_stream", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.data_prefetcher.preload"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.data_prefetcher.__iter__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.seq_collate_fn": ["torch.zeros", "<builtin>.len", "torch.stack", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.seq_collate_fn._find_max_len"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.seq_collate_fn._find_max_len": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.AudioToTextDataLayer.__init__": ["<builtin>.len", "torch.utils.data.DataLoader", "torch.device", "parts.features.WaveformFeaturizer.from_config", "<builtin>.print", "<builtin>.RuntimeError", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.DistributedBucketBatchSampler.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.AudioDataset.__init__", "torch.utils.data.distributed.DistributedSampler"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.AudioDataset.__init__": ["<builtin>.print", "parts.manifest.Manifest"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.AudioToTextDataLayer.__init__.<lambda1>": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.seq_collate_fn"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.AudioToTextDataLayer.__init__.<lambda2>": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.seq_collate_fn"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.AudioToTextDataLayer.__init__.<lambda3>": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.seq_collate_fn"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.AudioToTextDataLayer.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.AudioToTextDataLayer.data_iterator": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.AudioDataset.__getitem__": ["numpy.random.randint", "<builtin>.len", "torch.tensor"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.dataset.AudioDataset.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.BnReLUDropout.__init__": ["torch.nn.BatchNorm1d", "torch.nn.ReLU", "<builtin>.super", "torch.nn.Dropout"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.BnReLUDropout.forward": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT._joint_net", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT._encoder", "<builtin>.super", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT._predict"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT._encoder": ["rnn.StackTime", "torch.nn.ModuleDict", "rnn.rnn"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT._predict": ["torch.nn.Embedding", "torch.nn.ModuleDict", "rnn.rnn"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT._joint_net": ["torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Sequential", "torch.nn.Dropout"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT.predict", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.label_collate", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT.joint", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT.encode"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.label_collate": ["<builtin>.len", "<builtin>.type", "<builtin>.ValueError", "<builtin>.enumerate", "torch.LongTensor", "numpy.full", "<builtin>.isinstance", "<builtin>.max"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT.encode": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT.predict": ["torch.zeros", "torch.cat"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT.joint": ["torch.cat"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT.predict_batch_origin": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT.predict_batch": ["torch.zeros", "torch.ops.torch_ipex.rnnt_embedding"], "torch.ops.torch_ipex.rnnt_embedding": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.model_rnnt.RNNT.joint_inference": ["torch.cat"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpecCutoutRegions.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpecCutoutRegions": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpecCutoutRegions.forward": ["torch.zeros", "random.uniform", "<builtin>.int", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpecAugment.__init__": ["<builtin>.super", "torch.nn.Module.get"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpecAugment": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpecAugment.forward": ["torch.zeros", "random.uniform", "<builtin>.int", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpectrogramAugmentation.__init__": ["torch.nn.Module.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpecAugment.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpecCutoutRegions.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpectrogramAugmentation": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpectrogramAugmentation.forward": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpecAugment.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.SpecCutoutRegions.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.AudioPreprocessing.__init__": ["torch.nn.Module.__init__", "parts.features.FeatureFactory.from_config"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.preprocessing.AudioPreprocessing.forward": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.inference": ["<builtin>.vars", "helpers.print_dict", "ctypes.CDLL", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.inference.parse_args", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.inference.main"], "ctypes.CDLL": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.inference.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.inference.eval": ["<builtin>.dict", "tqdm.tqdm", "<builtin>.print", "<builtin>.min", "helpers.process_evaluation_batch", "torch.profiler.profile", "<builtin>.open", "intel_extension_for_pytorch.AmpConf", "helpers.process_evaluation_epoch", "torch.distributed.get_rank", "pickle.dump", "torch.cpu.amp.autocast", "<builtin>.range", "<builtin>.len", "parts.features.audio_from_file", "time.perf_counter", "<builtin>.int", "<builtin>.enumerate", "torch.no_grad", "torch.profiler.tensorboard_trace_handler"], "parts.features.audio_from_file": [], "intel_extension_for_pytorch.AmpConf": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.inference.main": ["helpers.add_blank_label", "toml.load", "<builtin>.print", "decoders.RNNTGreedyDecoder", "dataset.AudioToTextDataLayer", "intel_extension_for_pytorch.optimize", "numpy.random.seed", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.inference.eval", "torch.load", "helpers.print_dict", "rnn.IPEXStackTime", "math.ceil", "torch.distributed.get_world_size", "torchvision.transforms.Compose", "torch.cpu.amp.autocast", "<builtin>.len", "intel_extension_for_pytorch.nn.utils._model_convert.replace_lstm_with_ipex_lstm", "torch.jit.freeze", "torch.distributed.is_initialized", "torch.jit.trace", "model_rnnt.RNNT", "torch.manual_seed", "preprocessing.AudioPreprocessing", "torch.randn", "torch.no_grad", "random.seed"], "rnn.IPEXStackTime": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.inference.main.<list1>.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.inference.main.<list1>.<lambda2>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.inference.main.<list1>.<lambda3>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.print_once": ["torch.distributed.is_initialized", "<builtin>.print", "torch.distributed.get_rank"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.add_blank_label": ["<builtin>.ValueError", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.__rnnt_decoder_predictions_tensor": ["<builtin>.range", "<builtin>.dict", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.monitor_asr_train_progress": ["<builtin>.range", "<builtin>.dict", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.__rnnt_decoder_predictions_tensor", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.print_once", "metrics.word_error_rate", "torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.__gather_losses": ["torch.mean", "torch.stack"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.__gather_predictions": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.__rnnt_decoder_predictions_tensor"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.__gather_transcripts": ["<builtin>.range", "<builtin>.dict", "<builtin>.len", "<builtin>.zip"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.process_evaluation_batch": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.__gather_losses", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.__gather_predictions", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.__gather_transcripts"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.process_evaluation_epoch": ["torch.stack", "torch.distributed.all_reduce", "metrics.word_error_rate", "torch.distributed.is_initialized", "torch.tensor", "torch.mean", "torch.distributed.get_world_size"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.norm": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.helpers.print_dict": ["<builtin>.len", "<builtin>.print", "<builtin>.max", "<builtin>.str", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.rnn": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.BNRNNSum.__init__", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.LstmDrop.__init__", "<builtin>.ValueError", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.lnlstm", "torch.jit.script"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.LstmDrop.__init__": ["torch.nn.LSTM", "<builtin>.super", "<builtin>.getattr", "torch.nn.Dropout"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.BNRNNSum.__init__": ["<builtin>.range", "torch.nn.Dropout", "torch.nn.ModuleList", "<builtin>.super", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.RNNLayer.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.lnlstm": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.StackedLSTM.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.OverLastDim.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.OverLastDim.forward": ["torch.nn.Module.view", "torch.nn.Module.size", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.OverLastDim.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.LstmDrop.forward": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.RNNLayer.__init__": ["torch.nn.BatchNorm1d", "<builtin>.isinstance", "<builtin>.super", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.OverLastDim.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.RNNLayer.forward": ["torch.nn.Module.contiguous", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.OverLastDim.__init__", "<builtin>.hasattr"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.RNNLayer._flatten_parameters": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.BNRNNSum.forward": ["<builtin>.isinstance", "torch.stack", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.BNRNNSum._parse_hidden_state"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.BNRNNSum._parse_hidden_state": ["<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.BNRNNSum._flatten_parameters": ["<builtin>.isinstance"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.StackTime.__init__": ["<builtin>.int", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.StackTime.forward": ["<builtin>.range", "torch.ceil", "torch.cat", "torch.zeros_like"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.IPEXStackTime.__init__": ["<builtin>.int", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.IPEXStackTime.forward": ["torch.ceil", "torch.empty", "math.ceil"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.StackedLSTM.__init__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.init_stacked_lstm", "<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.LSTMLayer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.LSTMLayer.forward": ["<builtin>.range", "<builtin>.len", "torch.stack"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.LayerNormLSTMCell.__init__": ["torch.nn.LayerNorm", "<builtin>.super", "torch.nn.Parameter", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.LayerNormLSTMCell.reset_parameters", "torch.randn"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.LayerNormLSTMCell.reset_parameters": ["math.sqrt", "torch.nn.Module.parameters", "torch.nn.init.uniform_"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.LayerNormLSTMCell.forward": ["torch.mm", "torch.sigmoid", "torch.tanh"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.init_stacked_lstm": ["<builtin>.range", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.LSTMLayer.__init__", "torch.nn.ModuleList"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.rnn.StackedLSTM.forward": ["torch.zeros"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.multiproc": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.multiproc.main"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.multiproc.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.multiproc.main": ["<builtin>.range", "subprocess.Popen", "<builtin>.print", "<builtin>.str", "os.environ.copy", "time.sleep", "<builtin>.open", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.multiproc.parse_args", "<builtin>.exit"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils.convert_librispeech": ["json.dump", "<builtin>.print", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils.convert_librispeech.build_input_arr", "preprocessing_utils.parallel_preprocess", "<builtin>.open", "argparse.ArgumentParser", "multiprocessing.cpu_count", "pandas.DataFrame"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils.convert_librispeech.build_input_arr": ["<builtin>.dict", "os.path.join", "os.path.relpath", "glob.glob", "<builtin>.open", "os.path.dirname"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils.download_librispeech": ["os.path.join", "<builtin>.print", "download_utils.download_file", "download_utils.md5_checksum", "download_utils.extract", "argparse.ArgumentParser", "pandas.read_csv"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils.preprocessing_utils": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils.preprocessing_utils.preprocess": ["os.makedirs", "sox.file_info.sample_rate", "os.path.basename", "os.path.join", "os.path.exists", "<builtin>.set", "sox.Transformer", "sox.file_info.info", "os.path.splitext", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils.preprocessing_utils.parallel_preprocess": ["tqdm.tqdm", "<builtin>.len", "functools.partial", "multiprocessing.Pool", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils.download_utils": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils.download_utils.download_file": ["tqdm.tqdm", "os.path.isfile", "os.path.join", "<builtin>.print", "requests.get", "os.rename", "<builtin>.open", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils.download_utils.md5_checksum": ["<builtin>.iter", "hashlib.md5", "<builtin>.open"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils.download_utils.md5_checksum.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.utils.download_utils.extract": ["<builtin>.IOError", "tqdm.tqdm", "<builtin>.len", "tarfile.open"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.normalize_string": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.normalize_string.good_token", "<builtin>.print", "text._clean_text"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.normalize_string.good_token": ["<builtin>.set"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.__init__": ["<builtin>.range", "<builtin>.dict", "<builtin>.len", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.normalize_string", "os.path.join", "<builtin>.print", "<builtin>.min", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.load_transcript", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.parse_transcript", "<builtin>.open", "json.load", "string.punctuation.replace", "<builtin>.isinstance", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.load_transcript": ["<builtin>.open"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.parse_transcript": ["<builtin>.filter", "<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.__init__.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.parse_transcript.<lambda1>": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.__getitem__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.__len__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.__iter__": ["<builtin>.iter"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.duration": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.filtered_duration": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.manifest.Manifest.data": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.audio_from_file": ["torch.tensor", "segment.AudioSegment.from_file"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.WaveformFeaturizer.__init__": ["perturb.AudioAugmentor"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.WaveformFeaturizer.max_augmentation_length": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.WaveformFeaturizer.process": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.WaveformFeaturizer.process_segment", "segment.AudioSegment.from_file"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.WaveformFeaturizer.process_segment": ["torch.tensor"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.WaveformFeaturizer.from_config": ["perturb.AudioAugmentor.from_config", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.WaveformFeaturizer.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.normalize_batch": ["torch.zeros", "<builtin>.range"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.splice_frames": ["<builtin>.range", "torch.cat", "torch.zeros_like"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.SpectrogramFeatures.__init__": ["<builtin>.int", "math.ceil", "<builtin>.super", "math.log2"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.SpectrogramFeatures.get_seq_len": ["torch.ceil"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.SpectrogramFeatures": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.SpectrogramFeatures.forward": ["<builtin>.NotImplementedError", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.splice_frames", "torch.cat", "torch.stft", "torch.randn_like", "<builtin>.hasattr", "torch.sqrt", "torch.log", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.normalize_batch", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.SpectrogramFeatures.get_seq_len"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.SpectrogramFeatures.from_config": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.SpectrogramFeatures.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.FilterbankFeatures.__init__": ["librosa.filters.mel", "torch.tensor", "<builtin>.super", "torch.nn.Module.register_buffer", "math.ceil", "math.log2", "<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.FilterbankFeatures.get_seq_len": ["torch.ceil"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.FilterbankFeatures": ["torch.no_grad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.FilterbankFeatures.forward": ["<builtin>.NotImplementedError", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.splice_frames", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.FilterbankFeatures.fb.to", "torch.cat", "torch.stft", "torch.randn_like", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.FilterbankFeatures.get_seq_len", "torch.log", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.normalize_batch", "torch.matmul"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.FilterbankFeatures.fb.to": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.FilterbankFeatures.from_config": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.FilterbankFeatures.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.FeatureFactory.__init__": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.features.FeatureFactory.from_config": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.__init__": ["numpy.mean", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment._convert_samples_to_float32", "librosa.effects.trim", "librosa.core.resample"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment._convert_samples_to_float32": ["<builtin>.TypeError", "numpy.iinfo"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.__eq__": ["numpy.any", "<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.__ne__": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.__eq__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.__str__": ["<builtin>.type"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.from_file": ["<builtin>.int", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.__init__", "soundfile.SoundFile"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.samples": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.sample_rate": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.num_samples": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.duration": ["<builtin>.float"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.rms_db": ["numpy.mean", "numpy.log10"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.gain_db": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.pad": ["numpy.pad"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.segment.AudioSegment.subsegment": ["<builtin>.ValueError", "<builtin>.int", "<builtin>.round"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.Perturbation.max_augmentation_length": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.Perturbation.perturb": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.SpeedPerturbation.__init__": ["random.Random"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.SpeedPerturbation.max_augmentation_length": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.SpeedPerturbation.perturb": ["<builtin>.ValueError", "librosa.effects.time_stretch"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.GainPerturbation.__init__": ["random.Random"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.GainPerturbation.perturb": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.ShiftPerturbation.__init__": ["random.Random"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.ShiftPerturbation.perturb": ["<builtin>.int", "<builtin>.abs"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.AudioAugmentor.__init__": ["random.Random"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.AudioAugmentor.perturb": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.AudioAugmentor.max_augmentation_length": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.AudioAugmentor.from_config": ["<builtin>.print", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.perturb.AudioAugmentor.__init__"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text._clean_text": ["<builtin>.Exception", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.numbers": ["inflect.engine", "re.compile"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.numbers._remove_commas": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.numbers._expand_decimal_point": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.numbers._expand_dollars": ["<builtin>.int", "<builtin>.len"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.numbers._expand_ordinal": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.numbers._expand_number": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.numbers._expand_time": ["<builtin>.int"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.numbers.normalize_numbers": ["re.sub"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.symbols": ["<builtin>.list"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners": ["re.compile"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.expand_abbreviations": ["re.sub"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.expand_numbers": ["numbers.normalize_numbers"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.lowercase": [], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.collapse_whitespace": ["re.sub"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.convert_to_ascii": ["unidecode.unidecode"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.remove_punctuation": ["re.sub"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.basic_cleaners": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.lowercase", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.collapse_whitespace"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.transliteration_cleaners": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.convert_to_ascii", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.lowercase", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.collapse_whitespace"], "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.english_cleaners": ["...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.expand_abbreviations", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.expand_numbers", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.lowercase", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.remove_punctuation", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.collapse_whitespace", "...repos_filtered.IntelAI.models.models.language_modeling.pytorch.rnnt.inference.cpu.parts.text.cleaners.convert_to_ascii"], "...repos_filtered.IntelAI.models.docs": [], "...repos_filtered.IntelAI.models.docs.notebooks": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.unit_test": ["unittest.main"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.summarize_unit_test": ["<builtin>.print", "argparse.ArgumentParser", "profiling.unit_test_utils.Utils"], "profiling.unit_test_utils.Utils": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils": ["<builtin>.print", "importlib.util.find_spec"], "importlib.util.find_spec": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TimeLiner.__init__": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TimeLiner.update_timeline": ["json.loads"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TimeLiner.update_timeline_from_runmeta": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TimeLiner.update_timeline", "tensorflow.python.client.timeline.Timeline"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TimeLiner.save": ["json.dump", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.tfSession.__init__": ["<builtin>.super", "tensorflow.compat.v1.RunOptions"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.tfSession.run": ["<builtin>.super"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.tfSession.save_timeline": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.tfProfileHook.__init__": ["tensorflow.estimator.SecondOrStepTimer", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TimeLiner.__init__"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.tfProfileHook.begin": ["<builtin>.RuntimeError", "tensorflow.python.training.training_util.get_global_step"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.tfProfileHook.before_run": ["tensorflow.compat.v1.RunOptions", "tensorflow.estimator.SessionRunArgs"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.tfProfileHook.after_run": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TimeLiner.save", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TimeLiner.update_timeline_from_runmeta"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.tfProfileHook.end": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TimeLiner.save"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TensorflowUtils.is_mkl_enabled": ["tensorflow.pywrap_tensorflow.IsMklEnabled", "tensorflow.python.util._pywrap_util_port.IsMklEnabled", "tensorflow.__version__.split", "os.environ.get", "<builtin>.int", "tensorflow.python._pywrap_util_port.IsMklEnabled"], "tensorflow.python._pywrap_util_port.IsMklEnabled": [], "tensorflow.python.util._pywrap_util_port.IsMklEnabled": [], "tensorflow.pywrap_tensorflow.IsMklEnabled": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.GitOps.__init__": ["git.Repo", "<builtin>.print", "git.Repo.init"], "git.Repo.init": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.GitOps.check_git_status": ["<builtin>.print"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.GitOps.find_commit_with_keyword": ["git.Repo", "<builtin>.print", "git.Repo.init", "<builtin>.list"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PlatformUtils.__init__": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PlatformUtils.dump_platform_info": ["sys.path.insert", "psutil.virtual_memory", "os.path.join", "<builtin>.print", "psutil.cpu_freq", "platform_util.CPUInfo", "os.path.abspath", "<builtin>.int", "os.path.dirname"], "sys.path.insert": [], "platform_util.CPUInfo": [], "psutil.cpu_freq": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.CommonUtils.__init__": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.CommonUtils.found_files_in_folder": ["fnmatch.fnmatch", "os.listdir"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.CommonUtils.found_files_in_folders": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.CommonUtils.found_files_in_folder"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.CSVCommonUtils.__init__": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.CSVCommonUtils.create_csv_file"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.CSVCommonUtils.create_csv_file": ["<builtin>.print", "csv.DictWriter", "<builtin>.open", "os.path.isfile"], "csv.DictWriter": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.CSVCommonUtils.write_to_csv": ["csv.DictWriter", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.CSVCommonUtils.read_from_csv": ["os.path.isfile", "<builtin>.print", "csv.DictReader", "<builtin>.open", "collections.defaultdict"], "csv.DictReader": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.CSVCommonUtils.delete_csv": ["os.remove", "<builtin>.print", "os.path.isfile"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.__init__": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TensorflowUtils.is_mkl_enabled"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.read_section": ["configparser.ConfigParser"], "configparser.ConfigParser": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.read_supported_section": ["configparser.ConfigParser", "<builtin>.eval"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.convert_configs_to_pd_dataframe": ["configparser.ConfigParser", "<builtin>.eval", "pandas.DataFrame"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.convert_configs_to_pd_dataframe.<lambda1>": ["<builtin>.len"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.read_value_from_section": ["configparser.ConfigParser"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.write_value_from_section": ["configparser.ConfigParser", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.parsing_custom_args": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.read_value_from_section"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.read_config": ["<builtin>.int", "configparser.ConfigParser", "<builtin>.len", "<builtin>.eval"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.get_parameters": ["<builtin>.str"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.find_pretrained_model_in_folder": ["<builtin>.len", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.CommonUtils.__init__", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.CommonUtils.found_files_in_folder"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.untar_file": ["<builtin>.print", "os.path.exists", "tarfile.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.uncompress_file": ["shutil.move", "os.path.exists", "os.path.splitext", "os.system", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.untar_file"], "shutil.move": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.download_dataset": ["<builtin>.print", "os.path.exists", "os.system"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.download_pretrained_model": ["shutil.move", "<builtin>.print", "os.path.exists", "os.mkdir", "os.system"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.patch_model_to_enable_timeline": ["<builtin>.print", "os.path.exists", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.GitOps.check_git_status", "os.system", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.GitOps.find_commit_with_keyword", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.GitOps.__init__"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.ConfigFile.unpatch_model_to_enable_timeline": ["<builtin>.print", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.GitOps.check_git_status", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.GitOps.find_commit_with_keyword", "os.system"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.__init__": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.autolabel": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.draw_perf_diag": ["numpy.arange", "<builtin>.len", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.autolabel"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.draw_perf_ratio_diag": ["numpy.arange", "<builtin>.len", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "<builtin>.float", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.autolabel"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.create_csv_logfile": ["<builtin>.print", "csv.DictWriter", "<builtin>.open", "os.path.isfile"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.get_diff_from_csv_filenames": ["<builtin>.range", "<builtin>.print", "<builtin>.len"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.log_infer_perfcsv": ["csv.DictWriter", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.log_train_perfcsv": ["csv.DictWriter", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.read_number_from_csv": ["<builtin>.len", "os.path.isfile", "<builtin>.print", "statistics.mean", "statistics.stdev", "csv.DictReader", "<builtin>.open", "<builtin>.float"], "statistics.mean": [], "statistics.stdev": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.plot_perf_graph": ["numpy.arange", "<builtin>.len", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.plot_perf_graph.autolabel"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.plot_perf_graph.autolabel": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.plot_perf_graph_v2": ["<builtin>.range", "numpy.arange", "<builtin>.len", "matplotlib.pyplot.subplots", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.plot_perf_graph_v2.autolabel", "matplotlib.pyplot.show"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.plot_perf_graph_v2.autolabel": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.draw_perf_diag_from_csv": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.plot_perf_graph", "<builtin>.print", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.read_number_from_csv", "<builtin>.float"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.draw_perf_ratio_diag_from_csv": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.plot_perf_graph", "<builtin>.print", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.read_number_from_csv", "<builtin>.float"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.draw_perf_diag_from_csvs": ["<builtin>.print", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.plot_perf_graph_v2", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.read_number_from_csv", "<builtin>.float"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.draw_perf_ratio_diag_from_csvs": ["<builtin>.print", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.plot_perf_graph_v2", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.read_number_from_csv", "<builtin>.float"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.parse_stdout": ["<builtin>.str"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.read_throughput": ["<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.read_accuracy": ["<builtin>.float", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.PerfPresenter.read_iteration_time": ["<builtin>.float", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.__init__": ["pandas.set_option"], "pandas.set_option": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.show": ["matplotlib.pyplot.show", "matplotlib.pyplot.clf"], "matplotlib.pyplot.clf": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.read_timeline": ["<builtin>.enumerate", "<builtin>.set", "pandas.DataFrame", "<builtin>.open", "<builtin>.str", "<builtin>.iter", "json.loads", "<builtin>.list", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.summarize_item": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.summarize_barh": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.summarize_item"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.summarize_pie": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.summarize_item"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.opname": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.demangle"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.demangle": ["cxxfilt.demangle"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.opbase": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.opname"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.blockname": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.postprocess_timeline": [], "cxxfilt.demangle": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.get_tf_ops_time": ["<builtin>.float", "csv.DictWriter", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.summarize_item", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.plot_summary_barth": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.summarize_barh"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.plot_summary_pie": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.summarize_pie"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.merge_two_csv_files": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.create_csv_among_extra_common_ops": ["pandas.Series"], "pandas.Series": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.merge_two_csv_files_v2": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.create_csv_among_extra_common_ops"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.compare_bar_pie_charts": ["matplotlib.image.imread", "os.listdir", "matplotlib.pyplot.subplots"], "matplotlib.image.imread": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.plot_compare_bar_charts": ["numpy.arange", "<builtin>.len", "matplotlib.pyplot.figure", "matplotlib.pyplot.show", "csv.DictReader", "<builtin>.float", "<builtin>.open", "<builtin>.str", "matplotlib.pyplot.savefig"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.plot_compare_ratio_bar_charts": ["numpy.arange", "<builtin>.len", "matplotlib.pyplot.axhline", "matplotlib.pyplot.figure", "matplotlib.pyplot.show", "csv.DictReader", "<builtin>.float", "<builtin>.open", "<builtin>.str", "matplotlib.pyplot.savefig"], "matplotlib.pyplot.axhline": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.plot_pie_chart": ["<builtin>.dict", "matplotlib.pyplot.figure", "matplotlib.pyplot.show", "csv.DictReader", "<builtin>.float", "<builtin>.open", "matplotlib.pyplot.savefig"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.TFTimelinePresenter.plot_compare_pie_charts": ["<builtin>.dict", "matplotlib.pyplot.figure", "matplotlib.pyplot.show", "csv.DictReader", "<builtin>.float", "<builtin>.open", "matplotlib.pyplot.savefig"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.oneDNNLog.__init_": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.oneDNNLog.load_log": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.oneDNNLog.load_log_mkldnn", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.oneDNNLog.load_log_dnnl"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.oneDNNLog.load_log_dnnl": ["pandas.read_csv"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.oneDNNLog.load_log_mkldnn": ["<builtin>.print", "pandas.read_csv"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.oneDNNUtils.__init_": ["matplotlib.pyplot.figure"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.oneDNNUtils.breakdown": ["matplotlib.pyplot.figure", "<builtin>.print", "<builtin>.dict", "numpy.dtype"], "numpy.dtype": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.oneDNNUtils.stats_comp": ["matplotlib.pyplot.figure", "<builtin>.print", "pandas.concat", "numpy.dtype"], "pandas.concat": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.profile_utils.oneDNNUtils.parse_raw_output_to_csv": ["<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils": ["unittest.main"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.get_run_cmd": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.run": ["<builtin>.print", "subprocess.Popen"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runJupyterNotebook": ["os.path.isfile", "nbformat.read", "<builtin>.print", "nbconvert.preprocessors.ExecutePreprocessor", "<builtin>.open", "nbformat.write"], "nbformat.read": [], "nbconvert.preprocessors.ExecutePreprocessor": [], "nbformat.write": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runJupyterNotebook"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runJupyterNotebook"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeCmd": ["<builtin>.str", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runJupyterNotebook"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeTimelneCmd": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runJupyterNotebook"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.found_files_in_folder": ["fnmatch.fnmatch", "os.listdir"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.createFolderForResults": ["os.path.isdir", "os.mkdir", "os.getcwd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.rmIntermediateResults": ["os.path.isdir", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.found_files_in_folder", "<builtin>.print", "os.remove", "os.getcwd", "shutil.rmtree"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.mvTimeline2Results": ["os.path.isdir", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.found_files_in_folder", "shutil.move", "<builtin>.print", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.createFolderForResults", "os.getcwd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.mvCSV2Results": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.found_files_in_folder", "os.path.isfile", "shutil.move", "<builtin>.print", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.get_perf_ratio_from_csv", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.log_model_speedupcsv", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.createFolderForResults", "os.getcwd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.get_perf_ratio_from_csv": ["<builtin>.print", "profiling.profile_utils.PerfPresenter", "<builtin>.float"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.log_model_speedupcsv": ["<builtin>.open", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.create_csv_logfile", "os.path.isfile", "csv.DictWriter"], "profiling.profile_utils.PerfPresenter": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.create_csv_logfile": ["<builtin>.print", "csv.DictWriter", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.test_patches": ["<builtin>.print", "profiling.profile_utils.ConfigFile", "os.getcwd"], "profiling.profile_utils.ConfigFile": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.ConfFile.__init__": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.ConfFile.read_section": ["configparser.ConfigParser"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.ConfFile.read_value_from_section": ["configparser.ConfigParser"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.ConfFile.write_value_from_section": ["configparser.ConfigParser", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPatches.setUp": ["<builtin>.print", "profiling.profile_utils.ConfigFile", "os.getcwd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPatches.tearDown": ["<builtin>.print"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPatches.test_patche_0": ["<builtin>.print", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.test_patches"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.setUp": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.ConfFile.__init__", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.createFolderForResults", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.ConfFile.read_value_from_section"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.tearDown": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.mvTimeline2Results", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.rmIntermediateResults"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_0_env_setup": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.run", "<builtin>.eval", "os.environ.get"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_a_resnet50_infer_fp32": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_b_resnet50v1_5_infer_fp32": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_d_densenet169_infer_fp32": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_g_rfcn_infer_fp32": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_h_inceptionv3_infer_fp32": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_i_inceptionv4_infer_fp32": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_j_mobilenet_v1_infer_fp32": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_k_resnet101_infer_fp32": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_l_wide_deep_large_infer_fp32": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_m_bert_infer_fp32": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_n_transformer_mlperf_train_fp32": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_o_ssd_mobilenet_infer_fp32": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfComparisonCmd", "unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runPerfTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfComparison.test_z_summarize": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.run"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfDataType.setUp": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.ConfFile.__init__", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.createFolderForResults", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.ConfFile.read_value_from_section"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfDataType.tearDown": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.mvTimeline2Results", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.Utils.rmIntermediateResults"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfDataType.test_0_env_setup": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.run", "<builtin>.eval", "os.environ.get"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfDataType.test_a_resnet50v1_5_infer": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeCmd", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfDataType.test_b_resnet50_infer": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeCmd", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfDataType.test_c_inceptionv4_infer": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeCmd", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfDataType.test_e_resnet101_infer": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeCmd", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfDataType.test_f_rfcn_infer": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeCmd", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfDataType.test_g_ssdmobilenet_infer": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeCmd", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfDataType.test_i_transformer_mlperf_training": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeCmd", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.runDataTypeTimelneCmd"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.TestPerfDataType.test_z_summarize": ["unittest.TestCase.assertEqual", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.profiling.unit_test_utils.RunCmd.run"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils": ["<builtin>.print"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.MKLUtils.is_mkl_enabled": ["<builtin>.len", "torch.__config__.show"], "torch.__config__.show": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PlatformUtils.__init_": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PlatformUtils.dump_platform_info": ["sys.path.insert", "psutil.virtual_memory", "os.path.join", "<builtin>.print", "psutil.cpu_freq", "platform_util.CPUInfo", "os.path.abspath", "<builtin>.int", "os.path.dirname"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.__init__": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.MKLUtils.is_mkl_enabled"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.read_section": ["configparser.ConfigParser"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.read_supported_section": ["configparser.ConfigParser", "<builtin>.eval"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.convert_configs_to_pd_dataframe": ["configparser.ConfigParser", "pandas.DataFrame"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.convert_configs_to_pd_dataframe.<lambda1>": ["<builtin>.len"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.read_value_from_section": ["configparser.ConfigParser"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.write_value_from_section": ["configparser.ConfigParser", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.read_config": ["configparser.ConfigParser", "<builtin>.len", "<builtin>.print"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.get_main_parameters": ["<builtin>.str"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.get_launch_parameters": ["<builtin>.str"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.uncompress_file": ["shutil.move", "os.path.exists", "os.system"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.download_dataset": ["<builtin>.print", "os.path.exists", "os.system"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.ConfigFile.download_pretrained_model": ["shutil.move", "<builtin>.print", "os.path.exists", "os.mkdir", "os.system"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.__init__": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.autolabel": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.draw_perf_diag": ["numpy.arange", "<builtin>.len", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.autolabel"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.draw_perf_ratio_diag": ["numpy.arange", "<builtin>.len", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "<builtin>.float", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.autolabel"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.create_csv_logfile": ["<builtin>.print", "csv.DictWriter", "<builtin>.open", "os.path.isfile"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.get_diff_from_csv_filenames": ["<builtin>.range", "<builtin>.print", "<builtin>.len"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.log_infer_perfcsv": ["csv.DictWriter", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.log_train_perfcsv": ["csv.DictWriter", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.read_number_from_csv": ["<builtin>.len", "statistics.mean", "statistics.stdev", "csv.DictReader", "<builtin>.float", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.plot_perf_graph": ["numpy.arange", "<builtin>.len", "matplotlib.pyplot.subplots", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.plot_perf_graph.autolabel", "matplotlib.pyplot.show"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.plot_perf_graph.autolabel": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.plot_perf_graph_v2": ["<builtin>.range", "numpy.arange", "<builtin>.len", "matplotlib.pyplot.subplots", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.plot_perf_graph_v2.autolabel", "matplotlib.pyplot.show"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.plot_perf_graph_v2.autolabel": [], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.draw_perf_diag_from_csv": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.read_number_from_csv", "<builtin>.float", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.plot_perf_graph"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.draw_perf_ratio_diag_from_csv": ["<builtin>.print", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.read_number_from_csv", "<builtin>.float", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.plot_perf_graph"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.draw_perf_diag_from_csvs": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.read_number_from_csv", "<builtin>.float", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.plot_perf_graph_v2"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.draw_perf_ratio_diag_from_csvs": ["...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.read_number_from_csv", "<builtin>.float", "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.plot_perf_graph_v2"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.parse_stdout": ["<builtin>.str"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.read_throughput": ["<builtin>.print", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.read_accuracy": ["<builtin>.float", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.perf_analysis.pytorch.profiling.profile_utils.PerfPresenter.read_iteration_time": ["<builtin>.float", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization": [], "...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow.format2json": ["...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow.format2json.transfer_res_to_json"], "...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow.format2json.transfer_res_to_json": ["<builtin>.len", "json.dump", "<builtin>.print", "<builtin>.sum", "<builtin>.float", "<builtin>.open"], "...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow": [], "...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow.lpot_quantize_model": ["tensorflow.compat.v1.disable_eager_execution", "sys.exit", "tensorflow.get_logger", "...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow.lpot_quantize_model.quantize"], "tensorflow.get_logger": [], "...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow.lpot_quantize_model.save_int8_frozen_pb": ["<builtin>.print", "tensorflow.python.platform.gfile.GFile"], "tensorflow.python.platform.gfile.GFile": [], "...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow.lpot_quantize_model.auto_tune": ["lpot.Quantization"], "lpot.Quantization": [], "...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow.lpot_quantize_model.check_dataset_folder": ["<builtin>.len", "os.path.exists", "os.listdir", "os.path.isfile"], "...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow.lpot_quantize_model.quantize": ["...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow.lpot_quantize_model.save_int8_frozen_pb", "<builtin>.print", "...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow.lpot_quantize_model.check_dataset_folder", "...repos_filtered.IntelAI.models.docs.notebooks.low_precision_optimization.tensorflow.lpot_quantize_model.auto_tune"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.pytorch_text_classification": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.pytorch_text_classification.utils": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.pytorch_text_classification.utils.download_and_extract_zip": ["os.makedirs", "zipfile.ZipFile", "os.path.basename", "os.path.join", "os.path.exists", "wget.download"], "wget.download": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize": ["...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.main"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.get_args": ["...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.validate_args", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.validate_args": ["<builtin>.ValueError", "os.path.isdir", "os.path.exists"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.create_examples": ["run_classifier.InputExample", "tokenization.convert_to_unicode", "<builtin>.enumerate"], "run_classifier.InputExample": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.read_tsv": ["<builtin>.open", "csv.reader"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.get_dev_examples": ["os.path.join", "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.create_examples", "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.read_tsv"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.Accuracy.__init__": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.Accuracy.update": ["<builtin>.len", "<builtin>.list", "numpy.argmax"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.Accuracy.reset": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.Accuracy.result": ["numpy.array", "numpy.sum"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.TF_BERTDataSet.__init__": ["<builtin>.print", "run_classifier.convert_examples_to_features", "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.get_dev_examples"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.TF_BERTDataSet.__getitem__": ["<builtin>.len", "numpy.array"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.TF_BERTDataSet.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.main": ["neural_compressor.experimental.common.Model", "neural_compressor.experimental.common.DataLoader", "os.path.join", "neural_compressor.experimental.common.Metric", "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.get_args", "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning.quantize.TF_BERTDataSet.__init__", "tokenization.FullTokenizer", "neural_compressor.experimental.Quantization"], "neural_compressor.experimental.Quantization": [], "neural_compressor.experimental.common.Model": [], "neural_compressor.experimental.common.DataLoader": [], "neural_compressor.experimental.common.Metric": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.bert_classifier_fine_tuning": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_utils": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_utils.get_model_map": ["<builtin>.len", "pandas.set_option", "<builtin>.print", "<builtin>.open", "json.load", "pandas.DataFrame"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_utils.download_and_extract_zip": ["os.makedirs", "zipfile.ZipFile", "os.path.basename", "os.path.join", "os.path.exists", "wget.download"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_qa_utils": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_qa_utils.create_mini_dataset_file": ["<builtin>.range", "<builtin>.len", "<builtin>.ValueError", "<builtin>.print", "os.path.exists", "random.sample", "json.dumps", "<builtin>.open", "json.load", "<builtin>.str"], "random.sample": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_qa_utils.display_predictions": ["...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_qa_utils.display_predictions.get_data_list", "pandas.DataFrame"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_qa_utils.display_predictions.get_data_list": ["<builtin>.set", "<builtin>.len", "<builtin>.open", "json.load"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_qa_utils.get_config_and_vocab_from_zip": ["zipfile.ZipFile", "os.path.join", "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_qa_utils.get_config_and_vocab_from_zip.get_file_from_zip", "os.path.exists", "os.remove", "wget.download"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_qa_utils.get_config_and_vocab_from_zip.get_file_from_zip": ["os.path.join", "os.path.exists", "glob.glob", "os.replace", "os.path.basename"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_qa_utils.predict_squad_customized": ["<builtin>.range", "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_qa_utils.predict_squad_customized.predict_step", "<builtin>.len", "<builtin>.print", "tensorflow.function", "official.nlp.bert.run_squad_helper.get_dataset_fn", "official.common.distribute_utils.get_distribution_strategy", "<builtin>.iter"], "official.common.distribute_utils.get_distribution_strategy": [], "official.nlp.bert.run_squad_helper.get_dataset_fn": [], "tensorflow.function": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_qa_utils.predict_squad_customized.predict_step": ["tensorflow.nest.map_structure", "<builtin>.next"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tfhub_bert.bert_qa_utils.predict_squad_customized.predict_step._replicated_step": ["<builtin>.dict"], "tensorflow.nest.map_structure": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.pytorch_object_detection.model_utils": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.pytorch_object_detection.model_utils.get_retrainable_model": ["math.log", "torch.nn.Conv2d", "torch.nn.init.normal_", "torch.nn.init.constant_"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.pytorch_object_detection": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.pytorch_object_detection.dataset_utils": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.pytorch_object_detection.dataset_utils.PennFudanDataset.__init__": ["os.path.join", "os.listdir", "<builtin>.list", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.pytorch_object_detection.dataset_utils.PennFudanDataset.__getitem__": ["<builtin>.range", "torch.zeros", "<builtin>.len", "numpy.max", "numpy.array", "os.path.join", "torch.tensor", "numpy.min", "numpy.where", "torch.ones", "PIL.Image.open", "torch.as_tensor", "numpy.unique"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.pytorch_object_detection.dataset_utils.PennFudanDataset.__len__": ["<builtin>.len"], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tf_image_classification.model_util": [], "...repos_filtered.IntelAI.models.docs.notebooks.transfer_learning.tf_image_classification": [], "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark": ["...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.main", "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.__init__"], "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.__init__": ["...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.parse_args", "sys.exit", "<builtin>.super", "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.validate_args"], "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.validate_args": ["<builtin>.ValueError", "os.path.realpath", "<builtin>.print", "glob.glob", "<builtin>.str", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.main": ["os.path.realpath", "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.get_model_dir", "os.getenv", "platform.system", "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.get_env_vars", "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.run_bare_metal", "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.run_docker_container", "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.get_model_use_case", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.get_model_use_case": ["<builtin>.range", "<builtin>.len", "os.path.join", "<builtin>.ValueError", "glob.glob", "<builtin>.next"], "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.get_model_dir": ["os.path.join", "os.path.isdir"], "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.get_env_vars": ["<builtin>.ValueError", "<builtin>.str"], "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.run_bare_metal": ["common.platform_util.PlatformUtil", "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark._launch_command", "os.path.join", "<builtin>.ValueError", "common.base_model_init.BaseModelInitializer", "<builtin>.str"], "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark.run_docker_container": ["...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark._launch_command", "os.path.join", "<builtin>.print", "os.environ.get", "os.path.basename", "os.path.dirname"], "common.platform_util.PlatformUtil": [], "common.base_model_init.BaseModelInitializer": [], "...repos_filtered.IntelAI.models.benchmarks.launch_benchmark.LaunchBenchmark._launch_command": ["os.getpgid", "platform.system", "subprocess.Popen", "os.killpg"], "os.getpgid": [], "os.killpg": [], "...repos_filtered.IntelAI.models.benchmarks": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.training": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.training.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.training.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.training.fp32.model_init.ModelInitializer.run_inference_sanity_checks": ["<builtin>.print", "sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.training.fp32.model_init.ModelInitializer.__init__": ["...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.training.fp32.model_init.ModelInitializer.run_inference_sanity_checks", "os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "argparse.ArgumentParser", "os.path.dirname"], "common.base_model_init.BaseModelInitializer.set_kmp_vars": [], "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads": [], "common.base_model_init.set_env_var": [], "common.base_model_init.BaseModelInitializer.get_command_prefix": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.training.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "common.base_model_init.BaseModelInitializer.run_command": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference.bfloat16.model_init.ModelInitializer.__init__": ["<builtin>.print", "<builtin>.super"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference.fp32.model_init.ModelInitializer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference.common_script": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference.common_script.dien_model_init": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference.common_script.dien_model_init.DienModelInitializer.run_inference_sanity_checks": ["<builtin>.print", "sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference.common_script.dien_model_init.DienModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference.common_script.dien_model_init.DienModelInitializer.run_inference_sanity_checks", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.dien.inference.common_script.dien_model_init.DienModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.training": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.training.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.training.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.training.bfloat16.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.training.bfloat16.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.training.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.training.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.training.fp32.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.training.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.inference": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.inference.fp32.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.ncf.inference.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep.inference": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep.inference.fp32.model_init.ModelInitializer.__init__": ["os.path.join", "<builtin>.print", "<builtin>.super", "<builtin>.str", "os.environ.get", "common.base_model_init.set_env_var"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep.inference.fp32.model_init.ModelInitializer.run": ["os.path.join", "os.chdir", "os.environ.get", "os.getcwd", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep.inference.fp32.data_download": ["<builtin>.print", "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep.inference.fp32.data_download.main", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep.inference.fp32.data_download.download_and_clean_file": ["<builtin>.print", "requests.get", "sys.exit", "<builtin>.open"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep.inference.fp32.data_download.main": ["os.path.join", "os.path.exists", "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep.inference.fp32.data_download.download_and_clean_file", "os.mkdir"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.training": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.training.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.training.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.training.fp32.model_init.ModelInitializer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.training.fp32.model_init.ModelInitializer.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.training.fp32.model_init.ModelInitializer.run_benchmark": ["os.path.join", "common.base_model_init.BaseModelInitializer.run_command", "common.base_model_init.BaseModelInitializer.add_args_to_command", "common.base_model_init.BaseModelInitializer.get_command_prefix"], "common.base_model_init.BaseModelInitializer.add_args_to_command": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.training.fp32.model_init.ModelInitializer.run": ["...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.training.fp32.model_init.ModelInitializer.parse_args", "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.training.fp32.model_init.ModelInitializer.run_benchmark"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.fp32.model_init.ModelInitializer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.fp32.model_init.ModelInitializer.parse_args": ["os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.fp32.model_init.ModelInitializer.run_benchmark": ["os.path.join", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.add_args_to_command", "<builtin>.getattr", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.fp32.model_init.ModelInitializer.run": ["...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.fp32.model_init.ModelInitializer.run_benchmark", "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.fp32.model_init.ModelInitializer.parse_args"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.int8.model_init.ModelInitializer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.int8.model_init.ModelInitializer.parse_args": ["os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.int8.model_init.ModelInitializer.run_benchmark": ["os.path.join", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.add_args_to_command", "<builtin>.getattr", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.int8.model_init.ModelInitializer.run": ["...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.int8.model_init.ModelInitializer.run_benchmark", "...repos_filtered.IntelAI.models.benchmarks.recommendation.tensorflow.wide_deep_large_ds.inference.int8.model_init.ModelInitializer.parse_args"], "...repos_filtered.IntelAI.models.benchmarks.reinforcement": [], "...repos_filtered.IntelAI.models.benchmarks.reinforcement.tensorflow": [], "...repos_filtered.IntelAI.models.benchmarks.reinforcement.tensorflow.minigo": [], "...repos_filtered.IntelAI.models.benchmarks.reinforcement.tensorflow.minigo.training": [], "...repos_filtered.IntelAI.models.benchmarks.reinforcement.tensorflow.minigo.training.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.reinforcement.tensorflow.minigo.training.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.reinforcement.tensorflow.minigo.training.fp32.model_init.ModelInitializer.__init__": ["argparse.ArgumentParser", "<builtin>.super"], "...repos_filtered.IntelAI.models.benchmarks.reinforcement.tensorflow.minigo.training.fp32.model_init.ModelInitializer.run": ["os.chdir", "common.base_model_init.BaseModelInitializer.run_command", "os.getcwd"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.model_init.ModelInitializer.__init__": ["common.base_model_init.set_env_var", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "os.path.dirname", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.listdir", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference.bfloat16.model_init.ModelInitializer.run": ["<builtin>.print", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.model_init.ModelInitializer.__init__": ["common.base_model_init.set_env_var", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "os.path.dirname", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.listdir", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference.fp32.model_init.ModelInitializer.run": ["<builtin>.print", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.model_init.ModelInitializer.__init__": ["common.base_model_init.set_env_var", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "os.path.dirname", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.listdir", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet_mlperf.inference.int8.model_init.ModelInitializer.run": ["<builtin>.print", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.maskrcnn": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.maskrcnn.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.maskrcnn.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.maskrcnn.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.maskrcnn.inference.fp32.model_init.ModelInitializer.__init__": ["<builtin>.ValueError", "os.path.realpath", "os.path.join", "os.path.dirname", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.maskrcnn.inference.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.unet": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.unet.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.unet.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.unet.inference.fp32.unet_infer": ["<builtin>.range", "os.path.realpath", "<builtin>.print", "tf_unet.unet.Unet", "time.time", "tensorflow.contrib.tfprof.ProfileContext", "tf_unet.image_gen.GrayScaleDataProvider", "matplotlib.pyplot.switch_backend", "argparse.ArgumentParser", "os.path.dirname"], "matplotlib.pyplot.switch_backend": [], "tf_unet.image_gen.GrayScaleDataProvider": [], "tf_unet.unet.Unet": [], "tensorflow.contrib.tfprof.ProfileContext": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.unet.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.unet.inference.fp32.model_init.ModelInitializer.parse_custom_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.unet.inference.fp32.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.unet.inference.fp32.model_init.ModelInitializer.parse_custom_args", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "<builtin>.str", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.unet.inference.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet.inference.fp32.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.image_segmentation.tensorflow.3d_unet.inference.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.common.base_benchmark_util": [], "...repos_filtered.IntelAI.models.benchmarks.common.base_benchmark_util.BaseBenchmarkUtil.__init__": ["...repos_filtered.IntelAI.models.benchmarks.common.base_benchmark_util.BaseBenchmarkUtil._define_args", "...repos_filtered.IntelAI.models.benchmarks.common.base_benchmark_util.BaseBenchmarkUtil._validate_args", "common.platform_util.PlatformUtil"], "...repos_filtered.IntelAI.models.benchmarks.common.base_benchmark_util.BaseBenchmarkUtil._define_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.common.base_benchmark_util.BaseBenchmarkUtil._validate_args": ["<builtin>.len", "<builtin>.ValueError", "<builtin>.print", "<builtin>.int", "sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.common.base_benchmark_util.BaseBenchmarkUtil.initialize_model": ["<builtin>.len", "<builtin>.__import__", "<builtin>.ImportError", "os.path.join", "os.path.realpath", "os.path.dirname"], "<builtin>.__import__": [], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util": [], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.CPUInfo.__init__": ["...repos_filtered.IntelAI.models.benchmarks.common.platform_util.CPUInfo._get_core_membind_info", "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.CPUInfo._sort_membind_info"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.CPUInfo._get_core_membind_info": ["re.search", "subprocess.check_output"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.CPUInfo._sort_membind_info": ["<builtin>.range", "<builtin>.len", "<builtin>.int", "<builtin>.max"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.CPUInfo.sockets": ["<builtin>.int", "<builtin>.len"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.CPUInfo.cores": ["<builtin>.int"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.CPUInfo.cores_per_socket": ["<builtin>.len"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.CPUInfo.binding_information": [], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil.__init__": ["<builtin>.ValueError", "platform.system", "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil.linux_init", "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil.windows_init", "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil.mac_init"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil.windows_init": ["<builtin>.len", "<builtin>.print", "re.escape", "re.findall", "subprocess.check_output", "<builtin>.int", "sys.exit", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil.mac_init": ["<builtin>.NotImplementedError"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil.linux_init": ["<builtin>.range", "<builtin>.len", "subprocess.Popen", "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil._get_list_from_string_ranges", "<builtin>.print", "<builtin>.hasattr", "<builtin>.enumerate", "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil._get_cpuset", "subprocess.check_output", "<builtin>.str", "<builtin>.int", "sys.exit", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil._get_list_from_string_ranges": ["<builtin>.range", "<builtin>.len", "<builtin>.set", "<builtin>.int", "<builtin>.list"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil._get_cpuset": ["<builtin>.hasattr", "<builtin>.print", "os.path.exists", "<builtin>.open"], "re.escape": [], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil.cores_per_socket": ["<builtin>.int"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil.sockets": ["<builtin>.int"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil.cores": ["<builtin>.int"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil.logical_cores": ["<builtin>.int"], "...repos_filtered.IntelAI.models.benchmarks.common.platform_util.PlatformUtil.numa_nodes": ["<builtin>.int"], "...repos_filtered.IntelAI.models.benchmarks.common": [], "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init": [], "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init.set_env_var": ["<builtin>.str", "os.environ.get"], "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init.BaseModelInitializer.__init__": ["<builtin>.len", "<builtin>.ValueError", "<builtin>.str", "<builtin>.int", "<builtin>.isinstance"], "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init.BaseModelInitializer.run_command": ["<builtin>.print", "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init.BaseModelInitializer.run_numactl_multi_instance", "os.system", "os.getcwd", "<builtin>.str"], "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init.BaseModelInitializer.run_numactl_multi_instance": ["sys.stdout.flush", "<builtin>.len", "<builtin>.all", "os.path.basename", "<builtin>.ValueError", "os.path.join", "<builtin>.print", "os.path.exists", "<builtin>.enumerate", "re.findall", "time.sleep", "<builtin>.open", "os.system", "<builtin>.str", "<builtin>.int", "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init.BaseModelInitializer.group_cores"], "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init.BaseModelInitializer.group_cores": ["<builtin>.zip", "<builtin>.iter", "<builtin>.list", "<builtin>.len"], "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init.BaseModelInitializer.get_command_prefix": ["<builtin>.range", "<builtin>.len", "<builtin>.ValueError", "<builtin>.print", "glob.glob", "<builtin>.str"], "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init.BaseModelInitializer.add_args_to_command": ["<builtin>.vars", "<builtin>.getattr"], "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads": ["<builtin>.len", "<builtin>.print", "<builtin>.min", "<builtin>.sum", "<builtin>.int"], "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init.BaseModelInitializer.set_kmp_vars": ["<builtin>.print", "os.path.exists", "<builtin>.open", "json.load", "...repos_filtered.IntelAI.models.benchmarks.common.base_model_init.set_env_var"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance": [], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.buckets": ["<builtin>.range", "<builtin>.len"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.__init__": ["common.platform_util.CPUInfo"], "common.platform_util.CPUInfo": [], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.is_basic_configuration": ["...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix._platform_single_instance_args"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix._platform_single_instance_args": [], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.sockets": ["<builtin>.Exception"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.cores_per_socket": ["<builtin>.Exception"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.cores": [], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.instances_per_socket": ["<builtin>.Exception", "<builtin>.int"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.instances": [], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.cores_per_instance": ["<builtin>.Exception", "<builtin>.int"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.sockets_per_instance": [], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.get_cores_range": [], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.split_cores": ["<builtin>.Exception", "<builtin>.range", "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.buckets"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.generate_multi_instance_ranges": ["<builtin>.len", "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.split_cores", "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.get_cores_range"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.generate_multi_instance_prefix": ["...repos_filtered.IntelAI.models.benchmarks.common.utils.multi_instance.InferencePrefix.generate_multi_instance_ranges"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators": [], "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_for_link": ["argparse.ArgumentTypeError", "os.stat", "os.path.islink", "os.path.isfile"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_no_spaces": ["argparse.ArgumentTypeError"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_positive_number": ["<builtin>.int", "argparse.ArgumentTypeError"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_positive_number_or_equal_to_negative_one": ["<builtin>.int", "argparse.ArgumentTypeError"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_valid_filename": ["...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_for_link", "argparse.ArgumentTypeError", "os.path.isfile"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_valid_folder": ["...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_for_link", "os.path.isdir", "argparse.ArgumentTypeError"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_valid_file_or_dir": ["...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_for_link", "os.path.exists", "argparse.ArgumentTypeError"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_volume_mount": ["argparse.ArgumentTypeError", "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_valid_folder"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_shm_size": ["re.match", "argparse.ArgumentTypeError"], "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_num_cores_per_instance": ["<builtin>.str", "...repos_filtered.IntelAI.models.benchmarks.common.utils.validators.check_positive_number", "argparse.ArgumentTypeError"], "...repos_filtered.IntelAI.models.benchmarks.common.utils": [], "...repos_filtered.IntelAI.models.benchmarks.common.tensorflow": [], "...repos_filtered.IntelAI.models.benchmarks.common.tensorflow.run_tf_benchmark": ["...repos_filtered.IntelAI.models.benchmarks.common.tensorflow.run_tf_benchmark.ModelBenchmarkUtil.main", "common.base_benchmark_util.BaseBenchmarkUtil.__init__"], "...repos_filtered.IntelAI.models.benchmarks.common.tensorflow.run_tf_benchmark.ModelBenchmarkUtil.main": ["common.base_benchmark_util.BaseBenchmarkUtil.initialize_model", "argparse.ArgumentParser"], "common.base_benchmark_util.BaseBenchmarkUtil.initialize_model": [], "common.base_benchmark_util.BaseBenchmarkUtil.__init__": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5.inference.fp32.model_graph_to_saved_model": ["tensorflow.compat.v1.app.run", "tensorflow.compat.v1.app.flags.DEFINE_string", "tensorflow.compat.v1.app.flags.DEFINE_integer"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5.inference.fp32.model_graph_to_saved_model.main": ["tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def", "<builtin>.len", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "<builtin>.print", "tensorflow.compat.v1.import_graph_def", "tensorflow.compat.v1.GraphDef", "tensorflow.compat.v1.compat.v1.saved_model.build_tensor_info", "tensorflow.compat.v1.gfile.GFile", "<builtin>.str", "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder", "tensorflow.compat.v1.Session", "sys.exit"], "tensorflow.compat.v1.import_graph_def": [], "tensorflow.compat.v1.compat.v1.saved_model.build_tensor_info": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5.inference.fp32.util": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5.inference.fp32.util.preprocess_image": ["tensorflow.compat.v1.image.convert_image_dtype", "tensorflow.compat.v1.subtract", "tensorflow.compat.v1.image.resize_bilinear", "tensorflow.compat.v1.image.decode_jpeg", "tensorflow.compat.v1.image.central_crop", "tensorflow.compat.v1.multiply", "tensorflow.compat.v1.expand_dims", "tensorflow.compat.v1.squeeze"], "tensorflow.compat.v1.subtract": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5.inference.fp32.util.parse_example_proto": ["tensorflow.compat.v1.parse_single_example", "tensorflow.compat.v1.FixedLenFeature", "tensorflow.compat.v1.cast"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5.inference.fp32.image_recognition_benchmark": ["tensorflow.compat.v1.disable_eager_execution", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.app.flags.DEFINE_string", "tensorflow.compat.v1.app.flags.DEFINE_integer"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5.inference.fp32.image_recognition_benchmark.sample_images": ["tensorflow.Session", "numpy.array", "os.path.join", "tensorflow.data.TFRecordDataset", "util.preprocess_image", "random.choice", "os.listdir"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5.inference.fp32.image_recognition_benchmark.sample_images.<lambda1>": ["util.parse_example_proto"], "util.parse_example_proto": [], "util.preprocess_image": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5.inference.fp32.image_recognition_benchmark.main": ["<builtin>.range", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.resnet50v1_5.inference.fp32.image_recognition_benchmark.sample_images", "grpc.insecure_channel", "<builtin>.print", "numpy.random.rand", "tensorflow_serving.apis.predict_pb2.PredictRequest", "tensorflow_serving.apis.prediction_service_pb2_grpc.PredictionServiceStub", "tensorflow.make_tensor_proto", "time.time"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32.model_graph_to_saved_model": ["tensorflow.compat.v1.app.run", "tensorflow.compat.v1.app.flags.DEFINE_string", "tensorflow.compat.v1.app.flags.DEFINE_integer"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32.model_graph_to_saved_model.main": ["tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def", "<builtin>.len", "tensorflow.python.tools.optimize_for_inference_lib.optimize_for_inference", "<builtin>.print", "tensorflow.compat.v1.import_graph_def", "tensorflow.compat.v1.GraphDef", "tensorflow.compat.v1.gfile.GFile", "<builtin>.str", "tensorflow.compat.v1.saved_model.utils.build_tensor_info", "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder", "tensorflow.compat.v1.Session", "sys.exit"], "tensorflow.compat.v1.saved_model.utils.build_tensor_info": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32.util": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32.util.preprocess_image": ["tensorflow.compat.v1.image.convert_image_dtype", "tensorflow.compat.v1.subtract", "tensorflow.compat.v1.image.resize_bilinear", "tensorflow.compat.v1.image.decode_jpeg", "tensorflow.compat.v1.image.central_crop", "tensorflow.compat.v1.multiply", "tensorflow.compat.v1.expand_dims", "tensorflow.compat.v1.squeeze"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32.util.parse_example_proto": ["tensorflow.compat.v1.parse_single_example", "tensorflow.compat.v1.FixedLenFeature", "tensorflow.compat.v1.cast"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32.image_recognition_client": ["tensorflow.compat.v1.disable_eager_execution", "tensorflow.compat.v1.app.flags.DEFINE_string", "tensorflow.compat.v1.app.run"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32.image_recognition_client.main": ["grpc.insecure_channel", "<builtin>.print", "requests.get", "tensorflow.compat.v1.global_variables_initializer", "tensorflow_serving.apis.predict_pb2.PredictRequest", "<builtin>.str", "tensorflow_serving.apis.prediction_service_pb2_grpc.PredictionServiceStub", "util.preprocess_image", "tensorflow.make_tensor_proto", "<builtin>.open", "numpy.argmax", "tensorflow.reshape", "tensorflow.compat.v1.Session", "sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32.image_recognition_benchmark": ["tensorflow.compat.v1.disable_eager_execution", "tensorflow.compat.v1.app.run", "tensorflow.compat.v1.app.flags.DEFINE_string", "tensorflow.compat.v1.app.flags.DEFINE_integer"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32.image_recognition_benchmark.sample_images": ["tensorflow.Session", "numpy.array", "os.path.join", "tensorflow.data.TFRecordDataset", "util.preprocess_image", "random.choice", "os.listdir"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32.image_recognition_benchmark.sample_images.<lambda1>": ["util.parse_example_proto"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32.image_recognition_benchmark.main": ["<builtin>.range", "grpc.insecure_channel", "<builtin>.print", "numpy.random.rand", "tensorflow_serving.apis.predict_pb2.PredictRequest", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow_serving.inceptionv3.inference.fp32.image_recognition_benchmark.sample_images", "tensorflow_serving.apis.prediction_service_pb2_grpc.PredictionServiceStub", "tensorflow.make_tensor_proto", "time.time", "sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.fp32.model_init.ModelInitializer.__init__": ["common.base_model_init.set_env_var", "time.strftime", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "os.path.dirname", "time.gmtime", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.listdir", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.fp32.model_init.ModelInitializer.run": ["<builtin>.print", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.int8.model_init.ModelInitializer.__init__": ["common.base_model_init.set_env_var", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.int8.model_init.ModelInitializer.parse_args": ["os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.int8.model_init.ModelInitializer.run_benchmark_or_accuracy": ["os.path.join", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str", "common.base_model_init.BaseModelInitializer.run_command", "os.listdir"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.int8.model_init.ModelInitializer.run_calibration": ["os.path.join", "common.base_model_init.BaseModelInitializer.run_command", "common.base_model_init.BaseModelInitializer.add_args_to_command", "common.base_model_init.BaseModelInitializer.get_command_prefix"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.int8.model_init.ModelInitializer.run": ["...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.int8.model_init.ModelInitializer.run_benchmark_or_accuracy", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.int8.model_init.ModelInitializer.run_calibration", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50.inference.int8.model_init.ModelInitializer.parse_args"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.training": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.training.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.training.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.training.bfloat16.model_init.ModelInitializer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.training.common_resnet50": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.training.common_resnet50.resnet50_model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.training.common_resnet50.resnet50_model_init.ResNet50ModelInitializer.__init__": ["common.base_model_init.set_env_var", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "os.path.dirname", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.listdir", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.training.common_resnet50.resnet50_model_init.ResNet50ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.training.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.training.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.training.fp32.model_init.ModelInitializer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.bfloat16.model_init.ModelInitializer.__init__": ["common.base_model_init.set_env_var", "time.strftime", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "os.path.dirname", "time.gmtime", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.listdir", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.bfloat16.model_init.ModelInitializer.run": ["<builtin>.print", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.fp32.model_init.ModelInitializer.__init__": ["common.base_model_init.set_env_var", "time.strftime", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "os.path.dirname", "time.gmtime", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.listdir", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.fp32.model_init.ModelInitializer.run": ["<builtin>.print", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.int8.model_init.ModelInitializer.__init__": ["<builtin>.super", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.int8.model_init.ModelInitializer.parse_args": ["common.base_model_init.set_env_var", "os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.int8.model_init.ModelInitializer.run_benchmark_or_accuracy": ["os.path.join", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str", "common.base_model_init.BaseModelInitializer.run_command", "os.listdir"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.int8.model_init.ModelInitializer.run_calibration": ["os.path.join", "common.base_model_init.BaseModelInitializer.run_command", "common.base_model_init.BaseModelInitializer.add_args_to_command", "common.base_model_init.BaseModelInitializer.get_command_prefix"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.int8.model_init.ModelInitializer.run": ["...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.int8.model_init.ModelInitializer.run_benchmark_or_accuracy", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.int8.model_init.ModelInitializer.run_calibration", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet50v1_5.inference.int8.model_init.ModelInitializer.parse_args"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.bfloat16.model_init.ModelInitializer.__init__": ["common.base_model_init.set_env_var", "os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.BaseModelInitializer.add_args_to_command", "<builtin>.str", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.bfloat16.model_init.ModelInitializer.parse_args", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.bfloat16.model_init.ModelInitializer.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.bfloat16.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.fp32.model_init.ModelInitializer.__init__": ["...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.fp32.model_init.ModelInitializer.parse_args", "common.base_model_init.set_env_var", "os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.BaseModelInitializer.add_args_to_command", "<builtin>.str", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.fp32.model_init.ModelInitializer.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.int8.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.super", "<builtin>.hasattr", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.int8.model_init.ModelInitializer.parse_args", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.BaseModelInitializer.add_args_to_command", "common.base_model_init.set_env_var", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.int8.model_init.ModelInitializer.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.mobilenet_v1.inference.int8.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.densenet169": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.densenet169.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.densenet169.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.densenet169.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.densenet169.inference.fp32.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.densenet169.inference.fp32.model_init.ModelInitializer.parse_args", "common.base_model_init.BaseModelInitializer.add_args_to_command", "common.base_model_init.set_env_var", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.densenet169.inference.fp32.model_init.ModelInitializer.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.densenet169.inference.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.fp32.model_init.ModelInitializer.__init__": ["common.base_model_init.set_env_var", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "os.path.dirname", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.listdir", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.int8.model_init.ModelInitializer.__init__": ["os.path.join", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.int8.model_init.ModelInitializer.parse_args", "os.path.realpath", "os.path.dirname", "<builtin>.super", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.set_env_var", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.int8.model_init.ModelInitializer.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.int8.model_init.ModelInitializer.run_benchmark_or_accuracy": ["os.path.join", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str", "common.base_model_init.BaseModelInitializer.run_command", "os.listdir"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.int8.model_init.ModelInitializer.run_calibration": ["os.path.join", "common.base_model_init.BaseModelInitializer.run_command", "common.base_model_init.BaseModelInitializer.add_args_to_command", "common.base_model_init.BaseModelInitializer.get_command_prefix"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.int8.model_init.ModelInitializer.run": ["...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.int8.model_init.ModelInitializer.run_calibration", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.resnet101.inference.int8.model_init.ModelInitializer.run_benchmark_or_accuracy"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.inceptionv4_model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.inceptionv4_model_init.InceptionV4ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.inceptionv4_model_init.InceptionV4ModelInitializer.parse_args": ["os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.inceptionv4_model_init.InceptionV4ModelInitializer.add_command_prefix": ["common.base_model_init.BaseModelInitializer.get_command_prefix"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.inceptionv4_model_init.InceptionV4ModelInitializer.run_benchmark": ["os.path.join", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.inceptionv4_model_init.InceptionV4ModelInitializer.add_command_prefix", "common.base_model_init.BaseModelInitializer.add_args_to_command", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.inceptionv4_model_init.InceptionV4ModelInitializer.run_accuracy": ["os.path.join", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.inceptionv4_model_init.InceptionV4ModelInitializer.add_command_prefix", "common.base_model_init.BaseModelInitializer.add_args_to_command", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.inceptionv4_model_init.InceptionV4ModelInitializer.run": ["...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.inceptionv4_model_init.InceptionV4ModelInitializer.parse_args", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.inceptionv4_model_init.InceptionV4ModelInitializer.run_benchmark", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.inceptionv4_model_init.InceptionV4ModelInitializer.run_accuracy"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.fp32.model_init.ModelInitializer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv4.inference.int8.model_init.ModelInitializer.__init__": ["<builtin>.super"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.fp32.model_init.ModelInitializer.__init__": ["common.base_model_init.set_env_var", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "os.path.dirname", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.listdir", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.int8.model_init.ModelInitializer.__init__": ["common.base_model_init.set_env_var", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.int8.model_init.ModelInitializer.parse_args": ["os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.int8.model_init.ModelInitializer.run_benchmark": ["os.path.join", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.add_args_to_command", "<builtin>.str", "common.base_model_init.BaseModelInitializer.run_command", "os.listdir"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.int8.model_init.ModelInitializer.run_accuracy": ["os.path.join", "common.base_model_init.BaseModelInitializer.run_command", "common.base_model_init.BaseModelInitializer.add_args_to_command", "common.base_model_init.BaseModelInitializer.get_command_prefix"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.int8.model_init.ModelInitializer.run_calibration": ["os.path.join", "common.base_model_init.BaseModelInitializer.run_command", "common.base_model_init.BaseModelInitializer.add_args_to_command", "common.base_model_init.BaseModelInitializer.get_command_prefix"], "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.int8.model_init.ModelInitializer.run": ["...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.int8.model_init.ModelInitializer.run_benchmark", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.int8.model_init.ModelInitializer.parse_args", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.int8.model_init.ModelInitializer.run_calibration", "...repos_filtered.IntelAI.models.benchmarks.image_recognition.tensorflow.inceptionv3.inference.int8.model_init.ModelInitializer.run_accuracy"], "...repos_filtered.IntelAI.models.benchmarks.object_detection": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark": ["<builtin>.print", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.benchmark", "argparse.ArgumentParser", "<builtin>.vars"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.check_for_link": ["argparse.ArgumentTypeError", "os.stat", "os.path.islink", "os.path.isfile"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.check_valid_folder": ["os.path.isdir", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.check_for_link", "argparse.ArgumentTypeError"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.check_valid_model": ["argparse.ArgumentError"], "argparse.ArgumentError": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.check_valid_protocol": ["argparse.ArgumentError"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.get_random_image": ["numpy.array", "os.path.join", "PIL.Image.open", "random.choice", "os.listdir"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.make_request": ["numpy.repeat", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.get_random_image", "grpc.insecure_channel", "tensorflow_serving.apis.predict_pb2.PredictRequest", "tensorflow_serving.apis.prediction_service_pb2_grpc.PredictionServiceStub", "tensorflow.make_tensor_proto", "numpy.expand_dims"], "numpy.repeat": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.send_request": ["requests.post"], "requests.post": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.benchmark": ["<builtin>.range", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.make_request", "<builtin>.print", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow_serving.ssd-mobilenet.inference.fp32.object_detection_benchmark.send_request", "time.time"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.fp32.model_init.ModelInitializer.run_inference_sanity_checks": ["sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.fp32.model_init.ModelInitializer.__init__": ["...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.fp32.model_init.ModelInitializer.run_inference_sanity_checks", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.fp32.model_init.ModelInitializer.parse_custom_args", "os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.fp32.model_init.ModelInitializer.parse_custom_args": ["<builtin>.ValueError", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.fp32.model_init.ModelInitializer.run_perf_command": ["common.base_model_init.set_env_var", "common.base_model_init.BaseModelInitializer.run_command", "<builtin>.str"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.fp32.model_init.ModelInitializer.run_accuracy_command": ["os.path.isdir", "<builtin>.len", "<builtin>.ValueError", "os.path.join", "os.path.exists", "<builtin>.print", "common.base_model_init.BaseModelInitializer.run_command", "sys.exit", "os.listdir"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.fp32.model_init.ModelInitializer.run": ["...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.fp32.model_init.ModelInitializer.run_accuracy_command", "os.path.join", "os.chdir", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.fp32.model_init.ModelInitializer.run_perf_command", "os.getcwd", "os.environ.get"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.int8.model_init.ModelInitializer.__init__": ["os.path.join", "sys.path.remove", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.int8.model_init.ModelInitializer.parse_args", "os.path.dirname"], "sys.path.remove": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.int8.model_init.ModelInitializer.parse_args": ["<builtin>.ValueError", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.int8.model_init.ModelInitializer.validate_args", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.int8.model_init.ModelInitializer.validate_args": ["<builtin>.ValueError", "os.path.isdir", "os.path.exists"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.int8.model_init.ModelInitializer.run_perf_command": ["common.base_model_init.set_env_var", "common.base_model_init.BaseModelInitializer.run_command", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.int8.model_init.ModelInitializer.run_accuracy_command": ["<builtin>.ValueError", "os.path.exists", "common.base_model_init.BaseModelInitializer.run_command", "common.base_model_init.BaseModelInitializer.get_command_prefix"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.int8.model_init.ModelInitializer.run": ["os.path.join", "os.chdir", "os.getcwd", "os.environ.get", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.int8.model_init.ModelInitializer.run_accuracy_command", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.rfcn.inference.int8.model_init.ModelInitializer.run_perf_command"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.fp32.model_init.ModelInitializer.run_inference_sanity_checks": ["sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.fp32.model_init.ModelInitializer.__init__": ["...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.fp32.model_init.ModelInitializer.parse_custom_args", "os.path.join", "os.path.realpath", "os.path.exists", "os.path.dirname", "<builtin>.ValueError", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.fp32.model_init.ModelInitializer.run_inference_sanity_checks", "common.base_model_init.set_env_var", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.fp32.model_init.ModelInitializer.parse_custom_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.fp32.model_init.ModelInitializer.run": ["os.chdir", "common.base_model_init.BaseModelInitializer.run_command", "os.getcwd"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.int8.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.int8.model_init.ModelInitializer.validate_args", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.int8.model_init.ModelInitializer.validate_args": ["<builtin>.ValueError", "os.path.isdir", "os.path.exists"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.int8.model_init.ModelInitializer.parse_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.int8.model_init.ModelInitializer.run_perf_command": ["...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.int8.model_init.ModelInitializer.parse_args", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str", "common.base_model_init.set_env_var", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.int8.model_init.ModelInitializer.run_accuracy_command": ["<builtin>.str", "common.base_model_init.BaseModelInitializer.run_command", "common.base_model_init.set_env_var"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.int8.model_init.ModelInitializer.run": ["...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.int8.model_init.ModelInitializer.run_perf_command", "os.path.join", "os.chdir", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.faster_rcnn.inference.int8.model_init.ModelInitializer.run_accuracy_command", "os.getcwd"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference.bfloat16.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference.bfloat16.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference.fp32.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference.int8.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-mobilenet.inference.int8.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.training": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.training.common_model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.training.common_model_init.run_training_checks": ["sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.training.common_model_init.SSDResnet34ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "<builtin>.int", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.set_env_var", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.training.common_model_init.run_training_checks", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.training.common_model_init.SSDResnet34ModelInitializer.run": ["<builtin>.print", "os.chdir", "time.time", "os.getcwd", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.training.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.training.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.training.bfloat16.model_init.ModelInitializer.__init__": ["<builtin>.print", "<builtin>.super"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.training.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.training.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.training.fp32.model_init.ModelInitializer.__init__": ["<builtin>.print", "<builtin>.super"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.model_init.ModelInitializer.run_inference_sanity_checks": ["<builtin>.print", "sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "argparse.ArgumentParser", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.model_init.ModelInitializer.run_inference_sanity_checks", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.bfloat16.model_init.ModelInitializer.run": ["os.path.join", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.fp32.model_init.ModelInitializer.run_inference_sanity_checks": ["<builtin>.print", "sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.fp32.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.fp32.model_init.ModelInitializer.run_inference_sanity_checks", "common.base_model_init.set_env_var", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.fp32.model_init.ModelInitializer.run": ["os.path.join", "common.base_model_init.BaseModelInitializer.run_command", "os.environ.get"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.int8.model_init.ModelInitializer.run_inference_sanity_checks": ["<builtin>.print", "sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.int8.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.int8.model_init.ModelInitializer.run_inference_sanity_checks", "common.base_model_init.set_env_var", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.object_detection.tensorflow.ssd-resnet34.inference.int8.model_init.ModelInitializer.run": ["os.path.join", "common.base_model_init.BaseModelInitializer.run_command", "os.environ.get"], "...repos_filtered.IntelAI.models.benchmarks.language_translation": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_graph_to_saved_model": ["tensorflow.compat.v1.app.run", "tensorflow.compat.v1.app.flags.DEFINE_string", "tensorflow.compat.v1.app.flags.DEFINE_integer"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_graph_to_saved_model.main": ["tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def", "<builtin>.len", "<builtin>.print", "tensorflow.compat.v1.global_variables_initializer", "tensorflow.compat.v1.GraphDef", "<builtin>.str", "tensorflow.io.gfile.GFile", "tensorflow.import_graph_def", "tensorflow.compat.v1.saved_model.build_tensor_info", "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder", "tensorflow.compat.v1.Session", "sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_benchmark": ["<builtin>.vars", "<builtin>.print", "tensorflow.compat.v1.logging.set_verbosity", "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_benchmark.benchmark", "argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_benchmark.check_for_link": ["argparse.ArgumentTypeError", "os.stat", "os.path.islink", "os.path.isfile"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_benchmark.check_valid_file_or_folder": ["os.path.isdir", "argparse.ArgumentTypeError", "os.path.isfile", "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_benchmark.check_for_link"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_benchmark.input_generator_ts": ["<builtin>.len", "<builtin>.enumerate", "tensorflow.io.gfile.GFile", "utils.tokenizer.Subtokenizer", "<builtin>.sorted"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_benchmark.input_generator_ts.<lambda1>": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_benchmark._trim_and_decode": ["<builtin>.list", "utils.tokenizer.Subtokenizer"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_benchmark.benchmark": ["...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_benchmark._trim_and_decode", "<builtin>.len", "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow_serving.transformer_lt_official.inference.fp32.transformer_benchmark.input_generator_ts", "grpc.insecure_channel", "<builtin>.print", "<builtin>.min", "tensorflow_serving.apis.predict_pb2.PredictRequest", "<builtin>.enumerate", "tensorflow_serving.apis.prediction_service_pb2_grpc.PredictionServiceStub", "numpy.reshape", "tensorflow.make_tensor_proto", "time.time", "<builtin>.int", "tensorflow.io.gfile.GFile", "pandas.DataFrame"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.mlperf_gnmt": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.mlperf_gnmt.inference": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.mlperf_gnmt.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.mlperf_gnmt.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.mlperf_gnmt.inference.fp32.model_init.ModelInitializer.__init__": ["common.base_model_init.set_env_var", "os.path.join", "os.path.realpath", "os.path.dirname", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.mlperf_gnmt.inference.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.training": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.training.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.training.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.training.bfloat16.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.super", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.training.bfloat16.model_init.ModelInitializer.run": ["os.chdir", "common.base_model_init.BaseModelInitializer.run_command", "os.getcwd"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.training.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.training.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.training.fp32.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.super", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.training.fp32.model_init.ModelInitializer.run": ["os.chdir", "common.base_model_init.BaseModelInitializer.run_command", "os.getcwd"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference.bfloat16.model_init.ModelInitializer.run": ["os.path.join", "<builtin>.print", "os.chdir", "os.getcwd", "os.environ.get", "os.system", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference.fp32.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference.fp32.model_init.ModelInitializer.run": ["os.path.join", "<builtin>.print", "os.chdir", "os.getcwd", "os.environ.get", "os.system", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference.int8": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference.int8.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference.int8.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.super", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "<builtin>.str", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_mlperf.inference.int8.model_init.ModelInitializer.run": ["os.path.join", "<builtin>.print", "os.chdir", "os.getcwd", "os.environ.get", "os.system", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.bert": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.bert.inference": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.bert.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.bert.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.bert.inference.fp32.model_init.ModelInitializer.__init__": ["<builtin>.format", "os.path.join", "os.path.realpath", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "argparse.ArgumentParser", "os.path.dirname"], "<builtin>.format": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.bert.inference.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_lt_official": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_lt_official.inference": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_lt_official.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_lt_official.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_lt_official.inference.fp32.model_init.ModelInitializer.run_inference_sanity_checks": ["<builtin>.print", "sys.exit"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_lt_official.inference.fp32.model_init.ModelInitializer.__init__": ["os.path.join", "os.path.realpath", "os.path.dirname", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.super", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_lt_official.inference.fp32.model_init.ModelInitializer.run_inference_sanity_checks", "common.base_model_init.set_env_var", "argparse.ArgumentParser", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads"], "...repos_filtered.IntelAI.models.benchmarks.language_translation.tensorflow.transformer_lt_official.inference.fp32.model_init.ModelInitializer.run": ["os.chdir", "common.base_model_init.BaseModelInitializer.run_command", "os.getcwd", "os.system"], "...repos_filtered.IntelAI.models.benchmarks.text_to_speech": [], "...repos_filtered.IntelAI.models.benchmarks.text_to_speech.tensorflow": [], "...repos_filtered.IntelAI.models.benchmarks.text_to_speech.tensorflow.wavenet": [], "...repos_filtered.IntelAI.models.benchmarks.text_to_speech.tensorflow.wavenet.inference": [], "...repos_filtered.IntelAI.models.benchmarks.text_to_speech.tensorflow.wavenet.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.text_to_speech.tensorflow.wavenet.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.text_to_speech.tensorflow.wavenet.inference.fp32.model_init.ModelInitializer.__init__": ["...repos_filtered.IntelAI.models.benchmarks.text_to_speech.tensorflow.wavenet.inference.fp32.model_init.ModelInitializer.parse_custom_args", "os.path.join", "os.path.realpath", "<builtin>.super", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "<builtin>.int", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.text_to_speech.tensorflow.wavenet.inference.fp32.model_init.ModelInitializer.parse_custom_args": ["argparse.ArgumentParser"], "...repos_filtered.IntelAI.models.benchmarks.text_to_speech.tensorflow.wavenet.inference.fp32.model_init.ModelInitializer.run": ["os.chdir", "common.base_model_init.BaseModelInitializer.run_command", "os.getcwd"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.training": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.training.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.training.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.training.bfloat16.model_init.ModelInitializer.__init__": ["<builtin>.range", "time.strftime", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "<builtin>.print", "time.gmtime", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "<builtin>.int", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.training.bfloat16.model_init.ModelInitializer.run": ["<builtin>.print", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.training.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.training.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.training.fp32.model_init.ModelInitializer.__init__": ["<builtin>.range", "time.strftime", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "<builtin>.print", "time.gmtime", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "<builtin>.int", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.training.fp32.model_init.ModelInitializer.run": ["<builtin>.print", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.inference": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.inference.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.inference.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.inference.bfloat16.model_init.ModelInitializer.__init__": ["<builtin>.ValueError", "os.path.realpath", "os.path.exists", "os.path.join", "os.path.isabs", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "os.getenv", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "argparse.ArgumentParser", "common.base_model_init.set_env_var", "sys.exit", "os.listdir", "os.path.dirname"], "os.path.isabs": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.inference.bfloat16.model_init.ModelInitializer.run": ["os.path.join", "<builtin>.print", "os.path.exists", "os.system", "<builtin>.str", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.inference.fp32.model_init.ModelInitializer.__init__": ["<builtin>.ValueError", "os.path.realpath", "os.path.exists", "os.path.join", "os.path.isabs", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "os.getenv", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "argparse.ArgumentParser", "common.base_model_init.set_env_var", "sys.exit", "os.listdir", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_large.inference.fp32.model_init.ModelInitializer.run": ["os.path.join", "<builtin>.print", "os.path.exists", "os.system", "<builtin>.str", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.training": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.training.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.training.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.training.bfloat16.model_init.ModelInitializer.__init__": ["<builtin>.range", "time.strftime", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "<builtin>.print", "time.gmtime", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "<builtin>.int", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.training.bfloat16.model_init.ModelInitializer.run": ["<builtin>.print", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.training.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.training.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.training.fp32.model_init.ModelInitializer.__init__": ["<builtin>.range", "time.strftime", "<builtin>.ValueError", "os.path.realpath", "os.path.join", "<builtin>.print", "time.gmtime", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "<builtin>.str", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "common.base_model_init.set_env_var", "<builtin>.int", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.training.fp32.model_init.ModelInitializer.run": ["<builtin>.print", "common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference.bfloat16": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference.bfloat16.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference.bfloat16.model_init.ModelInitializer.__init__": ["<builtin>.ValueError", "os.path.realpath", "os.path.join", "<builtin>.print", "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference.bfloat16.model_init.ModelInitializer.__init__.expand_data_path", "<builtin>.super", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "<builtin>.str", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference.bfloat16.model_init.ModelInitializer.__init__.expand_data_path": ["os.path.join", "os.path.isabs"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference.bfloat16.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference.fp32": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference.fp32.model_init": [], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference.fp32.model_init.ModelInitializer.__init__": ["<builtin>.ValueError", "os.path.realpath", "os.path.join", "<builtin>.print", "<builtin>.super", "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference.fp32.model_init.ModelInitializer.__init__.expand_data_path", "common.base_model_init.BaseModelInitializer.get_command_prefix", "common.base_model_init.BaseModelInitializer.set_kmp_vars", "common.base_model_init.BaseModelInitializer.set_num_inter_intra_threads", "<builtin>.str", "argparse.ArgumentParser", "os.path.dirname"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference.fp32.model_init.ModelInitializer.__init__.expand_data_path": ["os.path.join", "os.path.isabs"], "...repos_filtered.IntelAI.models.benchmarks.language_modeling.tensorflow.bert_base.inference.fp32.model_init.ModelInitializer.run": ["common.base_model_init.BaseModelInitializer.run_command"], "...repos_filtered.IntelAI.models.dockerfiles": [], "...repos_filtered.IntelAI.models.dockerfiles.ml": [], "...repos_filtered.IntelAI.models.dockerfiles.ml.scikit-learn": [], "...repos_filtered.IntelAI.models.dockerfiles.ml.scikit-learn.census_modin": ["<builtin>.range", "sklearn.metrics.r2_score", "<builtin>.len", "<builtin>.pow", "<builtin>.print", "<builtin>.sum", "sklearn.linear_model.Ridge", "sklearn.metrics.mean_squared_error", "modin.pandas.read_csv", "numpy.ascontiguousarray", "sklearn.model_selection.train_test_split", "sklearn.config_context"], "modin.pandas.read_csv": [], "sklearn.linear_model.Ridge": [], "numpy.ascontiguousarray": [], "sklearn.model_selection.train_test_split": [], "sklearn.config_context": [], "sklearn.metrics.mean_squared_error": [], "sklearn.metrics.r2_score": [], "<builtin>.pow": []}