{"...repos_filtered.pymc-learn.pymc-learn.setup": ["codecs.open", "os.path.join", "os.path.realpath", "setuptools.setup", "setuptools.find_packages", "...repos_filtered.pymc-learn.pymc-learn.setup.get_version", "os.path.dirname"], "...repos_filtered.pymc-learn.pymc-learn.setup.get_version": ["os.path.join", "codecs.open", "<builtin>.RuntimeError", "re.search"], "...repos_filtered.pymc-learn.pymc-learn.docs.conf": ["os.path.abspath", "sys.path.insert"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianModel._inference": ["...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianModel._nuts_inference", "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianModel._advi_inference", "exceptions.NotFittedError"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianModel._advi_inference": ["pymc3.fit", "pymc3.summary", "pymc3.ADVI"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianModel._nuts_inference": ["pymc3.NUTS", "pymc3.summary", "pymc3.sample"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianModel._set_default_inference_args": ["pymc3.callbacks.CheckParametersConvergence"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianModel.save": ["joblib.dump", "<builtin>.open"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianModel.load": ["joblib.load"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianModel.plot_elbo": ["matplotlib.pyplot.ylabel", "matplotlib.pyplot.plot", "exceptions.NotFittedError", "seaborn.despine", "seaborn.set_style", "matplotlib.pyplot.xlabel"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianRegressorMixin.fit": ["numpy.squeeze", "sklearn.base.RegressorMixin._set_default_inference_args", "pymc3.Minibatch", "sklearn.base.RegressorMixin._inference", "sklearn.base.RegressorMixin.create_model", "sklearn.base.RegressorMixin._set_shared_vars"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianRegressorMixin.predict": ["numpy.zeros", "exceptions.NotFittedError", "sklearn.base.RegressorMixin.create_model", "pymc3.sample_ppc", "sklearn.base.RegressorMixin._set_shared_vars"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianClassifierMixin.fit": ["numpy.squeeze", "sklearn.base.ClassifierMixin._set_default_inference_args", "sklearn.base.ClassifierMixin.create_model", "pymc3.Minibatch", "sklearn.base.ClassifierMixin._set_shared_vars", "sklearn.base.ClassifierMixin._inference"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianClassifierMixin.predict_proba": ["numpy.zeros", "sklearn.base.ClassifierMixin.create_model", "exceptions.NotFittedError", "pymc3.sample_ppc", "sklearn.base.ClassifierMixin._set_shared_vars"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianClassifierMixin.predict": ["...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianClassifierMixin.predict_proba"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianDensityMixin.fit": ["sklearn.base.DensityMixin.create_model", "pymc3.Minibatch", "sklearn.base.DensityMixin._inference", "sklearn.base.DensityMixin._set_shared_vars", "sklearn.base.DensityMixin._set_default_inference_args"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianDensityMixin.predict_proba": ["<builtin>.len", "numpy.array", "pymc3.Dirichlet", "sklearn.base.DensityMixin.create_model", "sklearn.base.DensityMixin._set_shared_vars", "exceptions.NotFittedError", "pymc3.sample_ppc"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianDensityMixin.predict": ["...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianDensityMixin.predict_proba"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianDensityMixin.score": ["sklearn.metrics.accuracy_score", "...repos_filtered.pymc-learn.pymc-learn.pmlearn.base.BayesianDensityMixin.predict"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.GaussianProcessRegressorMixin.predict": ["base.BayesianRegressorMixin._set_shared_vars", "numpy.zeros", "exceptions.NotFittedError", "base.BayesianRegressorMixin.create_model", "pymc3.sample_ppc"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.GaussianProcessRegressor.__init__": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.GaussianProcessRegressor.create_model": ["pymc3.gp.mean.Constant", "numpy.zeros", "pymc3.Model", "kernels.RBF", "pymc3.Gamma", "pymc3.gp.Latent", "pymc3.Normal", "theano.shared", "pymc3.HalfCauchy", "pymc3.gp.mean.Zero"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.GaussianProcessRegressor.save": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.GaussianProcessRegressor.load": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.StudentsTProcessRegressor.__init__": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.StudentsTProcessRegressor.create_model": ["pymc3.gp.mean.Constant", "numpy.zeros", "pymc3.Model", "kernels.RBF", "pymc3.Gamma", "pymc3.gp.Latent", "pymc3.StudentT", "theano.shared", "pymc3.HalfCauchy", "pymc3.gp.mean.Zero"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.StudentsTProcessRegressor.save": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.StudentsTProcessRegressor.load": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.SparseGaussianProcessRegressor.__init__": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.SparseGaussianProcessRegressor.create_model": ["pymc3.gp.mean.Constant", "numpy.zeros", "pymc3.Model", "kernels.RBF", "pymc3.gp.MarginalSparse", "pymc3.Gamma", "pymc3.gp.util.kmeans_inducing_points", "theano.shared", "pymc3.HalfCauchy", "pymc3.gp.mean.Zero"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.SparseGaussianProcessRegressor.save": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.gpr.SparseGaussianProcessRegressor.load": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.kernels.WhiteKernel.__init__": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestGaussianProcessRegressor.setup_method": ["numpy.eye", "tempfile.mkdtemp", "numpy.random.multivariate_normal", "numpy.random.randn", "numpy.linspace", "pymc3.gp.cov.ExpQuad", "sklearn.model_selection.train_test_split", "pmlearn.gaussian_process.GaussianProcessRegressor", "pymc3.gp.mean.Zero"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestGaussianProcessRegressor.teardown_method": ["shutil.rmtree"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestGaussianProcessRegressorFit.test_advi_fit_returns_correct_model": ["numpy.testing.assert_equal", "<builtin>.print", "numpy.testing.assert_almost_equal"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestGaussianProcessRegressorPredict.test_predict_returns_predictions": ["numpy.testing.assert_equal", "<builtin>.print"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestGaussianProcessRegressorPredict.test_predict_returns_mean_predictions_and_std": ["numpy.testing.assert_equal", "<builtin>.print"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestGaussianProcessRegressorPredict.test_predict_raises_error_if_not_fit": ["<builtin>.print", "pytest.raises", "pmlearn.gaussian_process.GaussianProcessRegressor"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestGaussianProcessRegressorScore.test_score_matches_sklearn_performance": ["<builtin>.print", "numpy.testing.assert_almost_equal", "sklearn.gaussian_process.GaussianProcessRegressor"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestGaussianProcessRegressorSaveAndLoad.test_save_and_load_work_correctly": ["pymc3.summary", "<builtin>.print", "pandas.testing.assert_frame_equal", "numpy.testing.assert_equal", "numpy.testing.assert_almost_equal", "pmlearn.gaussian_process.GaussianProcessRegressor"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestStudentsTProcessRegressor.setup_method": ["numpy.eye", "tempfile.mkdtemp", "numpy.random.standard_t", "numpy.random.multivariate_normal", "numpy.linspace", "pymc3.gp.cov.ExpQuad", "sklearn.model_selection.train_test_split", "pmlearn.gaussian_process.StudentsTProcessRegressor", "pymc3.gp.mean.Zero"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestStudentsTProcessRegressor.tearDown": ["shutil.rmtree"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestStudentsTProcessRegressorFit.test_advi_fit_returns_correct_model": ["numpy.testing.assert_equal", "<builtin>.print", "numpy.testing.assert_almost_equal"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestStudentsTProcessRegressorPredict.test_predict_returns_predictions": ["numpy.testing.assert_equal", "<builtin>.print"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestStudentsTProcessRegressorPredict.test_predict_returns_mean_predictions_and_std": ["numpy.testing.assert_equal", "<builtin>.print"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestStudentsTProcessRegressorPredict.test_predict_raises_error_if_not_fit": ["<builtin>.print", "pmlearn.gaussian_process.StudentsTProcessRegressor", "pytest.raises"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestStudentsTProcessRegressorScore.test_score_matches_sklearn_performance": ["<builtin>.print", "numpy.testing.assert_almost_equal", "sklearn.gaussian_process.GaussianProcessRegressor"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestStudentsTProcessRegressorSaveAndLoad.test_save_and_load_work_correctly": ["pymc3.summary", "<builtin>.print", "numpy.testing.assert_almost_equal", "pandas.testing.assert_frame_equal", "numpy.testing.assert_equal", "pmlearn.gaussian_process.StudentsTProcessRegressor"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestSparseGaussianProcessRegressor.setup_method": ["numpy.eye", "pmlearn.gaussian_process.SparseGaussianProcessRegressor", "tempfile.mkdtemp", "numpy.random.multivariate_normal", "numpy.random.randn", "numpy.linspace", "pymc3.gp.cov.ExpQuad", "sklearn.model_selection.train_test_split", "pymc3.gp.mean.Zero"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestSparseGaussianProcessRegressor.teardown_method": ["shutil.rmtree"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestSparseGaussianProcessRegressorFit.test_advi_fit_returns_correct_model": ["numpy.testing.assert_equal", "<builtin>.print", "numpy.testing.assert_almost_equal"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestSparseGaussianProcessRegressorPredict.test_predict_returns_predictions": ["numpy.testing.assert_equal", "<builtin>.print"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestSparseGaussianProcessRegressorPredict.test_predict_returns_mean_predictions_and_std": ["numpy.testing.assert_equal", "<builtin>.print"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestSparseGaussianProcessRegressorPredict.test_predict_raises_error_if_not_fit": ["<builtin>.print", "pytest.raises", "pmlearn.gaussian_process.SparseGaussianProcessRegressor"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestSparseGaussianProcessRegressorScore.test_score_matches_sklearn_performance": ["<builtin>.print", "numpy.testing.assert_almost_equal", "sklearn.gaussian_process.GaussianProcessRegressor"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.gaussian_process.tests.test_gpr.TestSparseGaussianProcessRegressorSaveAndLoad.test_save_and_load_work_correctly": ["pmlearn.gaussian_process.SparseGaussianProcessRegressor", "pymc3.summary", "<builtin>.print", "pandas.testing.assert_frame_equal", "numpy.testing.assert_equal", "numpy.testing.assert_almost_equal"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.tests.test_base.TestBayesianModel.test_create_model_raises_not_implemented_error": ["base.BayesianModel", "pytest.raises"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.logistic.LogisticRegression.__init__": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.logistic.LogisticRegression.create_model": ["numpy.zeros", "pymc3.Model", "pymc3.Bernoulli", "pymc3.Normal", "theano.tensor.sum", "pymc3.invlogit", "theano.shared"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.logistic.LogisticRegression.save": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.logistic.LogisticRegression.load": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.logistic.HierarchicalLogisticRegression.__init__": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.logistic.HierarchicalLogisticRegression.create_model": ["numpy.zeros", "pymc3.Model", "pymc3.Bernoulli", "pymc3.Normal", "theano.tensor.sum", "pymc3.invlogit", "pymc3.HalfNormal", "theano.shared"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.logistic.HierarchicalLogisticRegression.save": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.logistic.HierarchicalLogisticRegression.load": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.base.BayesianLinearClassifierMixin.fit": ["numpy.squeeze", "sklearn.base.ClassifierMixin._set_default_inference_args", "<builtin>.len", "sklearn.base.ClassifierMixin.create_model", "pymc3.Minibatch", "sklearn.base.ClassifierMixin._set_shared_vars", "numpy.unique", "sklearn.base.ClassifierMixin._inference"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.base.BayesianLinearClassifierMixin.predict_proba": ["numpy.zeros", "sklearn.base.ClassifierMixin.create_model", "exceptions.NotFittedError", "pymc3.sample_ppc", "sklearn.base.ClassifierMixin._set_shared_vars"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.base.BayesianLinearClassifierMixin.predict": ["...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.base.BayesianLinearClassifierMixin.predict_proba"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.base.BayesianLinearClassifierMixin.score": ["...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.base.BayesianLinearClassifierMixin.predict", "sklearn.metrics.accuracy_score"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.base.LinearRegression.__init__": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.base.LinearRegression.create_model": ["numpy.zeros", "pymc3.Model", "pymc3.Normal", "theano.tensor.sum", "pymc3.HalfNormal", "theano.shared"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.base.LinearRegression.save": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.base.LinearRegression.load": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_logistic.TestHierarchicalLogisticRegression.setup_method": ["numpy.random.binomial", "numpy.zeros", "numpy.sum", "numpy.concatenate", "tempfile.mkdtemp", "pmlearn.linear_model.HierarchicalLogisticRegression", "numpy.random.randn", "sklearn.model_selection.train_test_split", "numpy.ones", "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_logistic.TestHierarchicalLogisticRegression.setup_method.numpy_invlogit"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_logistic.TestHierarchicalLogisticRegression.setup_method.numpy_invlogit": ["numpy.exp"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_logistic.TestHierarchicalLogisticRegression.teardown_method": ["shutil.rmtree"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_logistic.TestHierarchicalLogisticRegressionFit.test_advi_fit_returns_correct_model": ["numpy.testing.assert_equal", "<builtin>.print", "numpy.sign"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_logistic.TestHierarchicalLogisticRegressionPredictProba.test_predict_proba_returns_probabilities": ["numpy.testing.assert_equal", "<builtin>.print"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_logistic.TestHierarchicalLogisticRegressionPredictProba.test_predict_proba_returns_probabilities_and_std": ["numpy.testing.assert_equal", "<builtin>.print"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_logistic.TestHierarchicalLogisticRegressionPredictProba.test_predict_proba_raises_error_if_not_fit": ["pytest.raises", "pmlearn.linear_model.HierarchicalLogisticRegression"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_logistic.TestHierarchicalLogisticRegressionPredict.test_predict_returns_predictions": ["numpy.testing.assert_equal", "<builtin>.print"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_logistic.TestHierarchicalLogisticRegressionScore.test_score_scores": ["<builtin>.print", "numpy.testing.assert_array_less", "numpy.mean"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_logistic.TestHierarchicalLogisticRegressionSaveandLoad.test_save_and_load_work_correctly": ["pymc3.summary", "<builtin>.print", "pmlearn.linear_model.HierarchicalLogisticRegression", "pandas.testing.assert_frame_equal", "numpy.testing.assert_equal", "numpy.testing.assert_almost_equal"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_base.TestLinearRegression.setup_method": ["numpy.squeeze", "pmlearn.linear_model.LinearRegression", "tempfile.mkdtemp", "numpy.random.randn", "sklearn.model_selection.train_test_split"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_base.TestLinearRegression.teardown_method": ["shutil.rmtree"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_base.TestLinearRegressionFit.test_advi_fit_returns_correct_model": ["numpy.testing.assert_equal", "<builtin>.print", "numpy.testing.assert_almost_equal"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_base.TestLinearRegressionFit.test_nuts_fit_returns_correct_model": ["numpy.testing.assert_equal", "<builtin>.print", "numpy.testing.assert_almost_equal"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_base.TestLinearRegressionPredict.test_predict_returns_predictions": ["numpy.testing.assert_equal", "<builtin>.print"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_base.TestLinearRegressionPredict.test_predict_returns_mean_predictions_and_std": ["numpy.testing.assert_equal", "<builtin>.print"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_base.TestLinearRegressionPredict.test_predict_raises_error_if_not_fit": ["pytest.raises", "pmlearn.linear_model.LinearRegression"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_base.TestLinearRegressionScore.test_score_matches_sklearn_performance": ["<builtin>.print", "numpy.testing.assert_almost_equal", "sklearn.linear_model.LinearRegression"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.linear_model.tests.test_base.TestLinearRegressionSaveandLoad.test_save_and_load_work_correctly": ["pymc3.summary", "pmlearn.linear_model.LinearRegression", "<builtin>.print", "pandas.testing.assert_frame_equal", "numpy.testing.assert_equal", "numpy.testing.assert_almost_equal"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.neural_network.multilayer_perceptron.MLPClassifier.__init__": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.neural_network.multilayer_perceptron.MLPClassifier.create_model": ["<builtin>.len", "numpy.zeros", "pymc3.Model", "pymc3.math.dot", "pymc3.math.tanh", "pymc3.Bernoulli", "numpy.random.randn", "pymc3.Normal", "pymc3.math.sigmoid", "theano.shared"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.neural_network.multilayer_perceptron.MLPClassifier.save": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.neural_network.multilayer_perceptron.MLPClassifier.load": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.dirichlet_process.DirichletProcessMixture.__init__": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.dirichlet_process.DirichletProcessMixture.create_model": ["<builtin>.range", "numpy.eye", "numpy.zeros", "pymc3.Model", "pymc3.Normal.dist", "pymc3.LKJCholeskyCov", "theano.tensor.stack", "pymc3.Beta", "pymc3.Gamma", "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.dirichlet_process.DirichletProcessMixture.create_model.stick_breaking", "pymc3.DensityDist", "pymc3.MvNormal", "pymc3.Deterministic", "util.logp_gmix", "pymc3.HalfNormal.dist", "pymc3.expand_packed_triangular", "theano.shared", "pymc3.Uniform"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.dirichlet_process.DirichletProcessMixture.create_model.stick_breaking": ["theano.tensor.concatenate", "theano.tensor.extra_ops.cumprod"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.dirichlet_process.DirichletProcessMixture.predict_proba": ["<builtin>.len", "base.BayesianModel._set_shared_vars", "exceptions.NotFittedError", "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.dirichlet_process.DirichletProcessMixture.create_model", "pymc3.sample_ppc"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.dirichlet_process.DirichletProcessMixture.save": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.dirichlet_process.DirichletProcessMixture.load": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.util.logp_gmix.__call__": ["...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.util.logp_gmix.__call__.logp_normal", "theano.tensor.log", "<builtin>.enumerate", "theano.tensor.stacklists", "theano.tensor.sum", "pymc3.math.logsumexp"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.util.logp_gmix.__call__.logp_normal": ["...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.util.logp_gmix.__call__.logp_normal.delta", "theano.tensor.log", "theano.tensor.nlinalg.det"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.gaussian_mixture.GaussianMixture.__init__": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.gaussian_mixture.GaussianMixture.create_model": ["<builtin>.range", "numpy.zeros", "pymc3.Model", "pymc3.Dirichlet", "pymc3.LKJCholeskyCov", "theano.tensor.stack", "pymc3.MvNormal.dist", "pymc3.Mixture", "numpy.ones", "pymc3.HalfNormal.dist", "pymc3.expand_packed_triangular", "theano.shared", "pymc3.Uniform"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.gaussian_mixture.GaussianMixture.save": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.gaussian_mixture.GaussianMixture.load": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.tests.test_gaussian_mixture.GaussianMixtureTestCase.setUp": ["numpy.array", "tempfile.mkdtemp", "pmlearn.mixture.GaussianMixture", "sklearn.model_selection.train_test_split", "numpy.random.normal", "numpy.random.randint"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.tests.test_gaussian_mixture.GaussianMixtureTestCase.tearDown": ["shutil.rmtree"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.tests.test_gaussian_mixture.GaussianMixturePredictTestCase.test_predict_raises_error_if_not_fit": ["unittest.TestCase.assertRaises", "unittest.TestCase.assertEqual", "<builtin>.print", "pmlearn.mixture.GaussianMixture", "<builtin>.str"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.tests.test_dirichlet_process.DirichletProcessMixtureTestCase.setUp": ["numpy.array", "tempfile.mkdtemp", "pmlearn.mixture.DirichletProcessMixture", "sklearn.model_selection.train_test_split", "numpy.random.normal", "numpy.random.randint"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.tests.test_dirichlet_process.DirichletProcessMixtureTestCase.tearDown": ["shutil.rmtree"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.mixture.tests.test_dirichlet_process.DirichletProcessMixturePredictTestCase.test_predict_raises_error_if_not_fit": ["unittest.TestCase.assertRaises", "<builtin>.print", "unittest.TestCase.assertEqual", "pmlearn.mixture.DirichletProcessMixture", "<builtin>.str"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.naive_bayes.naive_bayes.GaussianNBClassifierMixin.fit": ["<builtin>.len", "base.BayesianClassifierMixin._set_shared_vars", "pymc3.Minibatch", "base.BayesianClassifierMixin._set_default_inference_args", "base.BayesianClassifierMixin.create_model", "base.BayesianClassifierMixin._inference", "numpy.unique"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.naive_bayes.naive_bayes.GaussianNBClassifierMixin.predict_proba": ["<builtin>.range", "<builtin>.len", "numpy.array", "numpy.sum", "functools.reduce", "...repos_filtered.pymc-learn.pymc-learn.pmlearn.naive_bayes.naive_bayes.GaussianNBClassifierMixin.normalize", "numpy.vstack", "exceptions.NotFittedError"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.naive_bayes.naive_bayes.GaussianNBClassifierMixin.normalize": ["numpy.sum"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.naive_bayes.naive_bayes.GaussianNBClassifierMixin.predict": ["...repos_filtered.pymc-learn.pymc-learn.pmlearn.naive_bayes.naive_bayes.GaussianNBClassifierMixin.predict_proba", "numpy.argmax"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.naive_bayes.naive_bayes.GaussianNB.__init__": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.naive_bayes.naive_bayes.GaussianNB.create_model": ["numpy.zeros", "pymc3.Model", "pymc3.Dirichlet", "pymc3.Normal", "numpy.ones", "pymc3.HalfNormal", "theano.shared", "pymc3.Categorical"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.naive_bayes.naive_bayes.GaussianNB.save": ["<builtin>.super"], "...repos_filtered.pymc-learn.pymc-learn.pmlearn.naive_bayes.naive_bayes.GaussianNB.load": ["<builtin>.super"]}